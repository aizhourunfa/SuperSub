{
  "version": 3,
  "sources": ["../../../node_modules/hono/dist/compose.js", "../../../node_modules/hono/dist/request/constants.js", "../../../node_modules/hono/dist/utils/body.js", "../../../node_modules/hono/dist/utils/url.js", "../../../node_modules/hono/dist/request.js", "../../../node_modules/hono/dist/utils/html.js", "../../../node_modules/hono/dist/context.js", "../../../node_modules/hono/dist/router.js", "../../../node_modules/hono/dist/utils/constants.js", "../../../node_modules/hono/dist/hono-base.js", "../../../node_modules/hono/dist/router/reg-exp-router/node.js", "../../../node_modules/hono/dist/router/reg-exp-router/trie.js", "../../../node_modules/hono/dist/router/reg-exp-router/router.js", "../../../node_modules/hono/dist/router/smart-router/router.js", "../../../node_modules/hono/dist/router/trie-router/node.js", "../../../node_modules/hono/dist/router/trie-router/router.js", "../../../node_modules/hono/dist/hono.js", "../../../node_modules/hono/dist/adapter/cloudflare-pages/handler.js", "../../../node_modules/bcrypt-ts/src/nextTick/browser.ts", "../../../node_modules/bcrypt-ts/src/constant.ts", "../../../node_modules/bcrypt-ts/src/base64.ts", "../../../node_modules/bcrypt-ts/src/crypt.ts", "../../../node_modules/bcrypt-ts/src/random/browser.ts", "../../../node_modules/bcrypt-ts/src/utils.ts", "../../../node_modules/bcrypt-ts/src/salt.ts", "../../../node_modules/bcrypt-ts/src/uft8.ts", "../../../node_modules/bcrypt-ts/src/hash.ts", "../../../node_modules/bcrypt-ts/src/compare.ts", "../../../node_modules/bcrypt-ts/src/helpers.ts", "../../../node_modules/hono/dist/utils/encode.js", "../../../node_modules/hono/dist/utils/jwt/jwa.js", "../../../node_modules/hono/dist/helper/adapter/index.js", "../../../node_modules/hono/dist/utils/jwt/types.js", "../../../node_modules/hono/dist/utils/jwt/utf8.js", "../../../node_modules/hono/dist/utils/jwt/jws.js", "../../../node_modules/hono/dist/utils/jwt/jwt.js", "../../../node_modules/hono/dist/utils/jwt/index.js", "../../../node_modules/hono/dist/middleware/jwt/jwt.js", "../../../functions/api/%5B%5Bpath%5D%5D.ts", "../pages-aDHk8c/functionsRoutes-0.527672839168092.mjs", "../../../node_modules/path-to-regexp/src/index.ts", "../../../node_modules/wrangler/templates/pages-template-worker.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-mTsvHt/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-mTsvHt/middleware-loader.entry.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-dcyCgH/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-dcyCgH/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/mac/Progame/SuperSub/.wrangler/tmp/dev-dP2Odn",
  "sourcesContent": ["// src/compose.ts\nvar compose = (middleware, onError, onNotFound) => {\n  return (context, next) => {\n    let index = -1;\n    return dispatch(0);\n    async function dispatch(i) {\n      if (i <= index) {\n        throw new Error(\"next() called multiple times\");\n      }\n      index = i;\n      let res;\n      let isError = false;\n      let handler;\n      if (middleware[i]) {\n        handler = middleware[i][0][0];\n        context.req.routeIndex = i;\n      } else {\n        handler = i === middleware.length && next || void 0;\n      }\n      if (handler) {\n        try {\n          res = await handler(context, () => dispatch(i + 1));\n        } catch (err) {\n          if (err instanceof Error && onError) {\n            context.error = err;\n            res = await onError(err, context);\n            isError = true;\n          } else {\n            throw err;\n          }\n        }\n      } else {\n        if (context.finalized === false && onNotFound) {\n          res = await onNotFound(context);\n        }\n      }\n      if (res && (context.finalized === false || isError)) {\n        context.res = res;\n      }\n      return context;\n    }\n  };\n};\nexport {\n  compose\n};\n", "// src/request/constants.ts\nvar GET_MATCH_RESULT = Symbol();\nexport {\n  GET_MATCH_RESULT\n};\n", "// src/utils/body.ts\nimport { HonoRequest } from \"../request.js\";\nvar parseBody = async (request, options = /* @__PURE__ */ Object.create(null)) => {\n  const { all = false, dot = false } = options;\n  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;\n  const contentType = headers.get(\"Content-Type\");\n  if (contentType?.startsWith(\"multipart/form-data\") || contentType?.startsWith(\"application/x-www-form-urlencoded\")) {\n    return parseFormData(request, { all, dot });\n  }\n  return {};\n};\nasync function parseFormData(request, options) {\n  const formData = await request.formData();\n  if (formData) {\n    return convertFormDataToBodyData(formData, options);\n  }\n  return {};\n}\nfunction convertFormDataToBodyData(formData, options) {\n  const form = /* @__PURE__ */ Object.create(null);\n  formData.forEach((value, key) => {\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\n    if (!shouldParseAllValues) {\n      form[key] = value;\n    } else {\n      handleParsingAllValues(form, key, value);\n    }\n  });\n  if (options.dot) {\n    Object.entries(form).forEach(([key, value]) => {\n      const shouldParseDotValues = key.includes(\".\");\n      if (shouldParseDotValues) {\n        handleParsingNestedValues(form, key, value);\n        delete form[key];\n      }\n    });\n  }\n  return form;\n}\nvar handleParsingAllValues = (form, key, value) => {\n  if (form[key] !== void 0) {\n    if (Array.isArray(form[key])) {\n      ;\n      form[key].push(value);\n    } else {\n      form[key] = [form[key], value];\n    }\n  } else {\n    if (!key.endsWith(\"[]\")) {\n      form[key] = value;\n    } else {\n      form[key] = [value];\n    }\n  }\n};\nvar handleParsingNestedValues = (form, key, value) => {\n  let nestedForm = form;\n  const keys = key.split(\".\");\n  keys.forEach((key2, index) => {\n    if (index === keys.length - 1) {\n      nestedForm[key2] = value;\n    } else {\n      if (!nestedForm[key2] || typeof nestedForm[key2] !== \"object\" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {\n        nestedForm[key2] = /* @__PURE__ */ Object.create(null);\n      }\n      nestedForm = nestedForm[key2];\n    }\n  });\n};\nexport {\n  parseBody\n};\n", "// src/utils/url.ts\nvar splitPath = (path) => {\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  return paths;\n};\nvar splitRoutingPath = (routePath) => {\n  const { groups, path } = extractGroupsFromPath(routePath);\n  const paths = splitPath(path);\n  return replaceGroupMarks(paths, groups);\n};\nvar extractGroupsFromPath = (path) => {\n  const groups = [];\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\n    const mark = `@${index}`;\n    groups.push([mark, match]);\n    return mark;\n  });\n  return { groups, path };\n};\nvar replaceGroupMarks = (paths, groups) => {\n  for (let i = groups.length - 1; i >= 0; i--) {\n    const [mark] = groups[i];\n    for (let j = paths.length - 1; j >= 0; j--) {\n      if (paths[j].includes(mark)) {\n        paths[j] = paths[j].replace(mark, groups[i][1]);\n        break;\n      }\n    }\n  }\n  return paths;\n};\nvar patternCache = {};\nvar getPattern = (label, next) => {\n  if (label === \"*\") {\n    return \"*\";\n  }\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n  if (match) {\n    const cacheKey = `${label}#${next}`;\n    if (!patternCache[cacheKey]) {\n      if (match[2]) {\n        patternCache[cacheKey] = next && next[0] !== \":\" && next[0] !== \"*\" ? [cacheKey, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];\n      } else {\n        patternCache[cacheKey] = [label, match[1], true];\n      }\n    }\n    return patternCache[cacheKey];\n  }\n  return null;\n};\nvar tryDecode = (str, decoder) => {\n  try {\n    return decoder(str);\n  } catch {\n    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {\n      try {\n        return decoder(match);\n      } catch {\n        return match;\n      }\n    });\n  }\n};\nvar tryDecodeURI = (str) => tryDecode(str, decodeURI);\nvar getPath = (request) => {\n  const url = request.url;\n  const start = url.indexOf(\"/\", url.indexOf(\":\") + 4);\n  let i = start;\n  for (; i < url.length; i++) {\n    const charCode = url.charCodeAt(i);\n    if (charCode === 37) {\n      const queryIndex = url.indexOf(\"?\", i);\n      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);\n      return tryDecodeURI(path.includes(\"%25\") ? path.replace(/%25/g, \"%2525\") : path);\n    } else if (charCode === 63) {\n      break;\n    }\n  }\n  return url.slice(start, i);\n};\nvar getQueryStrings = (url) => {\n  const queryIndex = url.indexOf(\"?\", 8);\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\n};\nvar getPathNoStrict = (request) => {\n  const result = getPath(request);\n  return result.length > 1 && result.at(-1) === \"/\" ? result.slice(0, -1) : result;\n};\nvar mergePath = (base, sub, ...rest) => {\n  if (rest.length) {\n    sub = mergePath(sub, ...rest);\n  }\n  return `${base?.[0] === \"/\" ? \"\" : \"/\"}${base}${sub === \"/\" ? \"\" : `${base?.at(-1) === \"/\" ? \"\" : \"/\"}${sub?.[0] === \"/\" ? sub.slice(1) : sub}`}`;\n};\nvar checkOptionalParameter = (path) => {\n  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(\":\")) {\n    return null;\n  }\n  const segments = path.split(\"/\");\n  const results = [];\n  let basePath = \"\";\n  segments.forEach((segment) => {\n    if (segment !== \"\" && !/\\:/.test(segment)) {\n      basePath += \"/\" + segment;\n    } else if (/\\:/.test(segment)) {\n      if (/\\?/.test(segment)) {\n        if (results.length === 0 && basePath === \"\") {\n          results.push(\"/\");\n        } else {\n          results.push(basePath);\n        }\n        const optionalSegment = segment.replace(\"?\", \"\");\n        basePath += \"/\" + optionalSegment;\n        results.push(basePath);\n      } else {\n        basePath += \"/\" + segment;\n      }\n    }\n  });\n  return results.filter((v, i, a) => a.indexOf(v) === i);\n};\nvar _decodeURI = (value) => {\n  if (!/[%+]/.test(value)) {\n    return value;\n  }\n  if (value.indexOf(\"+\") !== -1) {\n    value = value.replace(/\\+/g, \" \");\n  }\n  return value.indexOf(\"%\") !== -1 ? tryDecode(value, decodeURIComponent_) : value;\n};\nvar _getQueryParam = (url, key, multiple) => {\n  let encoded;\n  if (!multiple && key && !/[%+]/.test(key)) {\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\n    if (keyIndex2 === -1) {\n      keyIndex2 = url.indexOf(`&${key}`, 8);\n    }\n    while (keyIndex2 !== -1) {\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\n      if (trailingKeyCode === 61) {\n        const valueIndex = keyIndex2 + key.length + 2;\n        const endIndex = url.indexOf(\"&\", valueIndex);\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\n        return \"\";\n      }\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\n    }\n    encoded = /[%+]/.test(url);\n    if (!encoded) {\n      return void 0;\n    }\n  }\n  const results = {};\n  encoded ??= /[%+]/.test(url);\n  let keyIndex = url.indexOf(\"?\", 8);\n  while (keyIndex !== -1) {\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\n    let valueIndex = url.indexOf(\"=\", keyIndex);\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\n      valueIndex = -1;\n    }\n    let name = url.slice(\n      keyIndex + 1,\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\n    );\n    if (encoded) {\n      name = _decodeURI(name);\n    }\n    keyIndex = nextKeyIndex;\n    if (name === \"\") {\n      continue;\n    }\n    let value;\n    if (valueIndex === -1) {\n      value = \"\";\n    } else {\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\n      if (encoded) {\n        value = _decodeURI(value);\n      }\n    }\n    if (multiple) {\n      if (!(results[name] && Array.isArray(results[name]))) {\n        results[name] = [];\n      }\n      ;\n      results[name].push(value);\n    } else {\n      results[name] ??= value;\n    }\n  }\n  return key ? results[key] : results;\n};\nvar getQueryParam = _getQueryParam;\nvar getQueryParams = (url, key) => {\n  return _getQueryParam(url, key, true);\n};\nvar decodeURIComponent_ = decodeURIComponent;\nexport {\n  checkOptionalParameter,\n  decodeURIComponent_,\n  getPath,\n  getPathNoStrict,\n  getPattern,\n  getQueryParam,\n  getQueryParams,\n  getQueryStrings,\n  mergePath,\n  splitPath,\n  splitRoutingPath,\n  tryDecode\n};\n", "// src/request.ts\nimport { GET_MATCH_RESULT } from \"./request/constants.js\";\nimport { parseBody } from \"./utils/body.js\";\nimport { decodeURIComponent_, getQueryParam, getQueryParams, tryDecode } from \"./utils/url.js\";\nvar tryDecodeURIComponent = (str) => tryDecode(str, decodeURIComponent_);\nvar HonoRequest = class {\n  raw;\n  #validatedData;\n  #matchResult;\n  routeIndex = 0;\n  path;\n  bodyCache = {};\n  constructor(request, path = \"/\", matchResult = [[]]) {\n    this.raw = request;\n    this.path = path;\n    this.#matchResult = matchResult;\n    this.#validatedData = {};\n  }\n  param(key) {\n    return key ? this.#getDecodedParam(key) : this.#getAllDecodedParams();\n  }\n  #getDecodedParam(key) {\n    const paramKey = this.#matchResult[0][this.routeIndex][1][key];\n    const param = this.#getParamValue(paramKey);\n    return param && /\\%/.test(param) ? tryDecodeURIComponent(param) : param;\n  }\n  #getAllDecodedParams() {\n    const decoded = {};\n    const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);\n    for (const key of keys) {\n      const value = this.#getParamValue(this.#matchResult[0][this.routeIndex][1][key]);\n      if (value !== void 0) {\n        decoded[key] = /\\%/.test(value) ? tryDecodeURIComponent(value) : value;\n      }\n    }\n    return decoded;\n  }\n  #getParamValue(paramKey) {\n    return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;\n  }\n  query(key) {\n    return getQueryParam(this.url, key);\n  }\n  queries(key) {\n    return getQueryParams(this.url, key);\n  }\n  header(name) {\n    if (name) {\n      return this.raw.headers.get(name) ?? void 0;\n    }\n    const headerData = {};\n    this.raw.headers.forEach((value, key) => {\n      headerData[key] = value;\n    });\n    return headerData;\n  }\n  async parseBody(options) {\n    return this.bodyCache.parsedBody ??= await parseBody(this, options);\n  }\n  #cachedBody = (key) => {\n    const { bodyCache, raw } = this;\n    const cachedBody = bodyCache[key];\n    if (cachedBody) {\n      return cachedBody;\n    }\n    const anyCachedKey = Object.keys(bodyCache)[0];\n    if (anyCachedKey) {\n      return bodyCache[anyCachedKey].then((body) => {\n        if (anyCachedKey === \"json\") {\n          body = JSON.stringify(body);\n        }\n        return new Response(body)[key]();\n      });\n    }\n    return bodyCache[key] = raw[key]();\n  };\n  json() {\n    return this.#cachedBody(\"text\").then((text) => JSON.parse(text));\n  }\n  text() {\n    return this.#cachedBody(\"text\");\n  }\n  arrayBuffer() {\n    return this.#cachedBody(\"arrayBuffer\");\n  }\n  blob() {\n    return this.#cachedBody(\"blob\");\n  }\n  formData() {\n    return this.#cachedBody(\"formData\");\n  }\n  addValidatedData(target, data) {\n    this.#validatedData[target] = data;\n  }\n  valid(target) {\n    return this.#validatedData[target];\n  }\n  get url() {\n    return this.raw.url;\n  }\n  get method() {\n    return this.raw.method;\n  }\n  get [GET_MATCH_RESULT]() {\n    return this.#matchResult;\n  }\n  get matchedRoutes() {\n    return this.#matchResult[0].map(([[, route]]) => route);\n  }\n  get routePath() {\n    return this.#matchResult[0].map(([[, route]]) => route)[this.routeIndex].path;\n  }\n};\nexport {\n  HonoRequest\n};\n", "// src/utils/html.ts\nvar HtmlEscapedCallbackPhase = {\n  Stringify: 1,\n  BeforeStream: 2,\n  Stream: 3\n};\nvar raw = (value, callbacks) => {\n  const escapedString = new String(value);\n  escapedString.isEscaped = true;\n  escapedString.callbacks = callbacks;\n  return escapedString;\n};\nvar escapeRe = /[&<>'\"]/;\nvar stringBufferToString = async (buffer, callbacks) => {\n  let str = \"\";\n  callbacks ||= [];\n  const resolvedBuffer = await Promise.all(buffer);\n  for (let i = resolvedBuffer.length - 1; ; i--) {\n    str += resolvedBuffer[i];\n    i--;\n    if (i < 0) {\n      break;\n    }\n    let r = resolvedBuffer[i];\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    const isEscaped = r.isEscaped;\n    r = await (typeof r === \"object\" ? r.toString() : r);\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    if (r.isEscaped ?? isEscaped) {\n      str += r;\n    } else {\n      const buf = [str];\n      escapeToBuffer(r, buf);\n      str = buf[0];\n    }\n  }\n  return raw(str, callbacks);\n};\nvar escapeToBuffer = (str, buffer) => {\n  const match = str.search(escapeRe);\n  if (match === -1) {\n    buffer[0] += str;\n    return;\n  }\n  let escape;\n  let index;\n  let lastIndex = 0;\n  for (index = match; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 39:\n        escape = \"&#39;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    buffer[0] += str.substring(lastIndex, index) + escape;\n    lastIndex = index + 1;\n  }\n  buffer[0] += str.substring(lastIndex, index);\n};\nvar resolveCallbackSync = (str) => {\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return str;\n  }\n  const buffer = [str];\n  const context = {};\n  callbacks.forEach((c) => c({ phase: HtmlEscapedCallbackPhase.Stringify, buffer, context }));\n  return buffer[0];\n};\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\n  if (typeof str === \"object\" && !(str instanceof String)) {\n    if (!(str instanceof Promise)) {\n      str = str.toString();\n    }\n    if (str instanceof Promise) {\n      str = await str;\n    }\n  }\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return Promise.resolve(str);\n  }\n  if (buffer) {\n    buffer[0] += str;\n  } else {\n    buffer = [str];\n  }\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\n    (res) => Promise.all(\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\n    ).then(() => buffer[0])\n  );\n  if (preserveCallbacks) {\n    return raw(await resStr, callbacks);\n  } else {\n    return resStr;\n  }\n};\nexport {\n  HtmlEscapedCallbackPhase,\n  escapeToBuffer,\n  raw,\n  resolveCallback,\n  resolveCallbackSync,\n  stringBufferToString\n};\n", "// src/context.ts\nimport { HonoRequest } from \"./request.js\";\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"./utils/html.js\";\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\nvar setDefaultContentType = (contentType, headers) => {\n  return {\n    \"Content-Type\": contentType,\n    ...headers\n  };\n};\nvar Context = class {\n  #rawRequest;\n  #req;\n  env = {};\n  #var;\n  finalized = false;\n  error;\n  #status;\n  #executionCtx;\n  #res;\n  #layout;\n  #renderer;\n  #notFoundHandler;\n  #preparedHeaders;\n  #matchResult;\n  #path;\n  constructor(req, options) {\n    this.#rawRequest = req;\n    if (options) {\n      this.#executionCtx = options.executionCtx;\n      this.env = options.env;\n      this.#notFoundHandler = options.notFoundHandler;\n      this.#path = options.path;\n      this.#matchResult = options.matchResult;\n    }\n  }\n  get req() {\n    this.#req ??= new HonoRequest(this.#rawRequest, this.#path, this.#matchResult);\n    return this.#req;\n  }\n  get event() {\n    if (this.#executionCtx && \"respondWith\" in this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no FetchEvent\");\n    }\n  }\n  get executionCtx() {\n    if (this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no ExecutionContext\");\n    }\n  }\n  get res() {\n    return this.#res ||= new Response(null, {\n      headers: this.#preparedHeaders ??= new Headers()\n    });\n  }\n  set res(_res) {\n    if (this.#res && _res) {\n      _res = new Response(_res.body, _res);\n      for (const [k, v] of this.#res.headers.entries()) {\n        if (k === \"content-type\") {\n          continue;\n        }\n        if (k === \"set-cookie\") {\n          const cookies = this.#res.headers.getSetCookie();\n          _res.headers.delete(\"set-cookie\");\n          for (const cookie of cookies) {\n            _res.headers.append(\"set-cookie\", cookie);\n          }\n        } else {\n          _res.headers.set(k, v);\n        }\n      }\n    }\n    this.#res = _res;\n    this.finalized = true;\n  }\n  render = (...args) => {\n    this.#renderer ??= (content) => this.html(content);\n    return this.#renderer(...args);\n  };\n  setLayout = (layout) => this.#layout = layout;\n  getLayout = () => this.#layout;\n  setRenderer = (renderer) => {\n    this.#renderer = renderer;\n  };\n  header = (name, value, options) => {\n    if (this.finalized) {\n      this.#res = new Response(this.#res.body, this.#res);\n    }\n    const headers = this.#res ? this.#res.headers : this.#preparedHeaders ??= new Headers();\n    if (value === void 0) {\n      headers.delete(name);\n    } else if (options?.append) {\n      headers.append(name, value);\n    } else {\n      headers.set(name, value);\n    }\n  };\n  status = (status) => {\n    this.#status = status;\n  };\n  set = (key, value) => {\n    this.#var ??= /* @__PURE__ */ new Map();\n    this.#var.set(key, value);\n  };\n  get = (key) => {\n    return this.#var ? this.#var.get(key) : void 0;\n  };\n  get var() {\n    if (!this.#var) {\n      return {};\n    }\n    return Object.fromEntries(this.#var);\n  }\n  #newResponse(data, arg, headers) {\n    const responseHeaders = this.#res ? new Headers(this.#res.headers) : this.#preparedHeaders ?? new Headers();\n    if (typeof arg === \"object\" && \"headers\" in arg) {\n      const argHeaders = arg.headers instanceof Headers ? arg.headers : new Headers(arg.headers);\n      for (const [key, value] of argHeaders) {\n        if (key.toLowerCase() === \"set-cookie\") {\n          responseHeaders.append(key, value);\n        } else {\n          responseHeaders.set(key, value);\n        }\n      }\n    }\n    if (headers) {\n      for (const [k, v] of Object.entries(headers)) {\n        if (typeof v === \"string\") {\n          responseHeaders.set(k, v);\n        } else {\n          responseHeaders.delete(k);\n          for (const v2 of v) {\n            responseHeaders.append(k, v2);\n          }\n        }\n      }\n    }\n    const status = typeof arg === \"number\" ? arg : arg?.status ?? this.#status;\n    return new Response(data, { status, headers: responseHeaders });\n  }\n  newResponse = (...args) => this.#newResponse(...args);\n  body = (data, arg, headers) => this.#newResponse(data, arg, headers);\n  text = (text, arg, headers) => {\n    return !this.#preparedHeaders && !this.#status && !arg && !headers && !this.finalized ? new Response(text) : this.#newResponse(\n      text,\n      arg,\n      setDefaultContentType(TEXT_PLAIN, headers)\n    );\n  };\n  json = (object, arg, headers) => {\n    return this.#newResponse(\n      JSON.stringify(object),\n      arg,\n      setDefaultContentType(\"application/json\", headers)\n    );\n  };\n  html = (html, arg, headers) => {\n    const res = (html2) => this.#newResponse(html2, arg, setDefaultContentType(\"text/html; charset=UTF-8\", headers));\n    return typeof html === \"object\" ? resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then(res) : res(html);\n  };\n  redirect = (location, status) => {\n    const locationString = String(location);\n    this.header(\n      \"Location\",\n      !/[^\\x00-\\xFF]/.test(locationString) ? locationString : encodeURI(locationString)\n    );\n    return this.newResponse(null, status ?? 302);\n  };\n  notFound = () => {\n    this.#notFoundHandler ??= () => new Response();\n    return this.#notFoundHandler(this);\n  };\n};\nexport {\n  Context,\n  TEXT_PLAIN\n};\n", "// src/router.ts\nvar METHOD_NAME_ALL = \"ALL\";\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\nvar UnsupportedPathError = class extends Error {\n};\nexport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHODS,\n  METHOD_NAME_ALL,\n  METHOD_NAME_ALL_LOWERCASE,\n  UnsupportedPathError\n};\n", "// src/utils/constants.ts\nvar COMPOSED_HANDLER = \"__COMPOSED_HANDLER\";\nexport {\n  COMPOSED_HANDLER\n};\n", "// src/hono-base.ts\nimport { compose } from \"./compose.js\";\nimport { Context } from \"./context.js\";\nimport { METHODS, METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE } from \"./router.js\";\nimport { COMPOSED_HANDLER } from \"./utils/constants.js\";\nimport { getPath, getPathNoStrict, mergePath } from \"./utils/url.js\";\nvar notFoundHandler = (c) => {\n  return c.text(\"404 Not Found\", 404);\n};\nvar errorHandler = (err, c) => {\n  if (\"getResponse\" in err) {\n    const res = err.getResponse();\n    return c.newResponse(res.body, res);\n  }\n  console.error(err);\n  return c.text(\"Internal Server Error\", 500);\n};\nvar Hono = class {\n  get;\n  post;\n  put;\n  delete;\n  options;\n  patch;\n  all;\n  on;\n  use;\n  router;\n  getPath;\n  _basePath = \"/\";\n  #path = \"/\";\n  routes = [];\n  constructor(options = {}) {\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\n    allMethods.forEach((method) => {\n      this[method] = (args1, ...args) => {\n        if (typeof args1 === \"string\") {\n          this.#path = args1;\n        } else {\n          this.#addRoute(method, this.#path, args1);\n        }\n        args.forEach((handler) => {\n          this.#addRoute(method, this.#path, handler);\n        });\n        return this;\n      };\n    });\n    this.on = (method, path, ...handlers) => {\n      for (const p of [path].flat()) {\n        this.#path = p;\n        for (const m of [method].flat()) {\n          handlers.map((handler) => {\n            this.#addRoute(m.toUpperCase(), this.#path, handler);\n          });\n        }\n      }\n      return this;\n    };\n    this.use = (arg1, ...handlers) => {\n      if (typeof arg1 === \"string\") {\n        this.#path = arg1;\n      } else {\n        this.#path = \"*\";\n        handlers.unshift(arg1);\n      }\n      handlers.forEach((handler) => {\n        this.#addRoute(METHOD_NAME_ALL, this.#path, handler);\n      });\n      return this;\n    };\n    const { strict, ...optionsWithoutStrict } = options;\n    Object.assign(this, optionsWithoutStrict);\n    this.getPath = strict ?? true ? options.getPath ?? getPath : getPathNoStrict;\n  }\n  #clone() {\n    const clone = new Hono({\n      router: this.router,\n      getPath: this.getPath\n    });\n    clone.errorHandler = this.errorHandler;\n    clone.#notFoundHandler = this.#notFoundHandler;\n    clone.routes = this.routes;\n    return clone;\n  }\n  #notFoundHandler = notFoundHandler;\n  errorHandler = errorHandler;\n  route(path, app) {\n    const subApp = this.basePath(path);\n    app.routes.map((r) => {\n      let handler;\n      if (app.errorHandler === errorHandler) {\n        handler = r.handler;\n      } else {\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\n        handler[COMPOSED_HANDLER] = r.handler;\n      }\n      subApp.#addRoute(r.method, r.path, handler);\n    });\n    return this;\n  }\n  basePath(path) {\n    const subApp = this.#clone();\n    subApp._basePath = mergePath(this._basePath, path);\n    return subApp;\n  }\n  onError = (handler) => {\n    this.errorHandler = handler;\n    return this;\n  };\n  notFound = (handler) => {\n    this.#notFoundHandler = handler;\n    return this;\n  };\n  mount(path, applicationHandler, options) {\n    let replaceRequest;\n    let optionHandler;\n    if (options) {\n      if (typeof options === \"function\") {\n        optionHandler = options;\n      } else {\n        optionHandler = options.optionHandler;\n        if (options.replaceRequest === false) {\n          replaceRequest = (request) => request;\n        } else {\n          replaceRequest = options.replaceRequest;\n        }\n      }\n    }\n    const getOptions = optionHandler ? (c) => {\n      const options2 = optionHandler(c);\n      return Array.isArray(options2) ? options2 : [options2];\n    } : (c) => {\n      let executionContext = void 0;\n      try {\n        executionContext = c.executionCtx;\n      } catch {\n      }\n      return [c.env, executionContext];\n    };\n    replaceRequest ||= (() => {\n      const mergedPath = mergePath(this._basePath, path);\n      const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\n      return (request) => {\n        const url = new URL(request.url);\n        url.pathname = url.pathname.slice(pathPrefixLength) || \"/\";\n        return new Request(url, request);\n      };\n    })();\n    const handler = async (c, next) => {\n      const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));\n      if (res) {\n        return res;\n      }\n      await next();\n    };\n    this.#addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\n    return this;\n  }\n  #addRoute(method, path, handler) {\n    method = method.toUpperCase();\n    path = mergePath(this._basePath, path);\n    const r = { basePath: this._basePath, path, method, handler };\n    this.router.add(method, path, [handler, r]);\n    this.routes.push(r);\n  }\n  #handleError(err, c) {\n    if (err instanceof Error) {\n      return this.errorHandler(err, c);\n    }\n    throw err;\n  }\n  #dispatch(request, executionCtx, env, method) {\n    if (method === \"HEAD\") {\n      return (async () => new Response(null, await this.#dispatch(request, executionCtx, env, \"GET\")))();\n    }\n    const path = this.getPath(request, { env });\n    const matchResult = this.router.match(method, path);\n    const c = new Context(request, {\n      path,\n      matchResult,\n      env,\n      executionCtx,\n      notFoundHandler: this.#notFoundHandler\n    });\n    if (matchResult[0].length === 1) {\n      let res;\n      try {\n        res = matchResult[0][0][0][0](c, async () => {\n          c.res = await this.#notFoundHandler(c);\n        });\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n      return res instanceof Promise ? res.then(\n        (resolved) => resolved || (c.finalized ? c.res : this.#notFoundHandler(c))\n      ).catch((err) => this.#handleError(err, c)) : res ?? this.#notFoundHandler(c);\n    }\n    const composed = compose(matchResult[0], this.errorHandler, this.#notFoundHandler);\n    return (async () => {\n      try {\n        const context = await composed(c);\n        if (!context.finalized) {\n          throw new Error(\n            \"Context is not finalized. Did you forget to return a Response object or `await next()`?\"\n          );\n        }\n        return context.res;\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n    })();\n  }\n  fetch = (request, ...rest) => {\n    return this.#dispatch(request, rest[1], rest[0], request.method);\n  };\n  request = (input, requestInit, Env, executionCtx) => {\n    if (input instanceof Request) {\n      return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);\n    }\n    input = input.toString();\n    return this.fetch(\n      new Request(\n        /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`,\n        requestInit\n      ),\n      Env,\n      executionCtx\n    );\n  };\n  fire = () => {\n    addEventListener(\"fetch\", (event) => {\n      event.respondWith(this.#dispatch(event.request, event, void 0, event.request.method));\n    });\n  };\n};\nexport {\n  Hono as HonoBase\n};\n", "// src/router/reg-exp-router/node.ts\nvar LABEL_REG_EXP_STR = \"[^/]+\";\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\nvar PATH_ERROR = Symbol();\nvar regExpMetaChars = new Set(\".\\\\+*[^]$()\");\nfunction compareKey(a, b) {\n  if (a.length === 1) {\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\n  }\n  if (b.length === 1) {\n    return 1;\n  }\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\n    return 1;\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\n    return -1;\n  }\n  if (a === LABEL_REG_EXP_STR) {\n    return 1;\n  } else if (b === LABEL_REG_EXP_STR) {\n    return -1;\n  }\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\n}\nvar Node = class {\n  #index;\n  #varIndex;\n  #children = /* @__PURE__ */ Object.create(null);\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\n    if (tokens.length === 0) {\n      if (this.#index !== void 0) {\n        throw PATH_ERROR;\n      }\n      if (pathErrorCheckOnly) {\n        return;\n      }\n      this.#index = index;\n      return;\n    }\n    const [token, ...restTokens] = tokens;\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    let node;\n    if (pattern) {\n      const name = pattern[1];\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\n      if (name && pattern[2]) {\n        if (regexpStr === \".*\") {\n          throw PATH_ERROR;\n        }\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\n        if (/\\((?!\\?:)/.test(regexpStr)) {\n          throw PATH_ERROR;\n        }\n      }\n      node = this.#children[regexpStr];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[regexpStr] = new Node();\n        if (name !== \"\") {\n          node.#varIndex = context.varIndex++;\n        }\n      }\n      if (!pathErrorCheckOnly && name !== \"\") {\n        paramMap.push([name, node.#varIndex]);\n      }\n    } else {\n      node = this.#children[token];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[token] = new Node();\n      }\n    }\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\n  }\n  buildRegExpStr() {\n    const childKeys = Object.keys(this.#children).sort(compareKey);\n    const strList = childKeys.map((k) => {\n      const c = this.#children[k];\n      return (typeof c.#varIndex === \"number\" ? `(${k})@${c.#varIndex}` : regExpMetaChars.has(k) ? `\\\\${k}` : k) + c.buildRegExpStr();\n    });\n    if (typeof this.#index === \"number\") {\n      strList.unshift(`#${this.#index}`);\n    }\n    if (strList.length === 0) {\n      return \"\";\n    }\n    if (strList.length === 1) {\n      return strList[0];\n    }\n    return \"(?:\" + strList.join(\"|\") + \")\";\n  }\n};\nexport {\n  Node,\n  PATH_ERROR\n};\n", "// src/router/reg-exp-router/trie.ts\nimport { Node } from \"./node.js\";\nvar Trie = class {\n  #context = { varIndex: 0 };\n  #root = new Node();\n  insert(path, index, pathErrorCheckOnly) {\n    const paramAssoc = [];\n    const groups = [];\n    for (let i = 0; ; ) {\n      let replaced = false;\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\n        const mark = `@\\\\${i}`;\n        groups[i] = [mark, m];\n        i++;\n        replaced = true;\n        return mark;\n      });\n      if (!replaced) {\n        break;\n      }\n    }\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\n    for (let i = groups.length - 1; i >= 0; i--) {\n      const [mark] = groups[i];\n      for (let j = tokens.length - 1; j >= 0; j--) {\n        if (tokens[j].indexOf(mark) !== -1) {\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\n          break;\n        }\n      }\n    }\n    this.#root.insert(tokens, index, paramAssoc, this.#context, pathErrorCheckOnly);\n    return paramAssoc;\n  }\n  buildRegExp() {\n    let regexp = this.#root.buildRegExpStr();\n    if (regexp === \"\") {\n      return [/^$/, [], []];\n    }\n    let captureIndex = 0;\n    const indexReplacementMap = [];\n    const paramReplacementMap = [];\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\n      if (handlerIndex !== void 0) {\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\n        return \"$()\";\n      }\n      if (paramIndex !== void 0) {\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\n        return \"\";\n      }\n      return \"\";\n    });\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\n  }\n};\nexport {\n  Trie\n};\n", "// src/router/reg-exp-router/router.ts\nimport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHOD_NAME_ALL,\n  UnsupportedPathError\n} from \"../../router.js\";\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { PATH_ERROR } from \"./node.js\";\nimport { Trie } from \"./trie.js\";\nvar emptyParam = [];\nvar nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];\nvar wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\nfunction buildWildcardRegExp(path) {\n  return wildcardRegExpCache[path] ??= new RegExp(\n    path === \"*\" ? \"\" : `^${path.replace(\n      /\\/\\*$|([.\\\\+*[^\\]$()])/g,\n      (_, metaChar) => metaChar ? `\\\\${metaChar}` : \"(?:|/.*)\"\n    )}$`\n  );\n}\nfunction clearWildcardRegExpCache() {\n  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\n}\nfunction buildMatcherFromPreprocessedRoutes(routes) {\n  const trie = new Trie();\n  const handlerData = [];\n  if (routes.length === 0) {\n    return nullMatcher;\n  }\n  const routesWithStaticPathFlag = routes.map(\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\n  ).sort(\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\n  );\n  const staticMap = /* @__PURE__ */ Object.create(null);\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\n    if (pathErrorCheckOnly) {\n      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];\n    } else {\n      j++;\n    }\n    let paramAssoc;\n    try {\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\n    } catch (e) {\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\n    }\n    if (pathErrorCheckOnly) {\n      continue;\n    }\n    handlerData[j] = handlers.map(([h, paramCount]) => {\n      const paramIndexMap = /* @__PURE__ */ Object.create(null);\n      paramCount -= 1;\n      for (; paramCount >= 0; paramCount--) {\n        const [key, value] = paramAssoc[paramCount];\n        paramIndexMap[key] = value;\n      }\n      return [h, paramIndexMap];\n    });\n  }\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\n  for (let i = 0, len = handlerData.length; i < len; i++) {\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\n      const map = handlerData[i][j]?.[1];\n      if (!map) {\n        continue;\n      }\n      const keys = Object.keys(map);\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\n      }\n    }\n  }\n  const handlerMap = [];\n  for (const i in indexReplacementMap) {\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\n  }\n  return [regexp, handlerMap, staticMap];\n}\nfunction findMiddleware(middleware, path) {\n  if (!middleware) {\n    return void 0;\n  }\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\n    if (buildWildcardRegExp(k).test(path)) {\n      return [...middleware[k]];\n    }\n  }\n  return void 0;\n}\nvar RegExpRouter = class {\n  name = \"RegExpRouter\";\n  #middleware;\n  #routes;\n  constructor() {\n    this.#middleware = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n    this.#routes = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n  }\n  add(method, path, handler) {\n    const middleware = this.#middleware;\n    const routes = this.#routes;\n    if (!middleware || !routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    if (!middleware[method]) {\n      ;\n      [middleware, routes].forEach((handlerMap) => {\n        handlerMap[method] = /* @__PURE__ */ Object.create(null);\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\n        });\n      });\n    }\n    if (path === \"/*\") {\n      path = \"*\";\n    }\n    const paramCount = (path.match(/\\/:/g) || []).length;\n    if (/\\*$/.test(path)) {\n      const re = buildWildcardRegExp(path);\n      if (method === METHOD_NAME_ALL) {\n        Object.keys(middleware).forEach((m) => {\n          middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n        });\n      } else {\n        middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n      }\n      Object.keys(middleware).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(middleware[m]).forEach((p) => {\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\n          });\n        }\n      });\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(routes[m]).forEach(\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\n          );\n        }\n      });\n      return;\n    }\n    const paths = checkOptionalParameter(path) || [path];\n    for (let i = 0, len = paths.length; i < len; i++) {\n      const path2 = paths[i];\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          routes[m][path2] ||= [\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\n          ];\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\n        }\n      });\n    }\n  }\n  match(method, path) {\n    clearWildcardRegExpCache();\n    const matchers = this.#buildAllMatchers();\n    this.match = (method2, path2) => {\n      const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];\n      const staticMatch = matcher[2][path2];\n      if (staticMatch) {\n        return staticMatch;\n      }\n      const match = path2.match(matcher[0]);\n      if (!match) {\n        return [[], emptyParam];\n      }\n      const index = match.indexOf(\"\", 1);\n      return [matcher[1][index], match];\n    };\n    return this.match(method, path);\n  }\n  #buildAllMatchers() {\n    const matchers = /* @__PURE__ */ Object.create(null);\n    Object.keys(this.#routes).concat(Object.keys(this.#middleware)).forEach((method) => {\n      matchers[method] ||= this.#buildMatcher(method);\n    });\n    this.#middleware = this.#routes = void 0;\n    return matchers;\n  }\n  #buildMatcher(method) {\n    const routes = [];\n    let hasOwnRoute = method === METHOD_NAME_ALL;\n    [this.#middleware, this.#routes].forEach((r) => {\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\n      if (ownRoute.length !== 0) {\n        hasOwnRoute ||= true;\n        routes.push(...ownRoute);\n      } else if (method !== METHOD_NAME_ALL) {\n        routes.push(\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\n        );\n      }\n    });\n    if (!hasOwnRoute) {\n      return null;\n    } else {\n      return buildMatcherFromPreprocessedRoutes(routes);\n    }\n  }\n};\nexport {\n  RegExpRouter\n};\n", "// src/router/smart-router/router.ts\nimport { MESSAGE_MATCHER_IS_ALREADY_BUILT, UnsupportedPathError } from \"../../router.js\";\nvar SmartRouter = class {\n  name = \"SmartRouter\";\n  #routers = [];\n  #routes = [];\n  constructor(init) {\n    this.#routers = init.routers;\n  }\n  add(method, path, handler) {\n    if (!this.#routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    this.#routes.push([method, path, handler]);\n  }\n  match(method, path) {\n    if (!this.#routes) {\n      throw new Error(\"Fatal error\");\n    }\n    const routers = this.#routers;\n    const routes = this.#routes;\n    const len = routers.length;\n    let i = 0;\n    let res;\n    for (; i < len; i++) {\n      const router = routers[i];\n      try {\n        for (let i2 = 0, len2 = routes.length; i2 < len2; i2++) {\n          router.add(...routes[i2]);\n        }\n        res = router.match(method, path);\n      } catch (e) {\n        if (e instanceof UnsupportedPathError) {\n          continue;\n        }\n        throw e;\n      }\n      this.match = router.match.bind(router);\n      this.#routers = [router];\n      this.#routes = void 0;\n      break;\n    }\n    if (i === len) {\n      throw new Error(\"Fatal error\");\n    }\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\n    return res;\n  }\n  get activeRouter() {\n    if (this.#routes || this.#routers.length !== 1) {\n      throw new Error(\"No active router has been determined yet.\");\n    }\n    return this.#routers[0];\n  }\n};\nexport {\n  SmartRouter\n};\n", "// src/router/trie-router/node.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { getPattern, splitPath, splitRoutingPath } from \"../../utils/url.js\";\nvar emptyParams = /* @__PURE__ */ Object.create(null);\nvar Node = class {\n  #methods;\n  #children;\n  #patterns;\n  #order = 0;\n  #params = emptyParams;\n  constructor(method, handler, children) {\n    this.#children = children || /* @__PURE__ */ Object.create(null);\n    this.#methods = [];\n    if (method && handler) {\n      const m = /* @__PURE__ */ Object.create(null);\n      m[method] = { handler, possibleKeys: [], score: 0 };\n      this.#methods = [m];\n    }\n    this.#patterns = [];\n  }\n  insert(method, path, handler) {\n    this.#order = ++this.#order;\n    let curNode = this;\n    const parts = splitRoutingPath(path);\n    const possibleKeys = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const p = parts[i];\n      const nextP = parts[i + 1];\n      const pattern = getPattern(p, nextP);\n      const key = Array.isArray(pattern) ? pattern[0] : p;\n      if (key in curNode.#children) {\n        curNode = curNode.#children[key];\n        if (pattern) {\n          possibleKeys.push(pattern[1]);\n        }\n        continue;\n      }\n      curNode.#children[key] = new Node();\n      if (pattern) {\n        curNode.#patterns.push(pattern);\n        possibleKeys.push(pattern[1]);\n      }\n      curNode = curNode.#children[key];\n    }\n    curNode.#methods.push({\n      [method]: {\n        handler,\n        possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\n        score: this.#order\n      }\n    });\n    return curNode;\n  }\n  #getHandlerSets(node, method, nodeParams, params) {\n    const handlerSets = [];\n    for (let i = 0, len = node.#methods.length; i < len; i++) {\n      const m = node.#methods[i];\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\n      const processedSet = {};\n      if (handlerSet !== void 0) {\n        handlerSet.params = /* @__PURE__ */ Object.create(null);\n        handlerSets.push(handlerSet);\n        if (nodeParams !== emptyParams || params && params !== emptyParams) {\n          for (let i2 = 0, len2 = handlerSet.possibleKeys.length; i2 < len2; i2++) {\n            const key = handlerSet.possibleKeys[i2];\n            const processed = processedSet[handlerSet.score];\n            handlerSet.params[key] = params?.[key] && !processed ? params[key] : nodeParams[key] ?? params?.[key];\n            processedSet[handlerSet.score] = true;\n          }\n        }\n      }\n    }\n    return handlerSets;\n  }\n  search(method, path) {\n    const handlerSets = [];\n    this.#params = emptyParams;\n    const curNode = this;\n    let curNodes = [curNode];\n    const parts = splitPath(path);\n    const curNodesQueue = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const part = parts[i];\n      const isLast = i === len - 1;\n      const tempNodes = [];\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n        const node = curNodes[j];\n        const nextNode = node.#children[part];\n        if (nextNode) {\n          nextNode.#params = node.#params;\n          if (isLast) {\n            if (nextNode.#children[\"*\"]) {\n              handlerSets.push(\n                ...this.#getHandlerSets(nextNode.#children[\"*\"], method, node.#params)\n              );\n            }\n            handlerSets.push(...this.#getHandlerSets(nextNode, method, node.#params));\n          } else {\n            tempNodes.push(nextNode);\n          }\n        }\n        for (let k = 0, len3 = node.#patterns.length; k < len3; k++) {\n          const pattern = node.#patterns[k];\n          const params = node.#params === emptyParams ? {} : { ...node.#params };\n          if (pattern === \"*\") {\n            const astNode = node.#children[\"*\"];\n            if (astNode) {\n              handlerSets.push(...this.#getHandlerSets(astNode, method, node.#params));\n              astNode.#params = params;\n              tempNodes.push(astNode);\n            }\n            continue;\n          }\n          const [key, name, matcher] = pattern;\n          if (!part && !(matcher instanceof RegExp)) {\n            continue;\n          }\n          const child = node.#children[key];\n          const restPathString = parts.slice(i).join(\"/\");\n          if (matcher instanceof RegExp) {\n            const m = matcher.exec(restPathString);\n            if (m) {\n              params[name] = m[0];\n              handlerSets.push(...this.#getHandlerSets(child, method, node.#params, params));\n              if (Object.keys(child.#children).length) {\n                child.#params = params;\n                const componentCount = m[0].match(/\\//)?.length ?? 0;\n                const targetCurNodes = curNodesQueue[componentCount] ||= [];\n                targetCurNodes.push(child);\n              }\n              continue;\n            }\n          }\n          if (matcher === true || matcher.test(part)) {\n            params[name] = part;\n            if (isLast) {\n              handlerSets.push(...this.#getHandlerSets(child, method, params, node.#params));\n              if (child.#children[\"*\"]) {\n                handlerSets.push(\n                  ...this.#getHandlerSets(child.#children[\"*\"], method, params, node.#params)\n                );\n              }\n            } else {\n              child.#params = params;\n              tempNodes.push(child);\n            }\n          }\n        }\n      }\n      curNodes = tempNodes.concat(curNodesQueue.shift() ?? []);\n    }\n    if (handlerSets.length > 1) {\n      handlerSets.sort((a, b) => {\n        return a.score - b.score;\n      });\n    }\n    return [handlerSets.map(({ handler, params }) => [handler, params])];\n  }\n};\nexport {\n  Node\n};\n", "// src/router/trie-router/router.ts\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { Node } from \"./node.js\";\nvar TrieRouter = class {\n  name = \"TrieRouter\";\n  #node;\n  constructor() {\n    this.#node = new Node();\n  }\n  add(method, path, handler) {\n    const results = checkOptionalParameter(path);\n    if (results) {\n      for (let i = 0, len = results.length; i < len; i++) {\n        this.#node.insert(method, results[i], handler);\n      }\n      return;\n    }\n    this.#node.insert(method, path, handler);\n  }\n  match(method, path) {\n    return this.#node.search(method, path);\n  }\n};\nexport {\n  TrieRouter\n};\n", "// src/hono.ts\nimport { HonoBase } from \"./hono-base.js\";\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\nimport { SmartRouter } from \"./router/smart-router/index.js\";\nimport { TrieRouter } from \"./router/trie-router/index.js\";\nvar Hono = class extends HonoBase {\n  constructor(options = {}) {\n    super(options);\n    this.router = options.router ?? new SmartRouter({\n      routers: [new RegExpRouter(), new TrieRouter()]\n    });\n  }\n};\nexport {\n  Hono\n};\n", "// src/adapter/cloudflare-pages/handler.ts\nimport { Context } from \"../../context.js\";\nimport { HTTPException } from \"../../http-exception.js\";\nvar handle = (app) => (eventContext) => {\n  return app.fetch(\n    eventContext.request,\n    { ...eventContext.env, eventContext },\n    {\n      waitUntil: eventContext.waitUntil,\n      passThroughOnException: eventContext.passThroughOnException,\n      props: {}\n    }\n  );\n};\nfunction handleMiddleware(middleware) {\n  return async (executionCtx) => {\n    const context = new Context(executionCtx.request, {\n      env: { ...executionCtx.env, eventContext: executionCtx },\n      executionCtx\n    });\n    let response = void 0;\n    try {\n      response = await middleware(context, async () => {\n        try {\n          context.res = await executionCtx.next();\n        } catch (error) {\n          if (error instanceof Error) {\n            context.error = error;\n          } else {\n            throw error;\n          }\n        }\n      });\n    } catch (error) {\n      if (error instanceof Error) {\n        context.error = error;\n      } else {\n        throw error;\n      }\n    }\n    if (response) {\n      return response;\n    }\n    if (context.error instanceof HTTPException) {\n      return context.error.getResponse();\n    }\n    if (context.error) {\n      throw context.error;\n    }\n    return context.res;\n  };\n}\nvar serveStatic = () => {\n  return async (c) => {\n    const env = c.env;\n    const res = await env.ASSETS.fetch(c.req.raw);\n    if (res.status === 404) {\n      return c.notFound();\n    }\n    return res;\n  };\n};\nexport {\n  handle,\n  handleMiddleware,\n  serveStatic\n};\n", "/**\n * @private\n *\n * Continues with the callback on the next tick.\n */\nexport const nextTick: (callback: () => void) => void = setTimeout;\n", "export const BCRYPT_SALT_LEN = 16;\n\nexport const GENERATE_SALT_DEFAULT_LOG2_ROUNDS = 10;\n\nexport const BLOWFISH_NUM_ROUNDS = 16;\n\nexport const MAX_EXECUTION_TIME = 100;\n\nexport const BASE64_CODE =\n  \"./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\".split(\"\");\n\nexport const BASE64_INDEX = [\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\n  -1, -1, -1, -1, -1, -1, -1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, -1, -1, -1, -1, -1, -1, 28,\n  29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n  48, 49, 50, 51, 52, 53, -1, -1, -1, -1, -1,\n];\n\nexport const P_ORIG = [\n  0x243f6a88, 0x85a308d3, 0x13198a2e, 0x03707344, 0xa4093822, 0x299f31d0,\n  0x082efa98, 0xec4e6c89, 0x452821e6, 0x38d01377, 0xbe5466cf, 0x34e90c6c,\n  0xc0ac29b7, 0xc97c50dd, 0x3f84d5b5, 0xb5470917, 0x9216d5d9, 0x8979fb1b,\n];\n\nexport const S_ORIG = [\n  0xd1310ba6, 0x98dfb5ac, 0x2ffd72db, 0xd01adfb7, 0xb8e1afed, 0x6a267e96,\n  0xba7c9045, 0xf12c7f99, 0x24a19947, 0xb3916cf7, 0x0801f2e2, 0x858efc16,\n  0x636920d8, 0x71574e69, 0xa458fea3, 0xf4933d7e, 0x0d95748f, 0x728eb658,\n  0x718bcd58, 0x82154aee, 0x7b54a41d, 0xc25a59b5, 0x9c30d539, 0x2af26013,\n  0xc5d1b023, 0x286085f0, 0xca417918, 0xb8db38ef, 0x8e79dcb0, 0x603a180e,\n  0x6c9e0e8b, 0xb01e8a3e, 0xd71577c1, 0xbd314b27, 0x78af2fda, 0x55605c60,\n  0xe65525f3, 0xaa55ab94, 0x57489862, 0x63e81440, 0x55ca396a, 0x2aab10b6,\n  0xb4cc5c34, 0x1141e8ce, 0xa15486af, 0x7c72e993, 0xb3ee1411, 0x636fbc2a,\n  0x2ba9c55d, 0x741831f6, 0xce5c3e16, 0x9b87931e, 0xafd6ba33, 0x6c24cf5c,\n  0x7a325381, 0x28958677, 0x3b8f4898, 0x6b4bb9af, 0xc4bfe81b, 0x66282193,\n  0x61d809cc, 0xfb21a991, 0x487cac60, 0x5dec8032, 0xef845d5d, 0xe98575b1,\n  0xdc262302, 0xeb651b88, 0x23893e81, 0xd396acc5, 0x0f6d6ff3, 0x83f44239,\n  0x2e0b4482, 0xa4842004, 0x69c8f04a, 0x9e1f9b5e, 0x21c66842, 0xf6e96c9a,\n  0x670c9c61, 0xabd388f0, 0x6a51a0d2, 0xd8542f68, 0x960fa728, 0xab5133a3,\n  0x6eef0b6c, 0x137a3be4, 0xba3bf050, 0x7efb2a98, 0xa1f1651d, 0x39af0176,\n  0x66ca593e, 0x82430e88, 0x8cee8619, 0x456f9fb4, 0x7d84a5c3, 0x3b8b5ebe,\n  0xe06f75d8, 0x85c12073, 0x401a449f, 0x56c16aa6, 0x4ed3aa62, 0x363f7706,\n  0x1bfedf72, 0x429b023d, 0x37d0d724, 0xd00a1248, 0xdb0fead3, 0x49f1c09b,\n  0x075372c9, 0x80991b7b, 0x25d479d8, 0xf6e8def7, 0xe3fe501a, 0xb6794c3b,\n  0x976ce0bd, 0x04c006ba, 0xc1a94fb6, 0x409f60c4, 0x5e5c9ec2, 0x196a2463,\n  0x68fb6faf, 0x3e6c53b5, 0x1339b2eb, 0x3b52ec6f, 0x6dfc511f, 0x9b30952c,\n  0xcc814544, 0xaf5ebd09, 0xbee3d004, 0xde334afd, 0x660f2807, 0x192e4bb3,\n  0xc0cba857, 0x45c8740f, 0xd20b5f39, 0xb9d3fbdb, 0x5579c0bd, 0x1a60320a,\n  0xd6a100c6, 0x402c7279, 0x679f25fe, 0xfb1fa3cc, 0x8ea5e9f8, 0xdb3222f8,\n  0x3c7516df, 0xfd616b15, 0x2f501ec8, 0xad0552ab, 0x323db5fa, 0xfd238760,\n  0x53317b48, 0x3e00df82, 0x9e5c57bb, 0xca6f8ca0, 0x1a87562e, 0xdf1769db,\n  0xd542a8f6, 0x287effc3, 0xac6732c6, 0x8c4f5573, 0x695b27b0, 0xbbca58c8,\n  0xe1ffa35d, 0xb8f011a0, 0x10fa3d98, 0xfd2183b8, 0x4afcb56c, 0x2dd1d35b,\n  0x9a53e479, 0xb6f84565, 0xd28e49bc, 0x4bfb9790, 0xe1ddf2da, 0xa4cb7e33,\n  0x62fb1341, 0xcee4c6e8, 0xef20cada, 0x36774c01, 0xd07e9efe, 0x2bf11fb4,\n  0x95dbda4d, 0xae909198, 0xeaad8e71, 0x6b93d5a0, 0xd08ed1d0, 0xafc725e0,\n  0x8e3c5b2f, 0x8e7594b7, 0x8ff6e2fb, 0xf2122b64, 0x8888b812, 0x900df01c,\n  0x4fad5ea0, 0x688fc31c, 0xd1cff191, 0xb3a8c1ad, 0x2f2f2218, 0xbe0e1777,\n  0xea752dfe, 0x8b021fa1, 0xe5a0cc0f, 0xb56f74e8, 0x18acf3d6, 0xce89e299,\n  0xb4a84fe0, 0xfd13e0b7, 0x7cc43b81, 0xd2ada8d9, 0x165fa266, 0x80957705,\n  0x93cc7314, 0x211a1477, 0xe6ad2065, 0x77b5fa86, 0xc75442f5, 0xfb9d35cf,\n  0xebcdaf0c, 0x7b3e89a0, 0xd6411bd3, 0xae1e7e49, 0x00250e2d, 0x2071b35e,\n  0x226800bb, 0x57b8e0af, 0x2464369b, 0xf009b91e, 0x5563911d, 0x59dfa6aa,\n  0x78c14389, 0xd95a537f, 0x207d5ba2, 0x02e5b9c5, 0x83260376, 0x6295cfa9,\n  0x11c81968, 0x4e734a41, 0xb3472dca, 0x7b14a94a, 0x1b510052, 0x9a532915,\n  0xd60f573f, 0xbc9bc6e4, 0x2b60a476, 0x81e67400, 0x08ba6fb5, 0x571be91f,\n  0xf296ec6b, 0x2a0dd915, 0xb6636521, 0xe7b9f9b6, 0xff34052e, 0xc5855664,\n  0x53b02d5d, 0xa99f8fa1, 0x08ba4799, 0x6e85076a, 0x4b7a70e9, 0xb5b32944,\n  0xdb75092e, 0xc4192623, 0xad6ea6b0, 0x49a7df7d, 0x9cee60b8, 0x8fedb266,\n  0xecaa8c71, 0x699a17ff, 0x5664526c, 0xc2b19ee1, 0x193602a5, 0x75094c29,\n  0xa0591340, 0xe4183a3e, 0x3f54989a, 0x5b429d65, 0x6b8fe4d6, 0x99f73fd6,\n  0xa1d29c07, 0xefe830f5, 0x4d2d38e6, 0xf0255dc1, 0x4cdd2086, 0x8470eb26,\n  0x6382e9c6, 0x021ecc5e, 0x09686b3f, 0x3ebaefc9, 0x3c971814, 0x6b6a70a1,\n  0x687f3584, 0x52a0e286, 0xb79c5305, 0xaa500737, 0x3e07841c, 0x7fdeae5c,\n  0x8e7d44ec, 0x5716f2b8, 0xb03ada37, 0xf0500c0d, 0xf01c1f04, 0x0200b3ff,\n  0xae0cf51a, 0x3cb574b2, 0x25837a58, 0xdc0921bd, 0xd19113f9, 0x7ca92ff6,\n  0x94324773, 0x22f54701, 0x3ae5e581, 0x37c2dadc, 0xc8b57634, 0x9af3dda7,\n  0xa9446146, 0x0fd0030e, 0xecc8c73e, 0xa4751e41, 0xe238cd99, 0x3bea0e2f,\n  0x3280bba1, 0x183eb331, 0x4e548b38, 0x4f6db908, 0x6f420d03, 0xf60a04bf,\n  0x2cb81290, 0x24977c79, 0x5679b072, 0xbcaf89af, 0xde9a771f, 0xd9930810,\n  0xb38bae12, 0xdccf3f2e, 0x5512721f, 0x2e6b7124, 0x501adde6, 0x9f84cd87,\n  0x7a584718, 0x7408da17, 0xbc9f9abc, 0xe94b7d8c, 0xec7aec3a, 0xdb851dfa,\n  0x63094366, 0xc464c3d2, 0xef1c1847, 0x3215d908, 0xdd433b37, 0x24c2ba16,\n  0x12a14d43, 0x2a65c451, 0x50940002, 0x133ae4dd, 0x71dff89e, 0x10314e55,\n  0x81ac77d6, 0x5f11199b, 0x043556f1, 0xd7a3c76b, 0x3c11183b, 0x5924a509,\n  0xf28fe6ed, 0x97f1fbfa, 0x9ebabf2c, 0x1e153c6e, 0x86e34570, 0xeae96fb1,\n  0x860e5e0a, 0x5a3e2ab3, 0x771fe71c, 0x4e3d06fa, 0x2965dcb9, 0x99e71d0f,\n  0x803e89d6, 0x5266c825, 0x2e4cc978, 0x9c10b36a, 0xc6150eba, 0x94e2ea78,\n  0xa5fc3c53, 0x1e0a2df4, 0xf2f74ea7, 0x361d2b3d, 0x1939260f, 0x19c27960,\n  0x5223a708, 0xf71312b6, 0xebadfe6e, 0xeac31f66, 0xe3bc4595, 0xa67bc883,\n  0xb17f37d1, 0x018cff28, 0xc332ddef, 0xbe6c5aa5, 0x65582185, 0x68ab9802,\n  0xeecea50f, 0xdb2f953b, 0x2aef7dad, 0x5b6e2f84, 0x1521b628, 0x29076170,\n  0xecdd4775, 0x619f1510, 0x13cca830, 0xeb61bd96, 0x0334fe1e, 0xaa0363cf,\n  0xb5735c90, 0x4c70a239, 0xd59e9e0b, 0xcbaade14, 0xeecc86bc, 0x60622ca7,\n  0x9cab5cab, 0xb2f3846e, 0x648b1eaf, 0x19bdf0ca, 0xa02369b9, 0x655abb50,\n  0x40685a32, 0x3c2ab4b3, 0x319ee9d5, 0xc021b8f7, 0x9b540b19, 0x875fa099,\n  0x95f7997e, 0x623d7da8, 0xf837889a, 0x97e32d77, 0x11ed935f, 0x16681281,\n  0x0e358829, 0xc7e61fd6, 0x96dedfa1, 0x7858ba99, 0x57f584a5, 0x1b227263,\n  0x9b83c3ff, 0x1ac24696, 0xcdb30aeb, 0x532e3054, 0x8fd948e4, 0x6dbc3128,\n  0x58ebf2ef, 0x34c6ffea, 0xfe28ed61, 0xee7c3c73, 0x5d4a14d9, 0xe864b7e3,\n  0x42105d14, 0x203e13e0, 0x45eee2b6, 0xa3aaabea, 0xdb6c4f15, 0xfacb4fd0,\n  0xc742f442, 0xef6abbb5, 0x654f3b1d, 0x41cd2105, 0xd81e799e, 0x86854dc7,\n  0xe44b476a, 0x3d816250, 0xcf62a1f2, 0x5b8d2646, 0xfc8883a0, 0xc1c7b6a3,\n  0x7f1524c3, 0x69cb7492, 0x47848a0b, 0x5692b285, 0x095bbf00, 0xad19489d,\n  0x1462b174, 0x23820e00, 0x58428d2a, 0x0c55f5ea, 0x1dadf43e, 0x233f7061,\n  0x3372f092, 0x8d937e41, 0xd65fecf1, 0x6c223bdb, 0x7cde3759, 0xcbee7460,\n  0x4085f2a7, 0xce77326e, 0xa6078084, 0x19f8509e, 0xe8efd855, 0x61d99735,\n  0xa969a7aa, 0xc50c06c2, 0x5a04abfc, 0x800bcadc, 0x9e447a2e, 0xc3453484,\n  0xfdd56705, 0x0e1e9ec9, 0xdb73dbd3, 0x105588cd, 0x675fda79, 0xe3674340,\n  0xc5c43465, 0x713e38d8, 0x3d28f89e, 0xf16dff20, 0x153e21e7, 0x8fb03d4a,\n  0xe6e39f2b, 0xdb83adf7, 0xe93d5a68, 0x948140f7, 0xf64c261c, 0x94692934,\n  0x411520f7, 0x7602d4f7, 0xbcf46b2e, 0xd4a20068, 0xd4082471, 0x3320f46a,\n  0x43b7d4b7, 0x500061af, 0x1e39f62e, 0x97244546, 0x14214f74, 0xbf8b8840,\n  0x4d95fc1d, 0x96b591af, 0x70f4ddd3, 0x66a02f45, 0xbfbc09ec, 0x03bd9785,\n  0x7fac6dd0, 0x31cb8504, 0x96eb27b3, 0x55fd3941, 0xda2547e6, 0xabca0a9a,\n  0x28507825, 0x530429f4, 0x0a2c86da, 0xe9b66dfb, 0x68dc1462, 0xd7486900,\n  0x680ec0a4, 0x27a18dee, 0x4f3ffea2, 0xe887ad8c, 0xb58ce006, 0x7af4d6b6,\n  0xaace1e7c, 0xd3375fec, 0xce78a399, 0x406b2a42, 0x20fe9e35, 0xd9f385b9,\n  0xee39d7ab, 0x3b124e8b, 0x1dc9faf7, 0x4b6d1856, 0x26a36631, 0xeae397b2,\n  0x3a6efa74, 0xdd5b4332, 0x6841e7f7, 0xca7820fb, 0xfb0af54e, 0xd8feb397,\n  0x454056ac, 0xba489527, 0x55533a3a, 0x20838d87, 0xfe6ba9b7, 0xd096954b,\n  0x55a867bc, 0xa1159a58, 0xcca92963, 0x99e1db33, 0xa62a4a56, 0x3f3125f9,\n  0x5ef47e1c, 0x9029317c, 0xfdf8e802, 0x04272f70, 0x80bb155c, 0x05282ce3,\n  0x95c11548, 0xe4c66d22, 0x48c1133f, 0xc70f86dc, 0x07f9c9ee, 0x41041f0f,\n  0x404779a4, 0x5d886e17, 0x325f51eb, 0xd59bc0d1, 0xf2bcc18f, 0x41113564,\n  0x257b7834, 0x602a9c60, 0xdff8e8a3, 0x1f636c1b, 0x0e12b4c2, 0x02e1329e,\n  0xaf664fd1, 0xcad18115, 0x6b2395e0, 0x333e92e1, 0x3b240b62, 0xeebeb922,\n  0x85b2a20e, 0xe6ba0d99, 0xde720c8c, 0x2da2f728, 0xd0127845, 0x95b794fd,\n  0x647d0862, 0xe7ccf5f0, 0x5449a36f, 0x877d48fa, 0xc39dfd27, 0xf33e8d1e,\n  0x0a476341, 0x992eff74, 0x3a6f6eab, 0xf4f8fd37, 0xa812dc60, 0xa1ebddf8,\n  0x991be14c, 0xdb6e6b0d, 0xc67b5510, 0x6d672c37, 0x2765d43b, 0xdcd0e804,\n  0xf1290dc7, 0xcc00ffa3, 0xb5390f92, 0x690fed0b, 0x667b9ffb, 0xcedb7d9c,\n  0xa091cf0b, 0xd9155ea3, 0xbb132f88, 0x515bad24, 0x7b9479bf, 0x763bd6eb,\n  0x37392eb3, 0xcc115979, 0x8026e297, 0xf42e312d, 0x6842ada7, 0xc66a2b3b,\n  0x12754ccc, 0x782ef11c, 0x6a124237, 0xb79251e7, 0x06a1bbe6, 0x4bfb6350,\n  0x1a6b1018, 0x11caedfa, 0x3d25bdd8, 0xe2e1c3c9, 0x44421659, 0x0a121386,\n  0xd90cec6e, 0xd5abea2a, 0x64af674e, 0xda86a85f, 0xbebfe988, 0x64e4c3fe,\n  0x9dbc8057, 0xf0f7c086, 0x60787bf8, 0x6003604d, 0xd1fd8346, 0xf6381fb0,\n  0x7745ae04, 0xd736fccc, 0x83426b33, 0xf01eab71, 0xb0804187, 0x3c005e5f,\n  0x77a057be, 0xbde8ae24, 0x55464299, 0xbf582e61, 0x4e58f48f, 0xf2ddfda2,\n  0xf474ef38, 0x8789bdc2, 0x5366f9c3, 0xc8b38e74, 0xb475f255, 0x46fcd9b9,\n  0x7aeb2661, 0x8b1ddf84, 0x846a0e79, 0x915f95e2, 0x466e598e, 0x20b45770,\n  0x8cd55591, 0xc902de4c, 0xb90bace1, 0xbb8205d0, 0x11a86248, 0x7574a99e,\n  0xb77f19b6, 0xe0a9dc09, 0x662d09a1, 0xc4324633, 0xe85a1f02, 0x09f0be8c,\n  0x4a99a025, 0x1d6efe10, 0x1ab93d1d, 0x0ba5a4df, 0xa186f20f, 0x2868f169,\n  0xdcb7da83, 0x573906fe, 0xa1e2ce9b, 0x4fcd7f52, 0x50115e01, 0xa70683fa,\n  0xa002b5c4, 0x0de6d027, 0x9af88c27, 0x773f8641, 0xc3604c06, 0x61a806b5,\n  0xf0177a28, 0xc0f586e0, 0x006058aa, 0x30dc7d62, 0x11e69ed7, 0x2338ea63,\n  0x53c2dd94, 0xc2c21634, 0xbbcbee56, 0x90bcb6de, 0xebfc7da1, 0xce591d76,\n  0x6f05e409, 0x4b7c0188, 0x39720a3d, 0x7c927c24, 0x86e3725f, 0x724d9db9,\n  0x1ac15bb4, 0xd39eb8fc, 0xed545578, 0x08fca5b5, 0xd83d7cd3, 0x4dad0fc4,\n  0x1e50ef5e, 0xb161e6f8, 0xa28514d9, 0x6c51133c, 0x6fd5c7e7, 0x56e14ec4,\n  0x362abfce, 0xddc6c837, 0xd79a3234, 0x92638212, 0x670efa8e, 0x406000e0,\n  0x3a39ce37, 0xd3faf5cf, 0xabc27737, 0x5ac52d1b, 0x5cb0679e, 0x4fa33742,\n  0xd3822740, 0x99bc9bbe, 0xd5118e9d, 0xbf0f7315, 0xd62d1c7e, 0xc700c47b,\n  0xb78c1b6b, 0x21a19045, 0xb26eb1be, 0x6a366eb4, 0x5748ab2f, 0xbc946e79,\n  0xc6a376d2, 0x6549c2c8, 0x530ff8ee, 0x468dde7d, 0xd5730a1d, 0x4cd04dc6,\n  0x2939bbdb, 0xa9ba4650, 0xac9526e8, 0xbe5ee304, 0xa1fad5f0, 0x6a2d519a,\n  0x63ef8ce2, 0x9a86ee22, 0xc089c2b8, 0x43242ef6, 0xa51e03aa, 0x9cf2d0a4,\n  0x83c061ba, 0x9be96a4d, 0x8fe51550, 0xba645bd6, 0x2826a2f9, 0xa73a3ae1,\n  0x4ba99586, 0xef5562e9, 0xc72fefd3, 0xf752f7da, 0x3f046f69, 0x77fa0a59,\n  0x80e4a915, 0x87b08601, 0x9b09e6ad, 0x3b3ee593, 0xe990fd5a, 0x9e34d797,\n  0x2cf0b7d9, 0x022b8b51, 0x96d5ac3a, 0x017da67d, 0xd1cf3ed6, 0x7c7d2d28,\n  0x1f9f25cf, 0xadf2b89b, 0x5ad6b472, 0x5a88f54c, 0xe029ac71, 0xe019a5e6,\n  0x47b0acfd, 0xed93fa9b, 0xe8d3c48d, 0x283b57cc, 0xf8d56629, 0x79132e28,\n  0x785f0191, 0xed756055, 0xf7960e44, 0xe3d35e8c, 0x15056dd4, 0x88f46dba,\n  0x03a16125, 0x0564f0bd, 0xc3eb9e15, 0x3c9057a2, 0x97271aec, 0xa93a072a,\n  0x1b3f6d9b, 0x1e6321f5, 0xf59c66fb, 0x26dcf319, 0x7533d928, 0xb155fdf5,\n  0x03563482, 0x8aba3cbb, 0x28517711, 0xc20ad9f8, 0xabcc5167, 0xccad925f,\n  0x4de81751, 0x3830dc8e, 0x379d5862, 0x9320f991, 0xea7a90c2, 0xfb3e7bce,\n  0x5121ce64, 0x774fbe32, 0xa8b6e37e, 0xc3293d46, 0x48de5369, 0x6413e680,\n  0xa2ae0810, 0xdd6db224, 0x69852dfd, 0x09072166, 0xb39a460a, 0x6445c0dd,\n  0x586cdecf, 0x1c20c8ae, 0x5bbef7dd, 0x1b588d40, 0xccd2017f, 0x6bb4e3bb,\n  0xdda26a7e, 0x3a59ff45, 0x3e350a44, 0xbcb4cdd5, 0x72eacea8, 0xfa6484bb,\n  0x8d6612ae, 0xbf3c6f47, 0xd29be463, 0x542f5d9e, 0xaec2771b, 0xf64e6370,\n  0x740e0d8d, 0xe75b1357, 0xf8721671, 0xaf537d5d, 0x4040cb08, 0x4eb4e2cc,\n  0x34d2466a, 0x0115af84, 0xe1b00428, 0x95983a1d, 0x06b89fb4, 0xce6ea048,\n  0x6f3f3b82, 0x3520ab82, 0x011a1d4b, 0x277227f8, 0x611560b1, 0xe7933fdc,\n  0xbb3a792b, 0x344525bd, 0xa08839e1, 0x51ce794b, 0x2f32c9b7, 0xa01fbac9,\n  0xe01cc87e, 0xbcc7d1f6, 0xcf0111c3, 0xa1e8aac7, 0x1a908749, 0xd44fbd9a,\n  0xd0dadecb, 0xd50ada38, 0x0339c32a, 0xc6913667, 0x8df9317c, 0xe0b12b4f,\n  0xf79e59b7, 0x43f5bb3a, 0xf2d519ff, 0x27d9459c, 0xbf97222c, 0x15e6fc2a,\n  0x0f91fc71, 0x9b941525, 0xfae59361, 0xceb69ceb, 0xc2a86459, 0x12baa8d1,\n  0xb6c1075e, 0xe3056a0c, 0x10d25065, 0xcb03a442, 0xe0ec6e0e, 0x1698db3b,\n  0x4c98a0be, 0x3278e964, 0x9f1f9532, 0xe0d392df, 0xd3a0342b, 0x8971f21e,\n  0x1b0a7441, 0x4ba3348c, 0xc5be7120, 0xc37632d8, 0xdf359f8d, 0x9b992f2e,\n  0xe60b6f47, 0x0fe3f11d, 0xe54cda54, 0x1edad891, 0xce6279cf, 0xcd3e7e6f,\n  0x1618b166, 0xfd2c1d05, 0x848fd2c5, 0xf6fb2299, 0xf523f357, 0xa6327623,\n  0x93a83531, 0x56cccd02, 0xacf08162, 0x5a75ebb5, 0x6e163697, 0x88d273cc,\n  0xde966292, 0x81b949d0, 0x4c50901b, 0x71c65614, 0xe6c6c7bd, 0x327a140a,\n  0x45e1d006, 0xc3f27b9a, 0xc9aa53fd, 0x62a80f00, 0xbb25bfe2, 0x35bdd2f6,\n  0x71126905, 0xb2040222, 0xb6cbcf7c, 0xcd769c2b, 0x53113ec0, 0x1640e3d3,\n  0x38abbd60, 0x2547adf0, 0xba38209c, 0xf746ce76, 0x77afa1c5, 0x20756060,\n  0x85cbfe4e, 0x8ae88dd8, 0x7aaaf9b0, 0x4cf9aa7e, 0x1948c25c, 0x02fb8a8c,\n  0x01c36ae4, 0xd6ebe1f9, 0x90d4f869, 0xa65cdea0, 0x3f09252d, 0xc208e69f,\n  0xb74e6132, 0xce77e25b, 0x578fdfe3, 0x3ac372e6,\n];\n\nexport const C_ORIG = [\n  0x4f727068, 0x65616e42, 0x65686f6c, 0x64657253, 0x63727944, 0x6f756274,\n];\n", "import { BASE64_CODE, BASE64_INDEX } from \"./constant.js\";\n\n/**\n * Encodes a byte array to base64 with up to length bytes of input, using the custom bcrypt alphabet.\n *\n * @param byteArray Byte array\n * @param length Maximum input length\n */\nexport const encodeBase64 = (\n  byteArray: number[] | Buffer,\n  length: number,\n): string => {\n  if (length <= 0 || length > byteArray.length)\n    throw Error(`Illegal length: ${length}`);\n\n  let off = 0;\n  let c1: number;\n  let c2: number;\n  const result: string[] = [];\n\n  while (off < length) {\n    c1 = byteArray[off++] & 0xff;\n    result.push(BASE64_CODE[(c1 >> 2) & 0x3f]);\n    c1 = (c1 & 0x03) << 4;\n    if (off >= length) {\n      result.push(BASE64_CODE[c1 & 0x3f]);\n      break;\n    }\n    c2 = byteArray[off++] & 0xff;\n    c1 |= (c2 >> 4) & 0x0f;\n    result.push(BASE64_CODE[c1 & 0x3f]);\n    c1 = (c2 & 0x0f) << 2;\n    if (off >= length) {\n      result.push(BASE64_CODE[c1 & 0x3f]);\n      break;\n    }\n    c2 = byteArray[off++] & 0xff;\n    c1 |= (c2 >> 6) & 0x03;\n    result.push(BASE64_CODE[c1 & 0x3f]);\n    result.push(BASE64_CODE[c2 & 0x3f]);\n  }\n\n  return result.join(\"\");\n};\n\n/**\n * Decodes a base64 encoded string to up to len bytes of output, using the custom bcrypt alphabet.\n *\n * @param contentString String to decode\n * @param length Maximum output length\n */\nexport const decodeBase64 = (\n  contentString: string,\n  length: number,\n): number[] => {\n  if (length <= 0) throw Error(`Illegal length: ${length}`);\n\n  const stringLength = contentString.length;\n  let off = 0;\n  let olen = 0;\n  let c1: number;\n  let c2: number;\n  let c3: number;\n  let c4: number;\n  let o: number;\n  let code: number;\n  const result: string[] = [];\n\n  while (off < stringLength - 1 && olen < length) {\n    code = contentString.charCodeAt(off++);\n    c1 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\n    code = contentString.charCodeAt(off++);\n    c2 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\n\n    if (c1 === -1 || c2 === -1) break;\n\n    o = (c1 << 2) >>> 0;\n    o |= (c2 & 0x30) >> 4;\n    result.push(String.fromCharCode(o));\n\n    if (++olen >= length || off >= stringLength) break;\n\n    code = contentString.charCodeAt(off++);\n    c3 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\n    if (c3 === -1) break;\n    o = ((c2 & 0x0f) << 4) >>> 0;\n    o |= (c3 & 0x3c) >> 2;\n    result.push(String.fromCharCode(o));\n\n    if (++olen >= length || off >= stringLength) break;\n\n    code = contentString.charCodeAt(off++);\n    c4 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\n    o = ((c3 & 0x03) << 6) >>> 0;\n    o |= c4;\n    result.push(String.fromCharCode(o));\n\n    ++olen;\n  }\n\n  return result.map((item) => item.charCodeAt(0));\n};\n", "import { nextTick } from \"nextTick\";\n\nimport {\n  BLOWFISH_NUM_ROUNDS,\n  C_ORIG,\n  MAX_EXECUTION_TIME,\n  P_ORIG,\n  S_ORIG,\n} from \"./constant.js\";\n\n// A base64 implementation for the bcrypt algorithm. This is partly non-standard.\n\nconst encipher = (\n  lr: Int32Array<ArrayBuffer>,\n  off: number,\n  P: Int32Array<ArrayBuffer>,\n  S: Int32Array<ArrayBuffer>,\n): Int32Array<ArrayBuffer> => {\n  // This is our bottleneck: 1714/1905 ticks / 90% - see profile.txt\n  let n: number;\n  let l = lr[off];\n  let r = lr[off + 1];\n\n  l ^= P[0];\n\n  //The following is an unrolled version of the above loop.\n  //Iteration 0\n  n = S[l >>> 24];\n  n += S[0x100 | ((l >> 16) & 0xff)];\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\n  n += S[0x300 | (l & 0xff)];\n  r ^= n ^ P[1];\n  n = S[r >>> 24];\n  n += S[0x100 | ((r >> 16) & 0xff)];\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\n  n += S[0x300 | (r & 0xff)];\n  l ^= n ^ P[2];\n  //Iteration 1\n  n = S[l >>> 24];\n  n += S[0x100 | ((l >> 16) & 0xff)];\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\n  n += S[0x300 | (l & 0xff)];\n  r ^= n ^ P[3];\n  n = S[r >>> 24];\n  n += S[0x100 | ((r >> 16) & 0xff)];\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\n  n += S[0x300 | (r & 0xff)];\n  l ^= n ^ P[4];\n  //Iteration 2\n  n = S[l >>> 24];\n  n += S[0x100 | ((l >> 16) & 0xff)];\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\n  n += S[0x300 | (l & 0xff)];\n  r ^= n ^ P[5];\n  n = S[r >>> 24];\n  n += S[0x100 | ((r >> 16) & 0xff)];\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\n  n += S[0x300 | (r & 0xff)];\n  l ^= n ^ P[6];\n  //Iteration 3\n  n = S[l >>> 24];\n  n += S[0x100 | ((l >> 16) & 0xff)];\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\n  n += S[0x300 | (l & 0xff)];\n  r ^= n ^ P[7];\n  n = S[r >>> 24];\n  n += S[0x100 | ((r >> 16) & 0xff)];\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\n  n += S[0x300 | (r & 0xff)];\n  l ^= n ^ P[8];\n  //Iteration 4\n  n = S[l >>> 24];\n  n += S[0x100 | ((l >> 16) & 0xff)];\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\n  n += S[0x300 | (l & 0xff)];\n  r ^= n ^ P[9];\n  n = S[r >>> 24];\n  n += S[0x100 | ((r >> 16) & 0xff)];\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\n  n += S[0x300 | (r & 0xff)];\n  l ^= n ^ P[10];\n  //Iteration 5\n  n = S[l >>> 24];\n  n += S[0x100 | ((l >> 16) & 0xff)];\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\n  n += S[0x300 | (l & 0xff)];\n  r ^= n ^ P[11];\n  n = S[r >>> 24];\n  n += S[0x100 | ((r >> 16) & 0xff)];\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\n  n += S[0x300 | (r & 0xff)];\n  l ^= n ^ P[12];\n  //Iteration 6\n  n = S[l >>> 24];\n  n += S[0x100 | ((l >> 16) & 0xff)];\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\n  n += S[0x300 | (l & 0xff)];\n  r ^= n ^ P[13];\n  n = S[r >>> 24];\n  n += S[0x100 | ((r >> 16) & 0xff)];\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\n  n += S[0x300 | (r & 0xff)];\n  l ^= n ^ P[14];\n  //Iteration 7\n  n = S[l >>> 24];\n  n += S[0x100 | ((l >> 16) & 0xff)];\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\n  n += S[0x300 | (l & 0xff)];\n  r ^= n ^ P[15];\n  n = S[r >>> 24];\n  n += S[0x100 | ((r >> 16) & 0xff)];\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\n  n += S[0x300 | (r & 0xff)];\n  l ^= n ^ P[16];\n\n  lr[off] = r ^ P[BLOWFISH_NUM_ROUNDS + 1];\n  lr[off + 1] = l;\n\n  return lr;\n};\n\nconst streamToWord = (\n  data: number[],\n  offp: number,\n): { key: number; offp: number } => {\n  let word = 0;\n\n  for (let i = 0; i < 4; ++i) {\n    word = (word << 8) | (data[offp] & 0xff);\n    offp = (offp + 1) % data.length;\n  }\n\n  return { key: word, offp };\n};\n\nconst key = (\n  key: number[],\n  P: Int32Array<ArrayBuffer>,\n  S: Int32Array<ArrayBuffer>,\n): void => {\n  const pLength = P.length;\n  const sLength = S.length;\n  let offp = 0;\n  let lr = new Int32Array([0, 0]);\n  let sw: {\n    key: number;\n    offp: number;\n  };\n\n  for (let i = 0; i < pLength; i++) {\n    sw = streamToWord(key, offp);\n    offp = sw.offp;\n    P[i] ^= sw.key;\n  }\n\n  for (let i = 0; i < pLength; i += 2) {\n    lr = encipher(lr, 0, P, S);\n    P[i] = lr[0];\n    P[i + 1] = lr[1];\n  }\n\n  for (let i = 0; i < sLength; i += 2) {\n    lr = encipher(lr, 0, P, S);\n    S[i] = lr[0];\n    S[i + 1] = lr[1];\n  }\n};\n\n/**\n * Expensive key schedule Blowfish.\n */\nconst expensiveKeyScheduleBlowFish = (\n  data: number[],\n  key: number[],\n  P: Int32Array<ArrayBuffer>,\n  S: Int32Array<ArrayBuffer>,\n): void => {\n  const pLength = P.length;\n  const sLength = S.length;\n  let offp = 0;\n  let lr = new Int32Array([0, 0]);\n  let sw: {\n    key: number;\n    offp: number;\n  };\n\n  for (let i = 0; i < pLength; i++) {\n    sw = streamToWord(key, offp);\n    offp = sw.offp;\n    P[i] ^= sw.key;\n  }\n\n  offp = 0;\n\n  for (let i = 0; i < pLength; i += 2) {\n    sw = streamToWord(data, offp);\n    offp = sw.offp;\n    lr[0] ^= sw.key;\n    sw = streamToWord(data, offp);\n    offp = sw.offp;\n    lr[1] ^= sw.key;\n    lr = encipher(lr, 0, P, S);\n    P[i] = lr[0];\n    P[i + 1] = lr[1];\n  }\n\n  for (let i = 0; i < sLength; i += 2) {\n    sw = streamToWord(data, offp);\n    offp = sw.offp;\n    lr[0] ^= sw.key;\n    sw = streamToWord(data, offp);\n    offp = sw.offp;\n    lr[1] ^= sw.key;\n    lr = encipher(lr, 0, P, S);\n    S[i] = lr[0];\n    S[i + 1] = lr[1];\n  }\n};\n\n/**\n * Internally crypts a string.\n *\n * @param bytes Bytes to crypt\n * @param salt Salt bytes to use\n * @param rounds Number of rounds\n * @param progressCallback Callback called with the current progress\n */\nexport const crypt = (\n  bytes: number[],\n  salt: number[],\n  rounds: number,\n  sync: boolean,\n  progressCallback?: (progress: number) => void,\n): Promise<number[]> | number[] => {\n  const cdata = new Int32Array(C_ORIG);\n  const cLength = cdata.length;\n\n  rounds = (1 << rounds) >>> 0;\n\n  const P = new Int32Array(P_ORIG);\n  const S = new Int32Array(S_ORIG);\n\n  expensiveKeyScheduleBlowFish(salt, bytes, P, S);\n\n  let round = 0;\n\n  /**\n   * Calculates the next round.\n   */\n  const next = (): Promise<number[] | void> | number[] | void => {\n    if (progressCallback) progressCallback(round / rounds);\n\n    if (round < rounds) {\n      const start = Date.now();\n\n      while (round < rounds) {\n        round += 1;\n        key(bytes, P, S);\n        key(salt, P, S);\n        if (Date.now() - start > MAX_EXECUTION_TIME) break;\n      }\n    } else {\n      for (let i = 0; i < 64; i++)\n        for (let j = 0; j < cLength >> 1; j++) encipher(cdata, j << 1, P, S);\n      const result: number[] = [];\n\n      for (let i = 0; i < cLength; i++) {\n        result.push((cdata[i] >> 24) & 0xff);\n        result.push((cdata[i] >> 16) & 0xff);\n        result.push((cdata[i] >> 8) & 0xff);\n        result.push(cdata[i] & 0xff);\n      }\n\n      if (!sync) return Promise.resolve(result);\n\n      return result;\n    }\n\n    if (!sync)\n      return new Promise((resolve) =>\n        nextTick(() => {\n          void (next() as Promise<number[] | undefined>).then(resolve);\n        }),\n      );\n  };\n\n  if (!sync) return next() as Promise<number[]>;\n\n  let result;\n\n  do {\n    result = next() as number[] | undefined;\n  } while (!result);\n\n  return result;\n};\n", "/**\n * @private\n *\n * Generates cryptographically secure random bytes.\n *\n * @param length Bytes length\n * @returns Random bytes\n * @throws {Error} If no random implementation is available\n */\nexport const random = (length: number): number[] => {\n  try {\n    const array = new Uint32Array(length);\n\n    globalThis.crypto.getRandomValues(array);\n\n    return Array.from(array);\n  } catch {\n    throw Error(\"WebCryptoAPI / globalThis is not available\");\n  }\n};\n", "export const getIllegalArgumentsTypeError = (...args: unknown[]): Error =>\n  new Error(`Illegal arguments: ${args.map((arg) => typeof arg).join(\", \")}`);\n", "import { nextTick } from \"nextTick\";\nimport { random } from \"random\";\n\nimport { encodeBase64 } from \"./base64.js\";\nimport {\n  BCRYPT_SALT_LEN,\n  GENERATE_SALT_DEFAULT_LOG2_ROUNDS,\n} from \"./constant.js\";\nimport { getIllegalArgumentsTypeError } from \"./utils.js\";\n\n/**\n * Synchronously generates a salt.\n *\n * @param rounds Number of rounds to use, defaults to 10 if omitted\n * @returns Resulting salt\n * @throws {Error} If a random fallback is required but not set\n */\nexport const genSaltSync = (\n  rounds = GENERATE_SALT_DEFAULT_LOG2_ROUNDS,\n): string => {\n  if (typeof rounds !== \"number\") throw getIllegalArgumentsTypeError(rounds);\n\n  rounds = rounds < 4 ? 4 : rounds > 31 ? 31 : rounds;\n\n  return `$2b$${rounds < 10 ? \"0\" : \"\"}${rounds}$${encodeBase64(random(BCRYPT_SALT_LEN), BCRYPT_SALT_LEN)}`;\n};\n\n/**\n * Asynchronously generates a salt.\n *\n * @param rounds Number of rounds to use, defaults to 10 if omitted\n */\nexport const genSalt = (\n  rounds = GENERATE_SALT_DEFAULT_LOG2_ROUNDS,\n): Promise<string> =>\n  new Promise((resolve, reject) =>\n    nextTick(() => {\n      try {\n        resolve(genSaltSync(rounds));\n      } catch (err) {\n        reject(err as Error);\n      }\n    }),\n  );\n", "/** Calculates the byte length of a string encoded as UTF8. */\nexport const getUTF8ByteLength = (content: string): number => {\n  let length = 0,\n    charCodePoint = 0;\n\n  for (let i = 0; i < content.length; ++i) {\n    charCodePoint = content.charCodeAt(i);\n    if (charCodePoint < 128) length += 1;\n    else if (charCodePoint < 2048) length += 2;\n    else if (\n      (charCodePoint & 0xfc00) === 0xd800 &&\n      (content.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      i++;\n      length += 4;\n    } else length += 3;\n  }\n\n  return length;\n};\n\n/** Converts a string to an array of UTF8 bytes. */\nexport const convertToUFT8Bytes = (content: string): number[] => {\n  let offset = 0,\n    c1,\n    c2;\n  const buffer = new Array<number>(getUTF8ByteLength(content));\n\n  for (let i = 0, k = content.length; i < k; ++i) {\n    c1 = content.charCodeAt(i);\n    if (c1 < 128) {\n      buffer[offset++] = c1;\n    } else if (c1 < 2048) {\n      buffer[offset++] = (c1 >> 6) | 192;\n      buffer[offset++] = (c1 & 63) | 128;\n    } else if (\n      (c1 & 0xfc00) === 0xd800 &&\n      ((c2 = content.charCodeAt(i + 1)) & 0xfc00) === 0xdc00\n    ) {\n      c1 = 0x10000 + ((c1 & 0x03ff) << 10) + (c2 & 0x03ff);\n      ++i;\n      buffer[offset++] = (c1 >> 18) | 240;\n      buffer[offset++] = ((c1 >> 12) & 63) | 128;\n      buffer[offset++] = ((c1 >> 6) & 63) | 128;\n      buffer[offset++] = (c1 & 63) | 128;\n    } else {\n      buffer[offset++] = (c1 >> 12) | 224;\n      buffer[offset++] = ((c1 >> 6) & 63) | 128;\n      buffer[offset++] = (c1 & 63) | 128;\n    }\n  }\n\n  return buffer;\n};\n", "import { decodeBase64, encodeBase64 } from \"./base64.js\";\nimport {\n  BCRYPT_SALT_LEN,\n  C_ORIG,\n  GENERATE_SALT_DEFAULT_LOG2_ROUNDS,\n} from \"./constant.js\";\nimport { crypt } from \"./crypt.js\";\nimport { genSalt, genSaltSync } from \"./salt.js\";\nimport { convertToUFT8Bytes } from \"./uft8.js\";\n\n/**\n * Internally hashes a string.\n *\n * @private\n * @param content String to hash\n * @param salt Salt to use\n * @param progressCallback Callback called with the current progress\n */\nconst _hash = (\n  content: string,\n  salt: string,\n  sync: boolean,\n  progressCallback?: (progress: number) => void,\n): Promise<string> | string => {\n  if (typeof content !== \"string\" || typeof salt !== \"string\") {\n    const err = new Error(\"Invalid content / salt: not a string\");\n\n    if (!sync) return Promise.reject(err);\n\n    throw err;\n  }\n\n  // Validate the salt\n  let minor: string;\n  let offset: number;\n\n  if (salt.charAt(0) !== \"$\" || salt.charAt(1) !== \"2\") {\n    const err = new Error(\"Invalid salt version: \" + salt.substring(0, 2));\n\n    if (!sync) return Promise.reject(err);\n\n    throw err;\n  }\n\n  if (salt.charAt(2) === \"$\") {\n    minor = String.fromCharCode(0);\n    offset = 3;\n  } else {\n    minor = salt.charAt(2);\n    if (\n      (minor !== \"a\" && minor !== \"b\" && minor !== \"y\") ||\n      salt.charAt(3) !== \"$\"\n    ) {\n      const err = Error(\"Invalid salt revision: \" + salt.substring(2, 4));\n\n      if (!sync) return Promise.reject(err);\n\n      throw err;\n    }\n    offset = 4;\n  }\n\n  const roundText = salt.substring(offset, offset + 2);\n  const rounds = /\\d\\d/.test(roundText) ? Number(roundText) : null;\n\n  // Extract number of rounds\n  if (rounds === null) {\n    const err = new Error(\"Missing salt rounds\");\n\n    if (!sync) return Promise.reject(err);\n\n    throw err;\n  }\n\n  if (rounds < 4 || rounds > 31) {\n    const err = new Error(`Illegal number of rounds (4-31): ${rounds}`);\n\n    if (!sync) return Promise.reject(err);\n\n    throw err;\n  }\n\n  const realSalt = salt.substring(offset + 3, offset + 25);\n\n  content += minor >= \"a\" ? \"\\x00\" : \"\";\n\n  const passwordBytes = convertToUFT8Bytes(content),\n    saltBytes = decodeBase64(realSalt, BCRYPT_SALT_LEN);\n\n  if (saltBytes.length !== BCRYPT_SALT_LEN) {\n    const err = new Error(`Illegal salt: ${realSalt}`);\n\n    if (!sync) return Promise.reject(err);\n\n    throw err;\n  }\n\n  /**\n   * Finishes hashing.\n   * @param bytes Byte array\n   */\n  const finish = (bytes: number[]): string =>\n    `$2${minor >= \"a\" ? minor : \"\"}$${rounds < 10 ? \"0\" : \"\"}${rounds}$${encodeBase64(\n      saltBytes,\n      BCRYPT_SALT_LEN,\n    )}${encodeBase64(bytes, C_ORIG.length * 4 - 1)}`;\n\n  // Sync\n  if (!sync)\n    return (\n      crypt(\n        passwordBytes,\n        saltBytes,\n        rounds,\n        false,\n        progressCallback,\n      ) as Promise<number[]>\n    ).then((bytes) => finish(bytes));\n\n  return finish(\n    crypt(passwordBytes, saltBytes, rounds, true, progressCallback) as number[],\n  );\n};\n\n/**\n * Synchronously generates a hash for the given string.\n *\n * @param contentString String to hash\n * @param salt Salt length to generate or salt to use, default to 10\n * @returns Resulting hash\n */\nexport const hashSync = (\n  contentString: string,\n  salt: string | number = GENERATE_SALT_DEFAULT_LOG2_ROUNDS,\n): string =>\n  _hash(\n    contentString,\n    typeof salt === \"number\" ? genSaltSync(salt) : salt,\n    true,\n  ) as string;\n\n/**\n * Asynchronously generates a hash for the given string.\n *\n * @param contentString String to hash\n * @param salt Salt length to generate or salt to use\n * @param progressCallback Callback successively called with the percentage of rounds completed\n *  (0.0 - 1.0), maximally once per `MAX_EXECUTION_TIME = 100` ms.\n */\nexport const hash = async (\n  contentString: string,\n  salt: number | string,\n  progressCallback?: (progress: number) => void,\n): Promise<string> =>\n  _hash(\n    contentString,\n    typeof salt === \"number\" ? await genSalt(salt) : salt,\n    false,\n    progressCallback,\n  ) as Promise<string>;\n", "import { nextTick } from \"nextTick\";\n\nimport { hash as hashAsync, hashSync } from \"./hash.js\";\nimport { getIllegalArgumentsTypeError } from \"./utils.js\";\n\n/**\n * Synchronously tests a string against a hash.\n *\n * @param content String to compare\n * @param hash Hash to test against\n */\nexport const compareSync = (content: string, hash: string): boolean => {\n  if (typeof content !== \"string\" || typeof hash !== \"string\")\n    throw getIllegalArgumentsTypeError(content, hash);\n\n  if (hash.length !== 60) return false;\n\n  return hashSync(content, hash.substring(0, 29)) === hash;\n};\n\n/**\n * Asynchronously compares the given data against the given hash.\n *\n * @param content Data to compare\n * @param hash Data to be compared to\n * @param progressCallback Callback successively called with the percentage of rounds completed\n *  (0.0 - 1.0), maximally once per `MAX_EXECUTION_TIME = 100` ms.\n */\nexport const compare = (\n  content: string,\n  hash: string,\n  progressCallback?: (percent: number) => void,\n): Promise<boolean> =>\n  new Promise((resolve, reject) => {\n    if (typeof content !== \"string\" || typeof hash !== \"string\") {\n      nextTick(() =>\n        reject(\n          new Error(`Illegal arguments: ${typeof content}, ${typeof hash}`),\n        ),\n      );\n\n      return;\n    }\n\n    if (hash.length !== 60) {\n      nextTick(() => resolve(false));\n\n      return;\n    }\n\n    hashAsync(content, hash.substring(0, 29), progressCallback)\n      .then((comp) => resolve(comp === hash))\n      .catch((err: unknown) => reject(err as Error));\n  });\n", "import { getUTF8ByteLength } from \"./uft8.js\";\nimport { getIllegalArgumentsTypeError } from \"./utils.js\";\n\n/**\n * Gets the number of rounds used to encrypt the specified hash.\n *\n * @param hash Hash to extract the used number of rounds from\n * @returns Number of rounds used\n * @throws {Error} If `hash` is not a string\n */\nexport const getRounds = (hash: string): number => {\n  if (typeof hash !== \"string\") throw getIllegalArgumentsTypeError(hash);\n\n  return parseInt(hash.split(\"$\")[2], 10);\n};\n\n/**\n * Gets the salt portion from a hash. Does not validate the hash.\n *\n * @param hash Hash to extract the salt from\n * @returns Extracted salt part\n * @throws {Error} If `hash` is not a string or otherwise invalid\n */\nexport const getSalt = (hash: string): string => {\n  if (typeof hash !== \"string\") throw getIllegalArgumentsTypeError(hash);\n\n  if (hash.length !== 60)\n    throw new Error(`Illegal hash length: ${hash.length} != 60`);\n\n  return hash.substring(0, 29);\n};\n\n/**\n * Tests if a content will be truncated when hashed, that is its length is\n * greater than 72 bytes when converted to UTF-8.\n * @param content The content to test\n * @returns `true` if truncated, otherwise `false`\n */\nexport const truncates = (content: string): boolean => {\n  if (typeof content !== \"string\") throw getIllegalArgumentsTypeError(content);\n\n  return getUTF8ByteLength(content) > 72;\n};\n", "// src/utils/encode.ts\nvar decodeBase64Url = (str) => {\n  return decodeBase64(str.replace(/_|-/g, (m) => ({ _: \"/\", \"-\": \"+\" })[m] ?? m));\n};\nvar encodeBase64Url = (buf) => encodeBase64(buf).replace(/\\/|\\+/g, (m) => ({ \"/\": \"_\", \"+\": \"-\" })[m] ?? m);\nvar encodeBase64 = (buf) => {\n  let binary = \"\";\n  const bytes = new Uint8Array(buf);\n  for (let i = 0, len = bytes.length; i < len; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return btoa(binary);\n};\nvar decodeBase64 = (str) => {\n  const binary = atob(str);\n  const bytes = new Uint8Array(new ArrayBuffer(binary.length));\n  const half = binary.length / 2;\n  for (let i = 0, j = binary.length - 1; i <= half; i++, j--) {\n    bytes[i] = binary.charCodeAt(i);\n    bytes[j] = binary.charCodeAt(j);\n  }\n  return bytes;\n};\nexport {\n  decodeBase64,\n  decodeBase64Url,\n  encodeBase64,\n  encodeBase64Url\n};\n", "// src/utils/jwt/jwa.ts\nvar AlgorithmTypes = /* @__PURE__ */ ((AlgorithmTypes2) => {\n  AlgorithmTypes2[\"HS256\"] = \"HS256\";\n  AlgorithmTypes2[\"HS384\"] = \"HS384\";\n  AlgorithmTypes2[\"HS512\"] = \"HS512\";\n  AlgorithmTypes2[\"RS256\"] = \"RS256\";\n  AlgorithmTypes2[\"RS384\"] = \"RS384\";\n  AlgorithmTypes2[\"RS512\"] = \"RS512\";\n  AlgorithmTypes2[\"PS256\"] = \"PS256\";\n  AlgorithmTypes2[\"PS384\"] = \"PS384\";\n  AlgorithmTypes2[\"PS512\"] = \"PS512\";\n  AlgorithmTypes2[\"ES256\"] = \"ES256\";\n  AlgorithmTypes2[\"ES384\"] = \"ES384\";\n  AlgorithmTypes2[\"ES512\"] = \"ES512\";\n  AlgorithmTypes2[\"EdDSA\"] = \"EdDSA\";\n  return AlgorithmTypes2;\n})(AlgorithmTypes || {});\nexport {\n  AlgorithmTypes\n};\n", "// src/helper/adapter/index.ts\nvar env = (c, runtime) => {\n  const global = globalThis;\n  const globalEnv = global?.process?.env;\n  runtime ??= getRuntimeKey();\n  const runtimeEnvHandlers = {\n    bun: () => globalEnv,\n    node: () => globalEnv,\n    \"edge-light\": () => globalEnv,\n    deno: () => {\n      return Deno.env.toObject();\n    },\n    workerd: () => c.env,\n    fastly: () => ({}),\n    other: () => ({})\n  };\n  return runtimeEnvHandlers[runtime]();\n};\nvar knownUserAgents = {\n  deno: \"Deno\",\n  bun: \"Bun\",\n  workerd: \"Cloudflare-Workers\",\n  node: \"Node.js\"\n};\nvar getRuntimeKey = () => {\n  const global = globalThis;\n  const userAgentSupported = typeof navigator !== \"undefined\" && typeof navigator.userAgent === \"string\";\n  if (userAgentSupported) {\n    for (const [runtimeKey, userAgent] of Object.entries(knownUserAgents)) {\n      if (checkUserAgentEquals(userAgent)) {\n        return runtimeKey;\n      }\n    }\n  }\n  if (typeof global?.EdgeRuntime === \"string\") {\n    return \"edge-light\";\n  }\n  if (global?.fastly !== void 0) {\n    return \"fastly\";\n  }\n  if (global?.process?.release?.name === \"node\") {\n    return \"node\";\n  }\n  return \"other\";\n};\nvar checkUserAgentEquals = (platform) => {\n  const userAgent = navigator.userAgent;\n  return userAgent.startsWith(platform);\n};\nexport {\n  checkUserAgentEquals,\n  env,\n  getRuntimeKey,\n  knownUserAgents\n};\n", "// src/utils/jwt/types.ts\nvar JwtAlgorithmNotImplemented = class extends Error {\n  constructor(alg) {\n    super(`${alg} is not an implemented algorithm`);\n    this.name = \"JwtAlgorithmNotImplemented\";\n  }\n};\nvar JwtTokenInvalid = class extends Error {\n  constructor(token) {\n    super(`invalid JWT token: ${token}`);\n    this.name = \"JwtTokenInvalid\";\n  }\n};\nvar JwtTokenNotBefore = class extends Error {\n  constructor(token) {\n    super(`token (${token}) is being used before it's valid`);\n    this.name = \"JwtTokenNotBefore\";\n  }\n};\nvar JwtTokenExpired = class extends Error {\n  constructor(token) {\n    super(`token (${token}) expired`);\n    this.name = \"JwtTokenExpired\";\n  }\n};\nvar JwtTokenIssuedAt = class extends Error {\n  constructor(currentTimestamp, iat) {\n    super(\n      `Invalid \"iat\" claim, must be a valid number lower than \"${currentTimestamp}\" (iat: \"${iat}\")`\n    );\n    this.name = \"JwtTokenIssuedAt\";\n  }\n};\nvar JwtTokenIssuer = class extends Error {\n  constructor(expected, iss) {\n    super(`expected issuer \"${expected}\", got ${iss ? `\"${iss}\"` : \"none\"} `);\n    this.name = \"JwtTokenIssuer\";\n  }\n};\nvar JwtHeaderInvalid = class extends Error {\n  constructor(header) {\n    super(`jwt header is invalid: ${JSON.stringify(header)}`);\n    this.name = \"JwtHeaderInvalid\";\n  }\n};\nvar JwtHeaderRequiresKid = class extends Error {\n  constructor(header) {\n    super(`required \"kid\" in jwt header: ${JSON.stringify(header)}`);\n    this.name = \"JwtHeaderRequiresKid\";\n  }\n};\nvar JwtTokenSignatureMismatched = class extends Error {\n  constructor(token) {\n    super(`token(${token}) signature mismatched`);\n    this.name = \"JwtTokenSignatureMismatched\";\n  }\n};\nvar CryptoKeyUsage = /* @__PURE__ */ ((CryptoKeyUsage2) => {\n  CryptoKeyUsage2[\"Encrypt\"] = \"encrypt\";\n  CryptoKeyUsage2[\"Decrypt\"] = \"decrypt\";\n  CryptoKeyUsage2[\"Sign\"] = \"sign\";\n  CryptoKeyUsage2[\"Verify\"] = \"verify\";\n  CryptoKeyUsage2[\"DeriveKey\"] = \"deriveKey\";\n  CryptoKeyUsage2[\"DeriveBits\"] = \"deriveBits\";\n  CryptoKeyUsage2[\"WrapKey\"] = \"wrapKey\";\n  CryptoKeyUsage2[\"UnwrapKey\"] = \"unwrapKey\";\n  return CryptoKeyUsage2;\n})(CryptoKeyUsage || {});\nexport {\n  CryptoKeyUsage,\n  JwtAlgorithmNotImplemented,\n  JwtHeaderInvalid,\n  JwtHeaderRequiresKid,\n  JwtTokenExpired,\n  JwtTokenInvalid,\n  JwtTokenIssuedAt,\n  JwtTokenIssuer,\n  JwtTokenNotBefore,\n  JwtTokenSignatureMismatched\n};\n", "// src/utils/jwt/utf8.ts\nvar utf8Encoder = new TextEncoder();\nvar utf8Decoder = new TextDecoder();\nexport {\n  utf8Decoder,\n  utf8Encoder\n};\n", "// src/utils/jwt/jws.ts\nimport { getRuntimeKey } from \"../../helper/adapter/index.js\";\nimport { decodeBase64 } from \"../encode.js\";\nimport { CryptoKeyUsage, JwtAlgorithmNotImplemented } from \"./types.js\";\nimport { utf8Encoder } from \"./utf8.js\";\nasync function signing(privateKey, alg, data) {\n  const algorithm = getKeyAlgorithm(alg);\n  const cryptoKey = await importPrivateKey(privateKey, algorithm);\n  return await crypto.subtle.sign(algorithm, cryptoKey, data);\n}\nasync function verifying(publicKey, alg, signature, data) {\n  const algorithm = getKeyAlgorithm(alg);\n  const cryptoKey = await importPublicKey(publicKey, algorithm);\n  return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n}\nfunction pemToBinary(pem) {\n  return decodeBase64(pem.replace(/-+(BEGIN|END).*/g, \"\").replace(/\\s/g, \"\"));\n}\nasync function importPrivateKey(key, alg) {\n  if (!crypto.subtle || !crypto.subtle.importKey) {\n    throw new Error(\"`crypto.subtle.importKey` is undefined. JWT auth middleware requires it.\");\n  }\n  if (isCryptoKey(key)) {\n    if (key.type !== \"private\" && key.type !== \"secret\") {\n      throw new Error(\n        `unexpected key type: CryptoKey.type is ${key.type}, expected private or secret`\n      );\n    }\n    return key;\n  }\n  const usages = [CryptoKeyUsage.Sign];\n  if (typeof key === \"object\") {\n    return await crypto.subtle.importKey(\"jwk\", key, alg, false, usages);\n  }\n  if (key.includes(\"PRIVATE\")) {\n    return await crypto.subtle.importKey(\"pkcs8\", pemToBinary(key), alg, false, usages);\n  }\n  return await crypto.subtle.importKey(\"raw\", utf8Encoder.encode(key), alg, false, usages);\n}\nasync function importPublicKey(key, alg) {\n  if (!crypto.subtle || !crypto.subtle.importKey) {\n    throw new Error(\"`crypto.subtle.importKey` is undefined. JWT auth middleware requires it.\");\n  }\n  if (isCryptoKey(key)) {\n    if (key.type === \"public\" || key.type === \"secret\") {\n      return key;\n    }\n    key = await exportPublicJwkFrom(key);\n  }\n  if (typeof key === \"string\" && key.includes(\"PRIVATE\")) {\n    const privateKey = await crypto.subtle.importKey(\"pkcs8\", pemToBinary(key), alg, true, [\n      CryptoKeyUsage.Sign\n    ]);\n    key = await exportPublicJwkFrom(privateKey);\n  }\n  const usages = [CryptoKeyUsage.Verify];\n  if (typeof key === \"object\") {\n    return await crypto.subtle.importKey(\"jwk\", key, alg, false, usages);\n  }\n  if (key.includes(\"PUBLIC\")) {\n    return await crypto.subtle.importKey(\"spki\", pemToBinary(key), alg, false, usages);\n  }\n  return await crypto.subtle.importKey(\"raw\", utf8Encoder.encode(key), alg, false, usages);\n}\nasync function exportPublicJwkFrom(privateKey) {\n  if (privateKey.type !== \"private\") {\n    throw new Error(`unexpected key type: ${privateKey.type}`);\n  }\n  if (!privateKey.extractable) {\n    throw new Error(\"unexpected private key is unextractable\");\n  }\n  const jwk = await crypto.subtle.exportKey(\"jwk\", privateKey);\n  const { kty } = jwk;\n  const { alg, e, n } = jwk;\n  const { crv, x, y } = jwk;\n  return { kty, alg, e, n, crv, x, y, key_ops: [CryptoKeyUsage.Verify] };\n}\nfunction getKeyAlgorithm(name) {\n  switch (name) {\n    case \"HS256\":\n      return {\n        name: \"HMAC\",\n        hash: {\n          name: \"SHA-256\"\n        }\n      };\n    case \"HS384\":\n      return {\n        name: \"HMAC\",\n        hash: {\n          name: \"SHA-384\"\n        }\n      };\n    case \"HS512\":\n      return {\n        name: \"HMAC\",\n        hash: {\n          name: \"SHA-512\"\n        }\n      };\n    case \"RS256\":\n      return {\n        name: \"RSASSA-PKCS1-v1_5\",\n        hash: {\n          name: \"SHA-256\"\n        }\n      };\n    case \"RS384\":\n      return {\n        name: \"RSASSA-PKCS1-v1_5\",\n        hash: {\n          name: \"SHA-384\"\n        }\n      };\n    case \"RS512\":\n      return {\n        name: \"RSASSA-PKCS1-v1_5\",\n        hash: {\n          name: \"SHA-512\"\n        }\n      };\n    case \"PS256\":\n      return {\n        name: \"RSA-PSS\",\n        hash: {\n          name: \"SHA-256\"\n        },\n        saltLength: 32\n      };\n    case \"PS384\":\n      return {\n        name: \"RSA-PSS\",\n        hash: {\n          name: \"SHA-384\"\n        },\n        saltLength: 48\n      };\n    case \"PS512\":\n      return {\n        name: \"RSA-PSS\",\n        hash: {\n          name: \"SHA-512\"\n        },\n        saltLength: 64\n      };\n    case \"ES256\":\n      return {\n        name: \"ECDSA\",\n        hash: {\n          name: \"SHA-256\"\n        },\n        namedCurve: \"P-256\"\n      };\n    case \"ES384\":\n      return {\n        name: \"ECDSA\",\n        hash: {\n          name: \"SHA-384\"\n        },\n        namedCurve: \"P-384\"\n      };\n    case \"ES512\":\n      return {\n        name: \"ECDSA\",\n        hash: {\n          name: \"SHA-512\"\n        },\n        namedCurve: \"P-521\"\n      };\n    case \"EdDSA\":\n      return {\n        name: \"Ed25519\",\n        namedCurve: \"Ed25519\"\n      };\n    default:\n      throw new JwtAlgorithmNotImplemented(name);\n  }\n}\nfunction isCryptoKey(key) {\n  const runtime = getRuntimeKey();\n  if (runtime === \"node\" && !!crypto.webcrypto) {\n    return key instanceof crypto.webcrypto.CryptoKey;\n  }\n  return key instanceof CryptoKey;\n}\nexport {\n  signing,\n  verifying\n};\n", "// src/utils/jwt/jwt.ts\nimport { decodeBase64Url, encodeBase64Url } from \"../../utils/encode.js\";\nimport { AlgorithmTypes } from \"./jwa.js\";\nimport { signing, verifying } from \"./jws.js\";\nimport {\n  JwtHeaderInvalid,\n  JwtHeaderRequiresKid,\n  JwtTokenExpired,\n  JwtTokenInvalid,\n  JwtTokenIssuedAt,\n  JwtTokenIssuer,\n  JwtTokenNotBefore,\n  JwtTokenSignatureMismatched\n} from \"./types.js\";\nimport { utf8Decoder, utf8Encoder } from \"./utf8.js\";\nvar encodeJwtPart = (part) => encodeBase64Url(utf8Encoder.encode(JSON.stringify(part)).buffer).replace(/=/g, \"\");\nvar encodeSignaturePart = (buf) => encodeBase64Url(buf).replace(/=/g, \"\");\nvar decodeJwtPart = (part) => JSON.parse(utf8Decoder.decode(decodeBase64Url(part)));\nfunction isTokenHeader(obj) {\n  if (typeof obj === \"object\" && obj !== null) {\n    const objWithAlg = obj;\n    return \"alg\" in objWithAlg && Object.values(AlgorithmTypes).includes(objWithAlg.alg) && (!(\"typ\" in objWithAlg) || objWithAlg.typ === \"JWT\");\n  }\n  return false;\n}\nvar sign = async (payload, privateKey, alg = \"HS256\") => {\n  const encodedPayload = encodeJwtPart(payload);\n  let encodedHeader;\n  if (typeof privateKey === \"object\" && \"alg\" in privateKey) {\n    alg = privateKey.alg;\n    encodedHeader = encodeJwtPart({ alg, typ: \"JWT\", kid: privateKey.kid });\n  } else {\n    encodedHeader = encodeJwtPart({ alg, typ: \"JWT\" });\n  }\n  const partialToken = `${encodedHeader}.${encodedPayload}`;\n  const signaturePart = await signing(privateKey, alg, utf8Encoder.encode(partialToken));\n  const signature = encodeSignaturePart(signaturePart);\n  return `${partialToken}.${signature}`;\n};\nvar verify = async (token, publicKey, algOrOptions) => {\n  const optsIn = typeof algOrOptions === \"string\" ? { alg: algOrOptions } : algOrOptions || {};\n  const opts = {\n    alg: optsIn.alg ?? \"HS256\",\n    iss: optsIn.iss,\n    nbf: optsIn.nbf ?? true,\n    exp: optsIn.exp ?? true,\n    iat: optsIn.iat ?? true\n  };\n  const tokenParts = token.split(\".\");\n  if (tokenParts.length !== 3) {\n    throw new JwtTokenInvalid(token);\n  }\n  const { header, payload } = decode(token);\n  if (!isTokenHeader(header)) {\n    throw new JwtHeaderInvalid(header);\n  }\n  const now = Date.now() / 1e3 | 0;\n  if (opts.nbf && payload.nbf && payload.nbf > now) {\n    throw new JwtTokenNotBefore(token);\n  }\n  if (opts.exp && payload.exp && payload.exp <= now) {\n    throw new JwtTokenExpired(token);\n  }\n  if (opts.iat && payload.iat && now < payload.iat) {\n    throw new JwtTokenIssuedAt(now, payload.iat);\n  }\n  if (opts.iss) {\n    if (!payload.iss) {\n      throw new JwtTokenIssuer(opts.iss, null);\n    }\n    if (typeof opts.iss === \"string\" && payload.iss !== opts.iss) {\n      throw new JwtTokenIssuer(opts.iss, payload.iss);\n    }\n    if (opts.iss instanceof RegExp && !opts.iss.test(payload.iss)) {\n      throw new JwtTokenIssuer(opts.iss, payload.iss);\n    }\n  }\n  const headerPayload = token.substring(0, token.lastIndexOf(\".\"));\n  const verified = await verifying(\n    publicKey,\n    opts.alg,\n    decodeBase64Url(tokenParts[2]),\n    utf8Encoder.encode(headerPayload)\n  );\n  if (!verified) {\n    throw new JwtTokenSignatureMismatched(token);\n  }\n  return payload;\n};\nvar verifyWithJwks = async (token, options, init) => {\n  const verifyOpts = options.verification || {};\n  const header = decodeHeader(token);\n  if (!isTokenHeader(header)) {\n    throw new JwtHeaderInvalid(header);\n  }\n  if (!header.kid) {\n    throw new JwtHeaderRequiresKid(header);\n  }\n  if (options.jwks_uri) {\n    const response = await fetch(options.jwks_uri, init);\n    if (!response.ok) {\n      throw new Error(`failed to fetch JWKS from ${options.jwks_uri}`);\n    }\n    const data = await response.json();\n    if (!data.keys) {\n      throw new Error('invalid JWKS response. \"keys\" field is missing');\n    }\n    if (!Array.isArray(data.keys)) {\n      throw new Error('invalid JWKS response. \"keys\" field is not an array');\n    }\n    if (options.keys) {\n      options.keys.push(...data.keys);\n    } else {\n      options.keys = data.keys;\n    }\n  } else if (!options.keys) {\n    throw new Error('verifyWithJwks requires options for either \"keys\" or \"jwks_uri\" or both');\n  }\n  const matchingKey = options.keys.find((key) => key.kid === header.kid);\n  if (!matchingKey) {\n    throw new JwtTokenInvalid(token);\n  }\n  return await verify(token, matchingKey, {\n    alg: matchingKey.alg || header.alg,\n    ...verifyOpts\n  });\n};\nvar decode = (token) => {\n  try {\n    const [h, p] = token.split(\".\");\n    const header = decodeJwtPart(h);\n    const payload = decodeJwtPart(p);\n    return {\n      header,\n      payload\n    };\n  } catch {\n    throw new JwtTokenInvalid(token);\n  }\n};\nvar decodeHeader = (token) => {\n  try {\n    const [h] = token.split(\".\");\n    return decodeJwtPart(h);\n  } catch {\n    throw new JwtTokenInvalid(token);\n  }\n};\nexport {\n  decode,\n  decodeHeader,\n  isTokenHeader,\n  sign,\n  verify,\n  verifyWithJwks\n};\n", "// src/utils/jwt/index.ts\nimport { decode, sign, verify, verifyWithJwks } from \"./jwt.js\";\nvar Jwt = { sign, verify, decode, verifyWithJwks };\nexport {\n  Jwt\n};\n", "// src/middleware/jwt/jwt.ts\nimport { getCookie, getSignedCookie } from \"../../helper/cookie/index.js\";\nimport { HTTPException } from \"../../http-exception.js\";\nimport { Jwt } from \"../../utils/jwt/index.js\";\nimport \"../../context.js\";\nvar jwt = (options) => {\n  const verifyOpts = options.verification || {};\n  if (!options || !options.secret) {\n    throw new Error('JWT auth middleware requires options for \"secret\"');\n  }\n  if (!crypto.subtle || !crypto.subtle.importKey) {\n    throw new Error(\"`crypto.subtle.importKey` is undefined. JWT auth middleware requires it.\");\n  }\n  return async function jwt2(ctx, next) {\n    const headerName = options.headerName || \"Authorization\";\n    const credentials = ctx.req.raw.headers.get(headerName);\n    let token;\n    if (credentials) {\n      const parts = credentials.split(/\\s+/);\n      if (parts.length !== 2) {\n        const errDescription = \"invalid credentials structure\";\n        throw new HTTPException(401, {\n          message: errDescription,\n          res: unauthorizedResponse({\n            ctx,\n            error: \"invalid_request\",\n            errDescription\n          })\n        });\n      } else {\n        token = parts[1];\n      }\n    } else if (options.cookie) {\n      if (typeof options.cookie == \"string\") {\n        token = getCookie(ctx, options.cookie);\n      } else if (options.cookie.secret) {\n        if (options.cookie.prefixOptions) {\n          token = await getSignedCookie(\n            ctx,\n            options.cookie.secret,\n            options.cookie.key,\n            options.cookie.prefixOptions\n          );\n        } else {\n          token = await getSignedCookie(ctx, options.cookie.secret, options.cookie.key);\n        }\n      } else {\n        if (options.cookie.prefixOptions) {\n          token = getCookie(ctx, options.cookie.key, options.cookie.prefixOptions);\n        } else {\n          token = getCookie(ctx, options.cookie.key);\n        }\n      }\n    }\n    if (!token) {\n      const errDescription = \"no authorization included in request\";\n      throw new HTTPException(401, {\n        message: errDescription,\n        res: unauthorizedResponse({\n          ctx,\n          error: \"invalid_request\",\n          errDescription\n        })\n      });\n    }\n    let payload;\n    let cause;\n    try {\n      payload = await Jwt.verify(token, options.secret, {\n        alg: options.alg,\n        ...verifyOpts\n      });\n    } catch (e) {\n      cause = e;\n    }\n    if (!payload) {\n      throw new HTTPException(401, {\n        message: \"Unauthorized\",\n        res: unauthorizedResponse({\n          ctx,\n          error: \"invalid_token\",\n          statusText: \"Unauthorized\",\n          errDescription: \"token verification failure\"\n        }),\n        cause\n      });\n    }\n    ctx.set(\"jwtPayload\", payload);\n    await next();\n  };\n};\nfunction unauthorizedResponse(opts) {\n  return new Response(\"Unauthorized\", {\n    status: 401,\n    statusText: opts.statusText,\n    headers: {\n      \"WWW-Authenticate\": `Bearer realm=\"${opts.ctx.req.url}\",error=\"${opts.error}\",error_description=\"${opts.errDescription}\"`\n    }\n  });\n}\nvar verifyWithJwks = Jwt.verifyWithJwks;\nvar verify = Jwt.verify;\nvar decode = Jwt.decode;\nvar sign = Jwt.sign;\nexport {\n  decode,\n  jwt,\n  sign,\n  verify,\n  verifyWithJwks\n};\n", "import { Hono, Context } from 'hono';\nimport { handle } from 'hono/cloudflare-pages';\nimport type { PagesFunction } from '@cloudflare/workers-types';\nimport { hash, compare } from 'bcrypt-ts';\nimport { jwt, sign, verify } from 'hono/jwt';\nimport type { Next } from 'hono';\n\n// Define Env bindings from wrangler.toml\ntype Env = {\n  DB: D1Database;\n  KV: KVNamespace;\n  JWT_SECRET: string;\n}\n\ntype ClientType = 'CLASH' | 'SURGE' | 'V2RAYN' | 'QUANTUMULT_X' | 'GENERIC';\n\nconst app = new Hono<{ Bindings: Env }>().basePath('/api');\n\n// Custom authentication middleware\nconst manualAuthMiddleware = async (c: Context, next: Next) => {\n  const authHeader = c.req.header('Authorization');\n  if (!authHeader || !authHeader.startsWith('Bearer ')) {\n    return c.json({ success: false, message: 'Unauthorized: Missing or invalid token format' }, 401);\n  }\n\n  const token = authHeader.substring(7);\n  const secret = c.env.JWT_SECRET;\n\n  if (!secret) {\n    console.error('JWT_SECRET is not configured on the server.');\n    return c.json({ success: false, message: 'Internal Server Error: JWT secret not configured' }, 500);\n  }\n\n  try {\n    const payload = await verify(token, secret);\n    c.set('jwtPayload', payload);\n    await next();\n  } catch (error) {\n    console.error('JWT verification failed:', error);\n    return c.json({ success: false, message: 'Unauthorized: Invalid token' }, 401);\n  }\n};\n\n\n\n// Error handling middleware\napp.onError((err, c) => {\n  console.error(`${err}`);\n  return c.json({ success: false, message: err.message || 'An unexpected error occurred' }, 500);\n});\n\n// Logging middleware\napp.use('*', async (c, next) => {\n  const start = Date.now();\n  await next();\n  const end = Date.now();\n  console.log(`${c.req.method} ${c.req.path} - ${c.res.status} ${end - start}ms`);\n});\n\napp.get('/hello', (c) => {\n  return c.text('Hello, Hono!');\n});\n\n// Middleware to check for 'admin' role\nconst adminAuthMiddleware = async (c: Context, next: Next) => {\n  const user = c.get('jwtPayload');\n  if (user.role !== 'admin') {\n    return c.json({ success: false, message: 'Forbidden: Administrator access required' }, 403);\n  }\n  await next();\n};\n\n// Apply authentication middleware to all routes that need it\napp.use('/stats', manualAuthMiddleware);\napp.use('/nodes', manualAuthMiddleware);\napp.use('/nodes/*', manualAuthMiddleware);\napp.use('/subscriptions', manualAuthMiddleware);\napp.use('/subscriptions/*', manualAuthMiddleware);\napp.use('/profiles', manualAuthMiddleware);\napp.use('/profiles/*', manualAuthMiddleware);\napp.use('/node-statuses', manualAuthMiddleware);\napp.use('/subscription-rules', manualAuthMiddleware);\napp.use('/config-templates', manualAuthMiddleware);\napp.use('/config-templates/*', manualAuthMiddleware);\napp.use('/processing-units', manualAuthMiddleware);\napp.use('/processing-units/*', manualAuthMiddleware);\napp.use('/subconverter-assets', manualAuthMiddleware);\napp.use('/subconverter-assets/*', manualAuthMiddleware);\napp.use('/settings', manualAuthMiddleware);\napp.use('/settings/*', manualAuthMiddleware);\napp.use('/auth/me', manualAuthMiddleware);\napp.use('/auth/password', manualAuthMiddleware);\n\n// Apply admin middleware to all admin routes\napp.use('/admin/*', manualAuthMiddleware, adminAuthMiddleware);\n\n\n// Stats route\napp.get('/stats', async (c) => {\n  const user = c.get('jwtPayload');\n  const userId = user.id;\n\n  const [subscriptions, nodes, profiles] = await Promise.all([\n    c.env.DB.prepare('SELECT COUNT(*) as count FROM subscriptions WHERE user_id = ?').bind(userId).first<{ count: number }>(),\n    c.env.DB.prepare('SELECT COUNT(*) as count FROM nodes WHERE user_id = ?').bind(userId).first<{ count: number }>(),\n    c.env.DB.prepare('SELECT COUNT(*) as count FROM profiles WHERE user_id = ?').bind(userId).first<{ count: number }>()\n  ]);\n\n  return c.json({\n    success: true,\n    data: {\n      subscriptions: subscriptions?.count ?? 0,\n      nodes: nodes?.count ?? 0,\n      profiles: profiles?.count ?? 0,\n    }\n  });\n});\n\n// Auth routes\napp.post('/auth/register', async (c) => {\n  const { username, password } = await c.req.json();\n\n  if (!username || !password) {\n    return c.json({ success: false, message: 'Missing username or password' }, 400);\n  }\n\n  // Check for existing username\n  const existingUser = await c.env.DB.prepare(\n    'SELECT id FROM users WHERE username = ?'\n  ).bind(username).first();\n\n  if (existingUser) {\n    return c.json({ success: false, message: 'Username already exists' }, 409);\n  }\n\n  // Determine user role and check registration status\n  const userCountResult = await c.env.DB.prepare(\"SELECT COUNT(*) as count FROM users WHERE role != 'system'\").first<{ count: number }>();\n  const userCount = userCountResult?.count ?? 0;\n\n  let role = 'user';\n\n  if (userCount === 0) {\n    // First user is always an admin\n    role = 'admin';\n  } else {\n    // For subsequent users, check if registration is allowed\n    // For subsequent users, check if registration is allowed via system settings\n    const allowRegistrationSetting = await c.env.DB.prepare(\n      \"SELECT value FROM system_settings WHERE key = 'allow_registration'\"\n    ).first<{ value: string }>();\n\n    if (allowRegistrationSetting?.value !== 'true') {\n      return c.json({ success: false, message: '\u65B0\u7528\u6237\u6CE8\u518C\u529F\u80FD\u5DF2\u88AB\u7BA1\u7406\u5458\u7981\u7528\u3002' }, 403);\n    }\n  }\n\n  const hashedPassword = await hash(password, 10);\n  const id = crypto.randomUUID();\n  const now = new Date().toISOString();\n\n  await c.env.DB.prepare(\n    'INSERT INTO users (id, username, password, role, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?)'\n  ).bind(id, username, hashedPassword, role, now, now).run();\n\n  return c.json({ success: true, data: { id, username, role } }, 201);\n});\n\napp.post('/auth/login', async (c) => {\n  const { username, password } = await c.req.json();\n\n  if (!username || !password) {\n    return c.json({ success: false, message: 'Missing username or password' }, 400);\n  }\n\n  const user = await c.env.DB.prepare(\n    'SELECT * FROM users WHERE username = ?'\n  ).bind(username).first<any>();\n\n  if (!user) {\n    return c.json({ success: false, message: 'User not found' }, 404);\n  }\n\n  const isPasswordValid = await compare(password, user.password as string);\n  if (!isPasswordValid) {\n    return c.json({ success: false, message: 'Invalid password' }, 401);\n  }\n\n  const payload = {\n    id: user.id,\n    username: user.username,\n    role: user.role || 'user',\n    exp: Math.floor(Date.now() / 1000) + (60 * 60 * 24) // 1 day expiration\n  }\n  const token = await sign(payload, c.env.JWT_SECRET);\n\n  return c.json({ success: true, data: { token, user: payload } });\n});\n\napp.post('/auth/logout', (c) => {\n  // TODO: Implement session invalidation\n  return c.json({ success: true, message: 'Logged out successfully' });\n});\n\napp.get('/auth/me', (c) => {\n  const user = c.get('jwtPayload');\n  return c.json({ success: true, data: user });\n});\n\napp.put('/auth/password', async (c) => {\n  const userPayload = c.get('jwtPayload');\n  const { oldPassword, newPassword } = await c.req.json();\n\n  if (!oldPassword || !newPassword) {\n    return c.json({ success: false, message: 'Old and new passwords are required' }, 400);\n  }\n\n  // 1. Fetch user from DB\n  const user = await c.env.DB.prepare(\n    'SELECT * FROM users WHERE id = ?'\n  ).bind(userPayload.id).first<any>();\n\n  if (!user) {\n    return c.json({ success: false, message: 'User not found' }, 404);\n  }\n\n  // 2. Verify old password\n  const isOldPasswordValid = await compare(oldPassword, user.password as string);\n  if (!isOldPasswordValid) {\n    return c.json({ success: false, message: 'Invalid old password' }, 401);\n  }\n\n  // 3. Hash new password\n  const hashedNewPassword = await hash(newPassword, 10);\n  const now = new Date().toISOString();\n\n  // 4. Update password in DB\n  await c.env.DB.prepare(\n    'UPDATE users SET password = ?, updated_at = ? WHERE id = ?'\n  ).bind(hashedNewPassword, now, user.id).run();\n\n  return c.json({ success: true, message: 'Password updated successfully' });\n});\n\n// Node routes\napp.get('/nodes', async (c) => {\n  const user = c.get('jwtPayload');\n  const { results } = await c.env.DB.prepare('SELECT * FROM nodes WHERE user_id = ? ORDER BY sort_order ASC').bind(user.id).all();\n  return c.json({ success: true, data: results });\n});\n\napp.post('/nodes', async (c) => {\n  const body = await c.req.json<{\n    name: string;\n    link: string;\n    protocol: string;\n    protocol_params: any;\n    group_id?: string;\n  }>();\n\n  if (!body.name || !body.link || !body.protocol) {\n    return c.json({ success: false, message: 'Missing required fields: name, link, protocol' }, 400);\n  }\n\n  const user = c.get('jwtPayload');\n  const id = crypto.randomUUID();\n  const now = new Date().toISOString();\n\n  // For now, we can extract some legacy fields from protocol_params for compatibility\n  const server = body.protocol_params?.add || body.protocol_params?.server || '';\n  const port = Number(body.protocol_params?.port || 0);\n  const type = body.protocol; // The new `protocol` field maps to the old `type` field\n\n  await c.env.DB.prepare(\n    `INSERT INTO nodes (id, user_id, group_id, name, link, protocol, protocol_params, server, port, type, created_at, updated_at)\n     VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`\n  ).bind(\n    id, user.id, body.group_id || null, body.name, body.link, body.protocol,\n    JSON.stringify(body.protocol_params), server, port, type, now, now\n  ).run();\n\n  return c.json({ success: true, data: { id } });\n});\n\napp.get('/nodes/:id', async (c) => {\n  const user = c.get('jwtPayload');\n  const { id } = c.req.param();\n  const node = await c.env.DB.prepare('SELECT * FROM nodes WHERE id = ? AND user_id = ?').bind(id, user.id).first();\n\n  if (!node) {\n    return c.json({ success: false, message: 'Node not found' }, 404);\n  }\n\n  return c.json({ success: true, data: node });\n});\n\napp.put('/nodes/:id', async (c) => {\n  const { id } = c.req.param();\n  const user = c.get('jwtPayload');\n  const body = await c.req.json<{\n    name?: string;\n    link?: string;\n  }>();\n\n  const now = new Date().toISOString();\n\n  // Fetch the existing node\n  const existingNode = await c.env.DB.prepare('SELECT * FROM nodes WHERE id = ? AND user_id = ?').bind(id, user.id).first<Node>();\n  if (!existingNode) {\n    return c.json({ success: false, message: 'Node not found' }, 404);\n  }\n\n  let finalNodeData: Partial<Node> = {\n    name: body.name ?? existingNode.name,\n    link: existingNode.link, // Default to old link\n  };\n\n  // If the link is provided and has changed, re-parse it\n  if (body.link && body.link !== existingNode.link) {\n    const parsedNode = parseNodeLink(body.link);\n    if (!parsedNode) {\n      return c.json({ success: false, message: '\u65E0\u6CD5\u89E3\u6790\u65B0\u7684\u8282\u70B9\u94FE\u63A5\u3002\u8BF7\u68C0\u67E5\u94FE\u63A5\u683C\u5F0F\u662F\u5426\u6B63\u786E\u3002' }, 400);\n    }\n    // Update all relevant fields from the newly parsed link\n    finalNodeData = {\n      ...finalNodeData, // Keep the new name if provided\n      link: parsedNode.link,\n      protocol: parsedNode.protocol,\n      protocol_params: JSON.stringify(parsedNode.protocol_params),\n      server: parsedNode.server,\n      port: parsedNode.port,\n      type: parsedNode.type,\n      password: parsedNode.password,\n      params: JSON.stringify(parsedNode.params),\n    };\n  } else {\n    // If link is not changed, just update the name\n    finalNodeData = {\n      name: body.name ?? existingNode.name,\n    };\n  }\n\n  // Build the dynamic SET clause\n  const fieldsToUpdate = Object.keys(finalNodeData);\n  const setClause = fieldsToUpdate.map(field => `${field} = ?`).join(', ');\n  const values = [...Object.values(finalNodeData), now, id, user.id];\n\n  if (fieldsToUpdate.length === 0) {\n    return c.json({ success: true, message: 'No changes detected.' });\n  }\n\n  await c.env.DB.prepare(\n    `UPDATE nodes\n     SET ${setClause}, updated_at = ?\n     WHERE id = ? AND user_id = ?`\n  ).bind(...values).run();\n\n  return c.json({ success: true });\n});\n\napp.delete('/nodes/:id', async (c) => {\n  const user = c.get('jwtPayload');\n  const { id } = c.req.param();\n  await c.env.DB.prepare('DELETE FROM nodes WHERE id = ? AND user_id = ?').bind(id, user.id).run();\n  return c.json({ success: true });\n});\n\napp.post('/nodes/batch-import', async (c) => {\n  const { nodes } = await c.req.json<{ nodes: any[] }>();\n\n  if (!nodes || !Array.isArray(nodes)) {\n    return c.json({ success: false, message: 'Missing nodes array' }, 400);\n  }\n\n  let successCount = 0;\n  let errorCount = 0;\n\n  const user = c.get('jwtPayload');\n  const stmts = nodes.map(node => {\n    // The new batch import expects a pre-parsed node object\n    if (!node.name || !node.link || !node.protocol || !node.protocol_params) {\n      errorCount++;\n      return null;\n    }\n    successCount++;\n    const id = crypto.randomUUID();\n    const now = new Date().toISOString();\n    \n    const server = node.protocol_params?.add || node.protocol_params?.server || '';\n    const port = Number(node.protocol_params?.port || 0);\n    const type = node.protocol;\n\n    return c.env.DB.prepare(\n      `INSERT INTO nodes (id, user_id, group_id, name, link, protocol, protocol_params, server, port, type, created_at, updated_at)\n       VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`\n    ).bind(id, user.id, node.group_id, node.name, node.link, node.protocol, JSON.stringify(node.protocol_params), server, port, type, now, now);\n  }).filter((stmt): stmt is D1PreparedStatement => stmt !== null);\n\n  if (stmts.length > 0) {\n    await c.env.DB.batch(stmts);\n  }\n\n  return c.json({\n    success: true,\n    data: {\n      message: `Imported ${successCount} nodes, ${errorCount} failed.`,\n      successCount,\n      errorCount,\n    }\n  });\n});\n\napp.post('/nodes/batch-delete', async (c) => {\n  const { ids } = await c.req.json<{ ids: string[] }>();\n\n  if (!ids || !Array.isArray(ids)) {\n    return c.json({ success: false, message: 'Missing ids array' }, 400);\n  }\n\n  const user = c.get('jwtPayload');\n  const stmts = ids.map(id => c.env.DB.prepare('DELETE FROM nodes WHERE id = ? AND user_id = ?').bind(id, user.id));\n\n  if (stmts.length > 0) {\n    await c.env.DB.batch(stmts);\n  }\n\n  return c.json({ success: true });\n});\n\napp.delete('/nodes/manual', async (c) => {\n  const user = c.get('jwtPayload');\n  // Deletes all nodes that are not part of any subscription (i.e., manually added)\n  const { success, meta } = await c.env.DB.prepare(\n    \"DELETE FROM nodes WHERE user_id = ? AND group_id IS NULL\"\n  ).bind(user.id).run();\n\n  if (!success) {\n    return c.json({ success: false, message: 'Failed to clear manual nodes.' }, 500);\n  }\n\n  // meta.changes should contain the number of deleted rows\n  return c.json({ success: true, message: `Successfully cleared ${meta.changes} manual nodes.` });\n});\n\napp.post('/nodes/update-order', async (c) => {\n  const user = c.get('jwtPayload');\n  const { nodeIds } = await c.req.json<{ nodeIds: string[] }>();\n\n  if (!nodeIds || !Array.isArray(nodeIds)) {\n    return c.json({ success: false, message: 'Missing or invalid nodeIds array' }, 400);\n  }\n\n  // In a real-world scenario, you'd also verify that all nodeIds belong to the user.\n  // For simplicity here, we'll trust the client sends correct data.\n\n  const stmts = nodeIds.map((id, index) =>\n    c.env.DB.prepare('UPDATE nodes SET sort_order = ? WHERE id = ? AND user_id = ?').bind(index, id, user.id)\n  );\n\n  if (stmts.length > 0) {\n    await c.env.DB.batch(stmts);\n  }\n\n  return c.json({ success: true, message: 'Node order updated successfully.' });\n});\n\n// Subscription routes\napp.get('/subscriptions', async (c) => {\n  const user = c.get('jwtPayload');\n  const { results } = await c.env.DB.prepare('SELECT * FROM subscriptions WHERE user_id = ?').bind(user.id).all();\n  return c.json({ success: true, data: results });\n});\n\n// Endpoint to get subscriptions for select components\napp.get('/subscriptions/for-select', async (c) => {\n    const user = c.get('jwtPayload');\n    try {\n        const { results } = await c.env.DB.prepare(\n            'SELECT id, name FROM subscriptions WHERE user_id = ? ORDER BY name'\n        ).bind(user.id).all();\n        return c.json({ success: true, data: results });\n    } catch (error: any) {\n        console.error('Error fetching subscriptions for select:', error);\n        return c.json({ success: false, message: 'Failed to fetch subscriptions.' }, 500);\n    }\n});\n\napp.post('/subscriptions', async (c) => {\n  const { name, url } = await c.req.json<{ name?: string; url?: string; }>();\n\n  if (!name || !url) {\n    return c.json({ success: false, message: 'Missing name or url' }, 400);\n  }\n\n  const id = crypto.randomUUID();\n  const now = new Date().toISOString();\n\n  const user = c.get('jwtPayload');\n  await c.env.DB.prepare(\n    `INSERT INTO subscriptions (id, user_id, name, url, created_at, updated_at)\n     VALUES (?, ?, ?, ?, ?, ?)`\n  ).bind(id, user.id, name, url, now, now).run();\n\n  return c.json({ success: true, data: { id } });\n});\n\napp.get('/subscriptions/:id', async (c) => {\n  const user = c.get('jwtPayload');\n  const { id } = c.req.param();\n  const subscription = await c.env.DB.prepare('SELECT * FROM subscriptions WHERE id = ? AND user_id = ?').bind(id, user.id).first();\n\n  if (!subscription) {\n    return c.json({ success: false, message: 'Subscription not found' }, 404);\n  }\n\n  return c.json({ success: true, data: subscription });\n});\n\napp.put('/subscriptions/:id', async (c) => {\n  const { id } = c.req.param();\n  const body = await c.req.json<{ name?: string; url?: string; include_keywords?: string; exclude_keywords?: string; }>();\n\n  const now = new Date().toISOString();\n\n  // Fetch the existing subscription to build the update query\n  const sub = await c.env.DB.prepare('SELECT * FROM subscriptions WHERE id = ? AND user_id = ?').bind(id, c.get('jwtPayload').id).first<any>();\n  if (!sub) {\n    return c.json({ success: false, message: 'Subscription not found' }, 404);\n  }\n\n  const newName = body.name ?? sub.name;\n  const newUrl = body.url ?? sub.url;\n  const newIncludeKeywords = body.include_keywords ?? sub.include_keywords;\n  const newExcludeKeywords = body.exclude_keywords ?? sub.exclude_keywords;\n\n  await c.env.DB.prepare(\n    `UPDATE subscriptions\n     SET name = ?, url = ?, include_keywords = ?, exclude_keywords = ?, updated_at = ?\n     WHERE id = ? AND user_id = ?`\n   ).bind(newName, newUrl, newIncludeKeywords, newExcludeKeywords, now, id, c.get('jwtPayload').id).run();\n\n  return c.json({ success: true });\n});\n\napp.delete('/subscriptions/:id', async (c) => {\n  const user = c.get('jwtPayload');\n  const { id } = c.req.param();\n  await c.env.DB.prepare('DELETE FROM subscriptions WHERE id = ? AND user_id = ?').bind(id, user.id).run();\n  return c.json({ success: true });\n});\n\n\napp.post('/subscriptions/batch-import', async (c) => {\n  const { subscriptions } = await c.req.json<{ subscriptions: any[] }>();\n\n  if (!subscriptions || !Array.isArray(subscriptions)) {\n    return c.json({ success: false, message: 'Missing subscriptions array' }, 400);\n  }\n\n  let successCount = 0;\n  let errorCount = 0;\n  const errors: { subscription: string; error: string; }[] = [];\n\n  const user = c.get('jwtPayload');\n  const stmts = subscriptions.map(sub => {\n    if (!sub.name || !sub.url) {\n      errorCount++;\n      errors.push({ subscription: sub.name || 'N/A', error: 'Missing name or url' });\n      return null;\n    }\n    successCount++;\n    const id = crypto.randomUUID();\n    const now = new Date().toISOString();\n    return c.env.DB.prepare(\n      `INSERT INTO subscriptions (id, user_id, name, url, created_at, updated_at)\n       VALUES (?, ?, ?, ?, ?, ?)`\n    ).bind(id, user.id, sub.name, sub.url, now, now);\n  }).filter((stmt): stmt is D1PreparedStatement => stmt !== null);\n\n  if (stmts.length > 0) {\n    await c.env.DB.batch(stmts);\n  }\n\n  return c.json({\n    success: true,\n    data: {\n      message: `Imported ${successCount} subscriptions, ${errorCount} failed.`,\n      created: successCount,\n      failed: errorCount,\n      errors,\n    }\n  });\n});\n\n// Helper function to extract region code from a node name\nconst getNodeRegion = (nodeName: string): string => {\n  // Regex to find country codes in various formats: [XX], XX-, XX_, emoji flags, etc.\n  const regionRegex = /\\[([A-Z]{2})\\]|([A-Z]{2})[-_ ]|\uD83C\uDDE8\uD83C\uDDF3|\uD83C\uDDED\uD83C\uDDF0|\uD83C\uDDF9\uD83C\uDDFC|\uD83C\uDDEF\uD83C\uDDF5|\uD83C\uDDF0\uD83C\uDDF7|\uD83C\uDDF8\uD83C\uDDEC|\uD83C\uDDFA\uD83C\uDDF8|\uD83C\uDDEC\uD83C\uDDE7/i;\n  const match = nodeName.match(regionRegex);\n\n  if (match) {\n    // Return the first captured group or the matched flag/code, converted to uppercase.\n    const region = match[1] || match[2] || match[0];\n    \n    // Handle emoji flags\n    const emojiMap: { [key: string]: string } = {\n        '\uD83C\uDDE8\uD83C\uDDF3': 'CN', '\uD83C\uDDED\uD83C\uDDF0': 'HK', '\uD83C\uDDF9\uD83C\uDDFC': 'TW', '\uD83C\uDDEF\uD83C\uDDF5': 'JP', '\uD83C\uDDF0\uD83C\uDDF7': 'KR',\n        '\uD83C\uDDF8\uD83C\uDDEC': 'SG', '\uD83C\uDDFA\uD83C\uDDF8': 'US', '\uD83C\uDDEC\uD83C\uDDE7': 'GB'\n    };\n\n    return emojiMap[region] || region.toUpperCase();\n  }\n\n  return 'XX'; // Return a default/unknown code if no match is found\n};\n\n\n// Helper function to parse different node link formats\n// A more robust parser for various node link formats.\nconst parseNodeLink = (link: string): Omit<Node, 'id' | 'user_id' | 'created_at' | 'updated_at' | 'group_id' | 'sort_order' | 'status' | 'latency' | 'last_checked' | 'error'> | null => {\n  try {\n    const originalLink = link;\n\n    if (link.startsWith('vmess://')) {\n      const b64 = link.substring(8);\n      const binaryString = atob(b64);\n      let decoded;\n      try {\n        // Use TextDecoder for robust UTF-8 decoding, which is the correct modern approach.\n        const uint8array = Uint8Array.from(binaryString, c => c.charCodeAt(0));\n        const decodedString = new TextDecoder('utf-8').decode(uint8array);\n        decoded = JSON.parse(decodedString);\n      } catch (e) {\n        // Fallback for cases where the string might not be valid UTF-8.\n        try {\n            decoded = JSON.parse(binaryString);\n        } catch (e2) {\n            console.error(\"Failed to parse VMess JSON with both TextDecoder and raw string methods:\", e, e2);\n            return null;\n        }\n      }\n      const params = { ...decoded };\n      delete params.ps; // name\n      delete params.add; // server\n      delete params.port; // port\n      delete params.id; // password\n      delete params.v; // version, often part of params\n      \n      return {\n        name: decoded.ps || `${decoded.add}:${decoded.port}`,\n        link: originalLink,\n        protocol: 'vmess',\n        protocol_params: params,\n        // Legacy fields for compatibility\n        server: decoded.add,\n        port: Number(decoded.port),\n        type: 'vmess',\n        password: decoded.id,\n        params: params,\n      };\n    }\n\n    const urlSchemeMatch = link.match(/^([a-zA-Z0-9]+):\\/\\//);\n    if (!urlSchemeMatch) return null;\n\n    const protocol = urlSchemeMatch[1];\n    const url = new URL(link);\n    let name = `${url.hostname}:${url.port}`; // Default name\n    if (url.hash) {\n       try {\n           // Standard-compliant decoding\n           name = decodeURIComponent(url.hash.substring(1));\n       } catch (e) {\n           // Fallback for non-standard or malformed encoding\n           console.warn(`Failed to decode node name from hash: \"${url.hash}\". Using raw value. Error: ${e}`);\n           name = url.hash.substring(1);\n       }\n    }\n    \n    const protocol_params: Record<string, any> = {};\n    for (const [key, value] of url.searchParams.entries()) {\n      protocol_params[key] = value;\n    }\n\n    let password = url.username;\n    if (protocol === 'ss') {\n        try {\n            const [method, pass] = atob(url.username).split(':');\n            protocol_params.method = method;\n            password = pass;\n        } catch (e) { /* ignore base64 decoding errors for ss */ }\n    }\n\n    return {\n      name: name,\n      link: originalLink,\n      protocol: protocol,\n      protocol_params: {\n        ...protocol_params,\n        // For URL-based links, some info is not in searchParams\n        server: url.hostname,\n        port: Number(url.port),\n        password: password,\n      },\n      // Legacy fields for compatibility\n      server: url.hostname,\n      port: Number(url.port),\n      type: protocol,\n      password: password,\n      params: protocol_params,\n    };\n\n  } catch (e) {\n    console.error(`Failed to parse node link: ${link}`, e);\n    return null;\n  }\n};\n\n\ntype Node = {\n  id: string;\n  group_id: string; // This can be subscription_id\n  user_id: string;\n  name: string;\n  link: string; // The original share link\n  protocol: string; // e.g., 'vmess', 'ss', 'hysteria2'\n  protocol_params: any; // JSON object for protocol-specific params\n\n  // Legacy fields, to be phased out but kept for compatibility for now\n  server?: string;\n  port?: number;\n  password?: string;\n  type?: string;\n  params?: any;\n\n  created_at: string;\n  updated_at: string;\n  sort_order?: number;\n  status?: 'pending' | 'testing' | 'healthy' | 'unhealthy';\n  latency?: number;\n  last_checked?: string;\n  error?: string;\n};\n\ntype NodeHealthResult = {\n  status: 'healthy' | 'unhealthy';\n  latency: number | null;\n  last_checked: string;\n  error: string | null;\n}\n\ntype SubscriptionRule = {\n  id: number;\n  subscription_id: string;\n  name: string;\n  type: 'filter_by_name_keyword' | 'filter_by_name_regex' | 'rename_by_regex'; // Add more types as needed\n  value: string; // JSON string\n  enabled: number;\n  created_at: string;\n  updated_at: string;\n};\n\ntype ProcessingUnit = {\n  id: number;\n  profile_id: string;\n  type: string;\n  config: any; // This will be parsed from JSON\n  order_index: number;\n  is_enabled: number;\n  user_id: string;\n};\n\n// This function processes an array of nodes against a single processing unit.\nfunction applyProcessingUnit<T extends { name: string; status?: Node['status']; latency?: number | null; }>(nodes: T[], unit: ProcessingUnit): T[] {\n  if (unit.is_enabled === 0) {\n    return nodes;\n  }\n\n  try {\n    switch (unit.type) {\n      case 'FILTER_BY_KEYWORD': {\n        // Updated to handle both string and array of strings for keywords\n        // And to support an explicit \"mode\" for include/exclude\n        const { keywords, mode = 'exclude' } = unit.config as { keywords: string | string[], mode: 'include' | 'exclude' };\n        if (!keywords || keywords.length === 0) return nodes;\n        \n        const keywordList = (Array.isArray(keywords) ? keywords : keywords.split(',').map(k => k.trim())).filter(k => k).map(k => k.toLowerCase());\n        if (keywordList.length === 0) return nodes;\n\n        return nodes.filter(node => {\n          const nameLower = node.name.toLowerCase();\n          const match = keywordList.some(keyword => nameLower.includes(keyword));\n          \n          // if mode is 'include', we keep the node if it matches.\n          // if mode is 'exclude', we keep the node if it does NOT match.\n          return mode === 'include' ? match : !match;\n        });\n      }\n      case 'FILTER_BY_REGEX': {\n        const { pattern, exclude } = unit.config as { pattern: string, exclude: boolean };\n        if (!pattern) return nodes;\n\n        try {\n          const regex = new RegExp(pattern);\n          return nodes.filter(node => {\n            const match = regex.test(node.name);\n            return exclude ? !match : match;\n          });\n        } catch (e) {\n          console.error(`Invalid regex pattern in unit ${unit.id} ('${pattern}'):`, e);\n          return nodes; // Return original nodes on regex error\n        }\n      }\n      case 'SORT_BY_NAME': {\n        const { direction } = unit.config as { direction: 'asc' | 'desc' };\n        const sortedNodes = [...nodes].sort((a, b) => a.name.localeCompare(b.name));\n        if (direction === 'desc') {\n          return sortedNodes.reverse();\n        }\n        return sortedNodes;\n      }\n      case 'SORT_BY_HEALTH': {\n        const { direction = 'healthy-first', sortByLatency = true } = unit.config as { direction: 'healthy-first' | 'unhealthy-first', sortByLatency: boolean };\n\n        const statusWeight = (status: Node['status']): number => {\n          switch (status) {\n            case 'healthy': return 0;\n            case 'testing': return 1;\n            case 'pending': return 1;\n            case 'unhealthy': return 2;\n            default: return 3; // null, undefined, etc. are considered worst\n          }\n        };\n\n        const sortedNodes = [...nodes].sort((a, b) => {\n          const weightA = statusWeight(a.status);\n          const weightB = statusWeight(b.status);\n\n          if (weightA !== weightB) {\n            return weightA - weightB;\n          }\n\n          // If status is the same and we need to sort by latency for healthy nodes\n          if (sortByLatency && a.status === 'healthy' && b.status === 'healthy') {\n            const latencyA = a.latency ?? Infinity;\n            const latencyB = b.latency ?? Infinity;\n            if (latencyA !== latencyB) {\n              return latencyA - latencyB;\n            }\n          }\n\n          // Fallback to name sorting to maintain a stable order\n          return a.name.localeCompare(b.name);\n        });\n\n        if (direction === 'unhealthy-first') {\n          return sortedNodes.reverse();\n        }\n        return sortedNodes;\n      }\n      case 'RENAME_BY_REGEX': {\n        const { pattern, replace, regex, format } = unit.config as { pattern?: string, replace?: string, regex?: string, format?: string };\n        // Support both {pattern, replace} and {regex, format} for compatibility\n        const finalPattern = pattern || regex;\n        const finalReplace = replace || format;\n\n        if (!finalPattern) return nodes;\n        if (!pattern) return nodes;\n\n        try {\n          const regex = new RegExp(finalPattern, 'g'); // Use 'g' flag to replace all occurrences\n          return nodes.map(node => ({\n            ...node,\n            name: node.name.replace(regex, finalReplace ?? ''),\n          }));\n        } catch (e) {\n          console.error(`Invalid regex pattern in unit ${unit.id} ('${pattern}'):`, e);\n          return nodes; // Return original nodes on regex error\n        }\n      }\n      case 'FILTER_BY_REGION': {\n        const { codes, exclude } = unit.config as { codes: string, exclude: boolean };\n        if (!codes) return nodes;\n\n        const codeList = codes.split(',').map(c => c.trim().toUpperCase()).filter(c => c);\n        if (codeList.length === 0) return nodes;\n\n        return nodes.filter(node => {\n          const region = getNodeRegion(node.name);\n          const match = codeList.includes(region);\n          return exclude ? !match : match;\n        });\n      }\n      // Future units will be added here\n      default:\n        console.warn(`Unknown or unsupported processing unit type: ${unit.type}`);\n        return nodes;\n    }\n  } catch (e) {\n    console.error(`Error applying processing unit ID ${unit.id} (${unit.type})`, e);\n    return nodes; // Return original nodes if a unit fails\n  }\n}\n\n// Helper function to check a single node's health\n// NOTE: This uses the `connect()` API, which is only available in the Cloudflare Workers runtime.\n// It will not work in a standard Node.js environment.\nasync function checkNodeHealth(node: Node): Promise<NodeHealthResult> {\n  // Check if the `connect` function is available (it's only in the CF Workers runtime)\n  // @ts-ignore\n  if (typeof connect !== 'function') {\n    // We are in a local/dev environment\n    console.log(`Simulating health check for node ${node.id} in local environment.`);\n    // Return a simulated \"healthy\" result after a short delay\n    await new Promise(resolve => setTimeout(resolve, Math.random() * 1000 + 200)); // delay 200-1200ms\n    return {\n      status: 'healthy',\n      latency: Math.floor(Math.random() * 300) + 50, // Simulate latency 50-350ms\n      last_checked: new Date().toISOString(),\n      error: '\u672C\u5730\u5F00\u53D1\u6A21\u5F0F\uFF0C\u8FD4\u56DE\u6A21\u62DF\u5EF6\u8FDF',\n    };\n  }\n\n  // Production environment logic\n  const address = `${node.server}:${node.port}`;\n  const startTime = Date.now();\n\n  try {\n    // @ts-ignore - connect() is a global in the Workers runtime\n    const socket = await connect(address, { timeout: 5000 });\n    const latency = Date.now() - startTime;\n    await socket.close();\n\n    return {\n      status: 'healthy',\n      latency: latency,\n      last_checked: new Date().toISOString(),\n      error: null,\n    };\n  } catch (e: any) {\n    return {\n      status: 'unhealthy',\n      latency: null,\n      last_checked: new Date().toISOString(),\n      error: e.message,\n    };\n  }\n}\n\n\n// Helper function to run the subscription update logic\nasync function runSubscriptionUpdate(\n  db: D1Database,\n  subscriptionId: string,\n  userId: string,\n  waitUntil: (promise: Promise<any>) => void\n): Promise<{ success: boolean; message: string; nodesCount: number; }> {\n  const now = new Date().toISOString();\n  // 1. Fetch subscription URL and chain_id from DB\n  const subscription = await db.prepare('SELECT url, name FROM subscriptions WHERE id = ? AND user_id = ?').bind(subscriptionId, userId).first<{ url: string, name: string }>();\n  if (!subscription) {\n    return { success: false, message: `Subscription with ID ${subscriptionId} not found.`, nodesCount: 0 };\n  }\n\n  // 2. Fetch content from the subscription URL\n  let content;\n  try {\n    const response = await fetch(subscription.url, { headers: { 'User-Agent': 'Shadowrocket' } });\n    if (!response.ok) {\n      throw new Error(`Request failed with status ${response.status}`);\n    }\n    const rawContent = await response.text();\n    console.log('Raw content received:', rawContent.substring(0, 100)); // Log first 100 chars\n    // Check if content is base64 encoded\n    try {\n      content = atob(rawContent);\n      console.log('Content successfully decoded from Base64.');\n    } catch (e) {\n      // If decoding fails, assume it's plain text\n      content = rawContent;\n      console.log('Content is not Base64, treating as plain text.');\n    }\n  } catch (error: any) {\n    const errorMessage = `Failed to fetch or decode content for \"${subscription.name}\": ${error.message}`;\n    await db.prepare('UPDATE subscriptions SET error = ?, last_updated = ? WHERE id = ?')\n      .bind(errorMessage, now, subscriptionId)\n      .run();\n    // Send Telegram notification on failure\n    waitUntil(sendTelegramMessage(db, userId, `Subscription update failed for \"${subscription.name}\":\\n${errorMessage}`));\n    return { success: false, message: errorMessage, nodesCount: 0 };\n  }\n\n  // 3. Parse content into nodes\n  const links = content.split(/[\\r\\n]+/).filter(line => line.trim() !== '');\n  console.log(`Found ${links.length} links in content.`);\n  let parsedNodes = links.map(link => parseNodeLink(link)).filter((node): node is NonNullable<ReturnType<typeof parseNodeLink>> => node !== null);\n  console.log(`Successfully parsed ${parsedNodes.length} raw nodes.`);\n  \n  // 3.5. Apply subscription rules\n  const { results: rules } = await db.prepare(\n    'SELECT * FROM subscription_rules WHERE subscription_id = ? AND enabled = 1'\n  ).bind(subscriptionId).all<SubscriptionRule>();\n\n  if (rules && rules.length > 0) {\n    console.log(`Applying ${rules.length} rules to ${parsedNodes.length} nodes.`);\n    for (const rule of rules) {\n      try {\n        // Adapt SubscriptionRule to the format expected by applyProcessingUnit\n        const unit: ProcessingUnit = {\n          id: rule.id,\n          profile_id: subscriptionId, // Not strictly needed but good for context\n          type: '', // This will be set in the switch\n          config: JSON.parse(rule.value),\n          order_index: 0, // Order is not managed here, applied sequentially\n          is_enabled: 1,\n          user_id: userId,\n        };\n\n        // Map from subscription_rules `type` to processing_units `type`\n        switch (rule.type) {\n          case 'filter_by_name_keyword':\n            unit.type = 'FILTER_BY_KEYWORD';\n            break;\n          case 'filter_by_name_regex':\n            unit.type = 'FILTER_BY_REGEX';\n            // The config from the frontend is { \"regex\": \"...\" }, but the processor expects { \"pattern\": \"...\" }\n            // Let's make it compatible.\n            if (unit.config.regex) {\n              unit.config.pattern = unit.config.regex;\n            }\n            break;\n          case 'rename_by_regex':\n            unit.type = 'RENAME_BY_REGEX';\n            break;\n          default:\n            console.warn(`Unknown rule type \"${rule.type}\" for rule ID ${rule.id}. Skipping.`);\n            continue; // Skip to the next rule\n        }\n        \n        parsedNodes = applyProcessingUnit(parsedNodes, unit);\n\n      } catch (e: any) {\n        console.error(`Error applying rule ID ${rule.id} (\"${rule.name}\"): ${e.message}`);\n        // Continue with the next rule even if one fails\n      }\n    }\n    console.log(`Finished applying rules. ${parsedNodes.length} nodes remaining.`);\n  }\n\n  const finalNodes = parsedNodes;\n\n  // 4. Batch insert nodes into the database\n  const stmts: D1PreparedStatement[] = [];\n\n  // 4.1. Delete old nodes associated with this subscription FOR THIS USER\n  stmts.push(db.prepare('DELETE FROM nodes WHERE group_id = ? AND user_id = ?').bind(subscriptionId, userId));\n\n  // 4.2. Prepare new nodes for insertion\n  const insertStmts = finalNodes.map(node => {\n    const nodeId = crypto.randomUUID();\n    return db.prepare(\n      `INSERT INTO nodes (id, user_id, group_id, name, link, protocol, protocol_params, server, port, type, password, params, created_at, updated_at)\n       VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`\n    ).bind(\n        nodeId, userId, subscriptionId, node.name, node.link, node.protocol,\n        JSON.stringify(node.protocol_params), node.server, node.port, node.type,\n        node.password, JSON.stringify(node.params), // Keep legacy params for now\n        now, now\n      );\n  });\n\n  stmts.push(...insertStmts);\n  \n  // 4.3. Add statement to update the subscription's status\n  stmts.push(\n    db.prepare('UPDATE subscriptions SET node_count = ?, last_updated = ?, error = NULL WHERE id = ?')\n      .bind(insertStmts.length, now, subscriptionId)\n  );\n\n  // 5. Execute batch operation\n  try {\n    await db.batch(stmts);\n    const message = finalNodes.length === 0\n      ? `No valid nodes found in subscription \"${subscription.name}\" after processing.`\n      : `Successfully updated ${insertStmts.length} nodes for subscription \"${subscription.name}\".`;\n    \n    // Send Telegram notification on success\n    waitUntil(sendTelegramMessage(db, userId, message));\n    \n    return { success: true, message, nodesCount: insertStmts.length };\n  } catch (error: any) {\n    const errorMessage = `Database error for subscription \"${subscription.name}\": ${error.message}`;\n    console.error('Database batch operation failed:', error); // Detailed log\n    await db.prepare('UPDATE subscriptions SET error = ?, last_updated = ? WHERE id = ?')\n      .bind(errorMessage, now, subscriptionId)\n      .run();\n      \n    // Send Telegram notification on database error\n    waitUntil(sendTelegramMessage(db, userId, `Subscription update failed for \"${subscription.name}\":\\n${errorMessage}`));\n      \n    return { success: false, message: errorMessage, nodesCount: 0 };\n  }\n}\n\n\napp.post('/subscriptions/:id/update', async (c) => {\n  const user = c.get('jwtPayload');\n  const { id: subscriptionId } = c.req.param();\n\n  // First, verify this subscription belongs to the user\n  const sub = await c.env.DB.prepare('SELECT id FROM subscriptions WHERE id = ? AND user_id = ?').bind(subscriptionId, user.id).first();\n  if (!sub) {\n    return c.json({ success: false, message: 'Subscription not found or access denied' }, 404);\n  }\n\n  // Pass the context to the update function\n  const result = await runSubscriptionUpdate(c.env.DB, subscriptionId, user.id, c.executionCtx.waitUntil);\n\n  if (!result.success) {\n    // Use 500 for server-side failures, 404 if not found, etc.\n    const status = result.message.includes('not found') ? 404 : 500;\n    return c.json({ success: false, message: result.message }, status);\n  }\n\n  return c.json({ success: true, message: result.message, data: { updatedNodes: result.nodesCount } });\n});\n\napp.post('/subscriptions/update-all', async (c) => {\n  const user = c.get('jwtPayload');\n  const { results: subscriptions } = await c.env.DB.prepare('SELECT id, user_id FROM subscriptions WHERE user_id = ?').bind(user.id).all<{ id: string, user_id: string }>();\n\n  if (!subscriptions || subscriptions.length === 0) {\n    return c.json({ success: true, message: 'No subscriptions to update.' });\n  }\n\n  c.executionCtx.waitUntil(\n    (async () => {\n      console.log(`User ${user.id} triggered update for ${subscriptions.length} subscriptions.`);\n      const updatePromises = subscriptions.map(sub => runSubscriptionUpdate(c.env.DB, sub.id, sub.user_id, c.executionCtx.waitUntil));\n      await Promise.allSettled(updatePromises);\n      console.log(`Finished updating subscriptions for user ${user.id}.`);\n    })()\n  );\n\n  return c.json({ success: true, message: `Update for ${subscriptions.length} subscriptions initiated in the background.` }, 202);\n});\n\napp.post('/subscriptions/preview', async (c) => {\n  const { url: subscriptionUrl } = await c.req.json<{ url?: string }>();\n\n  if (!subscriptionUrl) {\n    return c.json({ success: false, message: 'Subscription URL is required' }, 400);\n  }\n\n  // 1. Fetch content from the subscription URL\n  let content;\n  try {\n    const response = await fetch(subscriptionUrl, { headers: { 'User-Agent': 'Shadowrocket' } });\n    if (!response.ok) {\n      throw new Error(`Request failed with status ${response.status}`);\n    }\n    const rawContent = await response.text();\n    // Check if content is base64 encoded\n    try {\n      content = atob(rawContent);\n    } catch (e) {\n      // If decoding fails, assume it's plain text\n      content = rawContent;\n    }\n  } catch (error: any) {\n    return c.json({ success: false, message: `Failed to fetch or decode content: ${error.message}` }, 500);\n  }\n\n  // 2. Parse content into nodes\n  const links = content.split(/[\\r\\n]+/).filter(line => line.trim() !== '');\n  const parsedNodes = links.map(link => parseNodeLink(link)).filter((node): node is NonNullable<ReturnType<typeof parseNodeLink>> => node !== null);\n\n  // 3. Analyze the nodes\n  const total = parsedNodes.length;\n  const protocolStats: Record<string, number> = {};\n  const regionStats: Record<string, number> = {};\n  const regionRegex = /\\[([A-Z]{2})\\]|([A-Z]{2})[-_ ]|\uD83C\uDDE8\uD83C\uDDF3|\uD83C\uDDED\uD83C\uDDF0|\uD83C\uDDEF\uD83C\uDDF5|\uD83C\uDDF0\uD83C\uDDF7|\uD83C\uDDF8\uD83C\uDDEC|\uD83C\uDDFA\uD83C\uDDF8|\uD83C\uDDEC\uD83C\uDDE7/g;\n\n  parsedNodes.forEach(node => {\n    // Protocol stats\n    const protocol = node.protocol || node.type || 'unknown';\n    protocolStats[protocol] = (protocolStats[protocol] || 0) + 1;\n\n    // Region stats\n    const matches = [...node.name.matchAll(regionRegex)];\n    let regionFound = false;\n    if (matches.length > 0) {\n        for (const match of matches) {\n            const regionCode = match[1] || match[2] || match[0]; // Get the matched group\n            if (regionCode) {\n                const upperRegionCode = regionCode.toUpperCase();\n                regionStats[upperRegionCode] = (regionStats[upperRegionCode] || 0) + 1;\n                regionFound = true;\n                break; // Count first match only\n            }\n        }\n    }\n    if (!regionFound) {\n        regionStats['Unknown'] = (regionStats['Unknown'] || 0) + 1;\n    }\n  });\n\n  c.header('Content-Type', 'application/json; charset=utf-8');\n  return c.json({\n    success: true,\n    data: {\n      nodes: parsedNodes,\n      analysis: {\n        total,\n        protocols: protocolStats,\n        regions: regionStats,\n      }\n    }\n  });\n});\n\n// New endpoint to import nodes from a subscription, applying its rules\napp.post('/nodes/import-from-subscription', async (c) => {\n  const user = c.get('jwtPayload');\n  const { subscriptionId } = await c.req.json<{ subscriptionId: string }>();\n\n  if (!subscriptionId) {\n    return c.json({ success: false, message: 'Subscription ID is required' }, 400);\n  }\n\n  // 1. Fetch subscription details (URL and filters)\n  const subscription = await c.env.DB.prepare(\n    'SELECT * FROM subscriptions WHERE id = ? AND user_id = ?'\n  ).bind(subscriptionId, user.id).first<any>();\n\n  if (!subscription) {\n    return c.json({ success: false, message: 'Subscription not found or access denied' }, 404);\n  }\n\n  // 2. Fetch content from the subscription URL\n  let content;\n  try {\n    const response = await fetch(subscription.url, { headers: { 'User-Agent': 'Shadowrocket' } });\n    if (!response.ok) throw new Error(`Request failed with status ${response.status}`);\n    const rawContent = await response.text();\n    try {\n      content = atob(rawContent);\n    } catch (e) {\n      content = rawContent;\n    }\n  } catch (error: any) {\n    return c.json({ success: false, message: `Failed to fetch subscription content: ${error.message}` }, 500);\n  }\n\n  // 3. Parse content into nodes\n  const links = content.split(/[\\r\\n]+/).filter(line => line.trim() !== '');\n  let parsedNodes = links.map(link => parseNodeLink(link)).filter((node): node is NonNullable<ReturnType<typeof parseNodeLink>> => node !== null);\n\n  // 4. Apply subscription's own include/exclude keyword filters\n  if (subscription.include_keywords) {\n      const keywords = subscription.include_keywords.split(',').map((k: string) => k.trim().toLowerCase()).filter((k: string) => k);\n      if (keywords.length > 0) {\n          parsedNodes = parsedNodes.filter(node => keywords.some((keyword: string) => node.name.toLowerCase().includes(keyword)));\n      }\n  }\n  if (subscription.exclude_keywords) {\n      const keywords = subscription.exclude_keywords.split(',').map((k: string) => k.trim().toLowerCase()).filter((k: string) => k);\n      if (keywords.length > 0) {\n          parsedNodes = parsedNodes.filter(node => !keywords.some((keyword: string) => node.name.toLowerCase().includes(keyword)));\n      }\n  }\n\n  if (parsedNodes.length === 0) {\n    return c.json({ success: true, message: 'No nodes to import after filtering.', data: { importedCount: 0 } });\n  }\n\n  // 5. Batch insert nodes into the database as MANUAL nodes (no group_id)\n  const now = new Date().toISOString();\n  const stmts = parsedNodes.map(node => {\n    const nodeId = crypto.randomUUID();\n    return c.env.DB.prepare(\n      `INSERT INTO nodes (id, user_id, group_id, name, link, protocol, protocol_params, server, port, type, password, params, created_at, updated_at)\n       VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`\n    ).bind(\n        nodeId, user.id, null, // group_id is NULL for manual nodes\n        node.name, node.link, node.protocol,\n        JSON.stringify(node.protocol_params), node.server, node.port, node.type,\n        node.password, JSON.stringify(node.params),\n        now, now\n      );\n  });\n\n  try {\n    await c.env.DB.batch(stmts);\n    return c.json({ success: true, message: `Successfully imported ${stmts.length} nodes.`, data: { importedCount: stmts.length } });\n  } catch (error: any) {\n    console.error('Database error during node import:', error);\n    return c.json({ success: false, message: `Database error during import: ${error.message}` }, 500);\n  }\n});\n\n\n// Profile routes\napp.get('/profiles', async (c) => {\n  const user = c.get('jwtPayload');\n  const { results } = await c.env.DB.prepare('SELECT * FROM profiles WHERE user_id = ?').bind(user.id).all();\n  return c.json({ success: true, data: results });\n});\n\napp.post('/profiles', async (c) => {\n  const body = await c.req.json<{\n    name?: string;\n    alias?: string;\n    description?: string;\n    subscription_ids?: string[];\n    nodeIds?: string[];\n    generation_mode?: 'local' | 'online';\n    template_id?: number;\n    subconverter_backend_id?: number;\n    subconverter_config_id?: number;\n    template_variables?: string;\n  }>();\n\n  if (!body.name) {\n    return c.json({ success: false, message: 'Missing name' }, 400);\n  }\n\n  if (body.alias) {\n    const existingProfile = await c.env.DB.prepare('SELECT id FROM profiles WHERE alias = ? AND user_id = ?').bind(body.alias, c.get('jwtPayload').id).first();\n    if (existingProfile) {\n      return c.json({ success: false, message: 'This alias is already in use.' }, 409);\n    }\n  }\n\n  const id = crypto.randomUUID();\n  const now = new Date().toISOString();\n  const db = c.env.DB;\n\n  try {\n    await db.batch([\n      db.prepare(\n        `INSERT INTO profiles (id, user_id, name, alias, description, generation_mode, template_id, subconverter_backend_id, subconverter_config_id, template_variables, created_at, updated_at)\n         VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`\n      ).bind(id, c.get('jwtPayload').id, body.name, body.alias, body.description, body.generation_mode, body.template_id, body.subconverter_backend_id, body.subconverter_config_id, body.template_variables, now, now),\n    ]);\n\n    if (body.subscription_ids && body.subscription_ids.length > 0) {\n      const subStmts = body.subscription_ids.map(subId =>\n        db.prepare('INSERT INTO profile_subscriptions (profile_id, subscription_id) VALUES (?, ?)').bind(id, subId)\n      );\n      await db.batch(subStmts);\n    }\n\n    return c.json({ success: true, data: { id } });\n  } catch (e: any) {\n    console.error(\"Failed to create profile:\", e);\n    return c.json({ success: false, message: `Failed to create profile: ${e.message}` }, 500);\n  }\n});\n\napp.get('/profiles/:id', async (c) => {\n  const user = c.get('jwtPayload');\n  const { id } = c.req.param();\n  const db = c.env.DB;\n\n  const profile = await db.prepare('SELECT * FROM profiles WHERE id = ? AND user_id = ?').bind(id, user.id).first();\n\n  if (!profile) {\n    return c.json({ success: false, message: 'Profile not found' }, 404);\n  }\n\n  const { results: subIds } = await db.prepare('SELECT subscription_id FROM profile_subscriptions WHERE profile_id = ?').bind(id).all<{ subscription_id: string }>();\n\n  return c.json({\n    success: true,\n    data: {\n      ...profile,\n      subscription_ids: subIds.map(s => s.subscription_id) || [],\n    }\n  });\n});\n\napp.put('/profiles/:id', async (c) => {\n  const { id } = c.req.param();\n  const body = await c.req.json<{\n    name?: string;\n    alias?: string;\n    description?: string;\n    subscription_ids?: string[];\n    nodeIds?: string[];\n    generation_mode?: 'local' | 'online';\n    template_id?: number;\n    subconverter_backend_id?: number;\n    subconverter_config_id?: number;\n    template_variables?: string;\n  }>();\n\n  const now = new Date().toISOString();\n  const user = c.get('jwtPayload');\n  const db = c.env.DB;\n\n  if (body.alias) {\n    const existingProfile = await db.prepare('SELECT id FROM profiles WHERE alias = ? AND user_id = ? AND id != ?').bind(body.alias, user.id, id).first();\n    if (existingProfile) {\n      return c.json({ success: false, message: 'This alias is already in use by another profile.' }, 409);\n    }\n  }\n\n  try {\n    const stmts = [];\n    stmts.push(\n      db.prepare(\n        `UPDATE profiles\n         SET name = ?, alias = ?, description = ?, generation_mode = ?, template_id = ?, subconverter_backend_id = ?, subconverter_config_id = ?, template_variables = ?, updated_at = ?\n         WHERE id = ? AND user_id = ?`\n      ).bind(body.name, body.alias, body.description, body.generation_mode, body.template_id, body.subconverter_backend_id, body.subconverter_config_id, body.template_variables, now, id, user.id)\n    );\n\n    // \"Delete then insert\" for simplicity to handle subscription associations\n    stmts.push(db.prepare('DELETE FROM profile_subscriptions WHERE profile_id = ?').bind(id));\n    if (body.subscription_ids && body.subscription_ids.length > 0) {\n      stmts.push(\n        ...body.subscription_ids.map(subId =>\n          db.prepare('INSERT INTO profile_subscriptions (profile_id, subscription_id) VALUES (?, ?)').bind(id, subId)\n        )\n      );\n    }\n\n    await db.batch(stmts);\n\n    return c.json({ success: true });\n  } catch (e: any) {\n    console.error(`Failed to update profile ${id}:`, e);\n    return c.json({ success: false, message: `Failed to update profile: ${e.message}` }, 500);\n  }\n});\n\napp.delete('/profiles/:id', async (c) => {\n  const user = c.get('jwtPayload');\n  const { id } = c.req.param();\n\n  // Verify profile ownership before deleting\n  const profile = await c.env.DB.prepare('SELECT id FROM profiles WHERE id = ? AND user_id = ?').bind(id, user.id).first();\n  if (!profile) {\n    return c.json({ success: false, message: 'Profile not found or access denied' }, 404);\n  }\n\n  const stmts = [\n    c.env.DB.prepare('DELETE FROM profile_subscriptions WHERE profile_id = ?').bind(id),\n    c.env.DB.prepare('DELETE FROM processing_units WHERE profile_id = ?').bind(id),\n    c.env.DB.prepare('DELETE FROM profiles WHERE id = ? AND user_id = ?').bind(id, user.id),\n  ];\n\n  await c.env.DB.batch(stmts);\n\n  return c.json({ success: true });\n});\n\n// Helper function to format a node for Clash YAML format\n// =================================================================\n// Output Formatter Engine\n// =================================================================\n\n// A more robust manual stringifier for creating YAML/JSON fragments\nconst stringifyToYaml = (obj: any, indent = 4): string => {\n  let result = '';\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key) && obj[key] !== undefined && obj[key] !== null) {\n      const value = obj[key];\n      result += `${' '.repeat(indent)}${key}: `;\n      if (typeof value === 'object' && !Array.isArray(value)) {\n        result += `\\n${stringifyToYaml(value, indent + 2)}`;\n      } else if (typeof value === 'string' && (value.includes(':') || value.includes('@') || value.includes(' '))) {\n        result += `'${value}'\\n`;\n      } else {\n        result += `${JSON.stringify(value)}\\n`;\n      }\n    }\n  }\n  return result;\n};\n\ntype Formatter = (node: Node) => string | null;\n\n// --- Individual Formatters for Clash ---\n\nconst formatVmessForClash: Formatter = (node) => {\n  const params = (typeof node.protocol_params === 'string' ? JSON.parse(node.protocol_params) : node.protocol_params) || node.params || {};\n  const proxy: any = {\n    name: node.name,\n    type: 'vmess',\n    server: node.server,\n    port: node.port,\n    uuid: node.password,\n    alterId: params.aid ?? 0,\n    cipher: params.scy || 'auto',\n  };\n  if (params.net) proxy.network = params.net;\n  if (params.tls) proxy.tls = params.tls === 'tls' || params.tls === true;\n  if (params.host) proxy['ws-opts'] = { ...(proxy['ws-opts'] || {}), headers: { Host: params.host } };\n  if (params.path) proxy['ws-opts'] = { ...(proxy['ws-opts'] || {}), path: params.path };\n  \n  const { name, ...rest } = proxy;\n  return `  - name: ${JSON.stringify(name)}\\n${stringifyToYaml(rest, 6)}`;\n};\n\nconst formatVlessForClash: Formatter = (node) => {\n  const params = (typeof node.protocol_params === 'string' ? JSON.parse(node.protocol_params) : node.protocol_params) || node.params || {};\n  const proxy: any = {\n    name: node.name,\n    type: 'vless',\n    server: node.server,\n    port: node.port,\n    uuid: node.password,\n  };\n  if (params.network) proxy.network = params.network;\n  if (params.security === 'tls' || params.tls === 'tls') proxy.tls = true;\n  if (params.sni) proxy.servername = params.sni;\n  if (params.flow) proxy.flow = params.flow;\n  if (params.host) proxy['ws-opts'] = { ...(proxy['ws-opts'] || {}), headers: { Host: params.host } };\n  if (params.path) proxy['ws-opts'] = { ...(proxy['ws-opts'] || {}), path: params.path };\n\n  const { name, ...rest } = proxy;\n  return `  - name: ${JSON.stringify(name)}\\n${stringifyToYaml(rest, 6)}`;\n};\n\nconst formatTrojanForClash: Formatter = (node) => {\n  const params = (typeof node.protocol_params === 'string' ? JSON.parse(node.protocol_params) : node.protocol_params) || node.params || {};\n  const proxy: any = {\n    name: node.name,\n    type: 'trojan',\n    server: node.server,\n    port: node.port,\n    password: node.password,\n  };\n  if (params.sni) proxy.sni = params.sni;\n  if (params.allowInsecure) proxy['skip-cert-verify'] = params.allowInsecure === '1' || params.allowInsecure === true;\n\n  const { name, ...rest } = proxy;\n  return `  - name: ${JSON.stringify(name)}\\n${stringifyToYaml(rest, 6)}`;\n};\n\nconst formatSsForClash: Formatter = (node) => {\n  const params = (typeof node.protocol_params === 'string' ? JSON.parse(node.protocol_params) : node.protocol_params) || node.params || {};\n  const proxy: any = {\n    name: node.name,\n    type: 'ss',\n    server: node.server,\n    port: node.port,\n    password: node.password,\n    cipher: params.method,\n  };\n\n  const { name, ...rest } = proxy;\n  return `  - name: ${JSON.stringify(name)}\\n${stringifyToYaml(rest, 6)}`;\n};\n\nconst formatHysteria2ForClash: Formatter = (node) => {\n  const params = (typeof node.protocol_params === 'string' ? JSON.parse(node.protocol_params) : node.protocol_params) || node.params || {};\n  const proxy: any = {\n    name: node.name,\n    type: 'hysteria2',\n    server: node.server,\n    port: node.port,\n    // In our parser, 'password' legacy field holds the auth string for hy2\n    auth: node.password,\n    sni: params.sni || node.server,\n  };\n\n  // Add optional parameters if they exist\n  if (params.obfs) proxy.obfs = params.obfs;\n  if (params['obfs-password']) proxy['obfs-password'] = params['obfs-password'];\n  if (params.insecure) proxy['skip-cert-verify'] = params.insecure === '1' || params.insecure === true;\n  if (params.up) proxy.up = params.up;\n  if (params.down) proxy.down = params.down;\n\n\n  const { name, ...rest } = proxy;\n  return `  - name: ${JSON.stringify(name)}\\n${stringifyToYaml(rest, 6)}`;\n};\n\nconst formatTuicForClash: Formatter = (node) => {\n  const params = (typeof node.protocol_params === 'string' ? JSON.parse(node.protocol_params) : node.protocol_params) || node.params || {};\n  const proxy: any = {\n    name: node.name,\n    type: 'tuic',\n    server: node.server,\n    port: node.port,\n    uuid: params.uuid,\n    password: node.password,\n    sni: params.sni || node.server,\n  };\n\n  // Optional parameters\n  if (params.alpn) proxy.alpn = params.alpn.split(',');\n  if (params['disable-sni']) proxy['disable-sni'] = params['disable-sni'] === 'true' || params['disable-sni'] === true;\n  if (params.udp_relay_mode) proxy['udp-relay-mode'] = params.udp_relay_mode;\n  if (params.congestion_controller) proxy['congestion-controller'] = params.congestion_controller;\n\n  const { name, ...rest } = proxy;\n  return `  - name: ${JSON.stringify(name)}\\n${stringifyToYaml(rest, 6)}`;\n};\n\n\n// --- Formatter Registry ---\n\nconst formatterRegistry: Record<string, Formatter> = {\n  'vmess-CLASH': formatVmessForClash,\n  'vless-CLASH': formatVlessForClash,\n  'trojan-CLASH': formatTrojanForClash,\n  'ss-CLASH': formatSsForClash,\n  'hysteria2-CLASH': formatHysteria2ForClash,\n  'tuic-CLASH': formatTuicForClash,\n};\n\n// --- The Main Formatter Dispatcher ---\n\nconst formatNode = (node: Node, client: string): string | null => {\n  const protocol = node.protocol || node.type;\n  if (!protocol) return `  # Skipping node \"${node.name}\" - protocol type unknown.`;\n\n  const formatterKey = `${protocol}-${client.toUpperCase()}`;\n  const formatter = formatterRegistry[formatterKey];\n\n  if (formatter) {\n    return formatter(node);\n  }\n\n  // Fallback for unsupported combinations\n  return `  # Skipping node \"${node.name}\" - protocol \"${protocol}\" is not supported by client \"${client}\".`;\n};\n\n\n// Helper function to build a node link from a node object\nconst buildNodeLink = (node: Node): string | null => {\n  // If the original link exists, prefer returning it directly.\n  if (node.link) {\n    return node.link;\n  }\n\n  // Fallback to building from params if link is missing (for older data)\n  try {\n    const protocol = node.protocol || node.type;\n    const params = (typeof node.protocol_params === 'string' ? JSON.parse(node.protocol_params) : node.protocol_params) || node.params || {};\n\n    switch (protocol) {\n      case 'vmess':\n        const vmessConfig = {\n          v: params.v || '2',\n          ps: node.name,\n          add: node.server,\n          port: node.port,\n          id: node.password,\n          aid: params.alterId,\n          net: params.network,\n          type: 'none',\n          host: params.host,\n          path: params.path,\n          tls: params.tls,\n        };\n        return `vmess://${btoa(JSON.stringify(vmessConfig))}`;\n      case 'ss':\n        const ssPart = btoa(`${params.method}:${node.password}`);\n        return `ss://${ssPart}@${node.server}:${node.port}#${encodeURIComponent(node.name)}`;\n      case 'trojan':\n        const trojanUrl = new URL(`trojan://${node.password}@${node.server}:${node.port}`);\n        trojanUrl.hash = encodeURIComponent(node.name);\n        if (params.sni) trojanUrl.searchParams.set('sni', params.sni);\n        if (params.allowInsecure) trojanUrl.searchParams.set('allowInsecure', String(params.allowInsecure));\n        return trojanUrl.toString();\n      default:\n        // For new or unknown protocols, we cannot reliably rebuild the link.\n        return node.link || null;\n    }\n  } catch (e) {\n    console.error(`Failed to build node link for node: ${node.id}`, e);\n    return null;\n  }\n};\n\n// --- Adaptive Subscription Helpers ---\n\n// In-memory cache for UA mappings to avoid frequent DB queries.\n// In a multi-worker environment, consider using KV for a shared cache.\nlet cachedUaMappings: { ua_keyword: string; client_type: string; }[] | null = null;\n\n// Helper function to get client type from User-Agent, now reading from DB with cache.\nconst getClientTypeFromUA = async (db: D1Database, userAgent: string | null): Promise<string | null> => {\n  if (!userAgent) return null;\n\n  // 1. Load mappings from cache or DB\n  if (!cachedUaMappings) {\n    console.log('UA Mappings cache miss. Querying database...');\n    const { results } = await db.prepare(\n      \"SELECT ua_keyword, client_type FROM ua_mappings WHERE is_enabled = 1\"\n    ).all<{ ua_keyword: string; client_type: string; }>();\n    cachedUaMappings = results || [];\n  }\n\n  // 2. Match against the loaded mappings\n  const ua = userAgent.toLowerCase();\n  for (const mapping of cachedUaMappings) {\n    if (ua.includes(mapping.ua_keyword)) {\n      return mapping.client_type;\n    }\n  }\n\n  return null;\n};\n\n\n// Helper function to generate configuration from a profile\nasync function generateConfig(c: Context) {\n  const db = c.env.DB;\n  const runId = crypto.randomUUID();\n  const logStmts: D1PreparedStatement[] = [];\n\n  // This function can be called from two places:\n  // 1. The secure route, where user and profileId are already in the context.\n  // 2. The public alias route, where they need to be fetched first.\n  let user = c.get('jwtPayload');\n  let profileId = c.req.param('id');\n  \n  // Adaptive Subscription Logic: Part 1 - Get client type from UA\n  const userAgent = c.req.header('User-Agent') || null;\n  const autoDetectedClientType = await getClientTypeFromUA(db, userAgent);\n\n  if (!profileId) {\n    const { alias } = c.req.param();\n    const profileForAlias = await db.prepare('SELECT id, user_id FROM profiles WHERE alias = ?').bind(alias).first() as { id: string, user_id: string } | undefined;\n    if (!profileForAlias) {\n      return c.text('Profile not found.', 404);\n    }\n    profileId = profileForAlias.id;\n    // We need a user object for template fetching, even if it's just the ID.\n    user = { id: profileForAlias.user_id };\n  } else {\n    // If called from the secure route, user must be present.\n    if (!user) {\n      return c.json({ success: false, message: 'Unauthorized' }, 401);\n    }\n  }\n\n  // 1. Get the profile\n  const profile = await db.prepare('SELECT * FROM profiles WHERE id = ? AND user_id = ?').bind(profileId, user.id).first() as any;\n  if (!profile) {\n    return c.json({ success: false, message: 'Profile not found or access denied' }, 404);\n  }\n\n  // 2. Get all source nodes based on the profile's subscriptions\n  const { results: subLinks } = await db.prepare(\n    `SELECT s.id, s.include_keywords, s.exclude_keywords\n     FROM subscriptions as s\n     JOIN profile_subscriptions as ps ON s.id = ps.subscription_id\n     WHERE ps.profile_id = ?`\n  ).bind(profileId).all();\n\n  const typedSubLinks = (subLinks as { id: string, include_keywords: string | null, exclude_keywords: string | null }[]) || [];\n\n  let sourceNodes: Node[] = [];\n  const subscriptionSources: string[] = [];\n\n  if (typedSubLinks.length > 0) {\n    for (const sub of typedSubLinks) {\n      subscriptionSources.push(sub.id);\n      const { results: nodesForSub } = await db.prepare(\n        'SELECT * FROM nodes WHERE group_id = ? AND user_id = ?'\n      ).bind(sub.id, user.id).all();\n\n      const typedNodesForSub = (nodesForSub as Node[]) || [];\n\n      if (typedNodesForSub.length > 0) {\n        let filteredNodes = [...typedNodesForSub];\n        // Apply include/exclude filters defined ON THE SUBSCRIPTION ITSELF\n        if (sub.include_keywords) {\n          const includeUnit: ProcessingUnit = { id: 0, profile_id: profileId, type: 'FILTER_BY_KEYWORD', config: { keywords: sub.include_keywords, mode: 'include' }, order_index: -1, is_enabled: 1, user_id: user.id };\n          filteredNodes = applyProcessingUnit(filteredNodes, includeUnit);\n        }\n        if (sub.exclude_keywords) {\n          const excludeUnit: ProcessingUnit = { id: 0, profile_id: profileId, type: 'FILTER_BY_KEYWORD', config: { keywords: sub.exclude_keywords, mode: 'exclude' }, order_index: -1, is_enabled: 1, user_id: user.id };\n          filteredNodes = applyProcessingUnit(filteredNodes, excludeUnit);\n        }\n        sourceNodes.push(...filteredNodes);\n      }\n    }\n  }\n\n  // Manual node addition is deprecated\n  const directNodeIds: string[] = [];\n\n  // Log the initial state\n  logStmts.push(db.prepare(\n    `INSERT INTO subscription_processing_logs (run_id, profile_id, step_name, step_order, input_count, output_count, details)\n     VALUES (?, ?, ?, ?, ?, ?, ?)`\n  ).bind(runId, profileId, 'Source Nodes', 0, sourceNodes.length, sourceNodes.length, JSON.stringify({\n      manualNodes: directNodeIds.length,\n      subscriptionSources: subscriptionSources.length,\n  })));\n\n\n  // 3. Fetch and apply the processing units associated with this profile\n  let processedNodes: Node[] = [...sourceNodes];\n  const { results: units } = await db.prepare(\n    `SELECT * FROM processing_units WHERE profile_id = ? AND is_enabled = 1 ORDER BY order_index ASC`\n  ).bind(profileId).all();\n\n  if (units && units.length > 0) {\n    logStmts.push(db.prepare(\n      `INSERT INTO subscription_processing_logs (run_id, profile_id, step_name, step_order, input_count, output_count, details)\n       VALUES (?, ?, ?, ?, ?, ?, ?)`\n    ).bind(runId, profileId, 'Start Profile Processing', 1, processedNodes.length, processedNodes.length, JSON.stringify({ unitCount: units.length })));\n\n    let step = 2;\n    for (const unit of ((units as any[]) || [])) {\n      const inputCount = processedNodes.length;\n      unit.config = JSON.parse(unit.config as string);\n      processedNodes = applyProcessingUnit(processedNodes, unit);\n      const outputCount = processedNodes.length;\n      \n      logStmts.push(db.prepare(\n        `INSERT INTO subscription_processing_logs (run_id, profile_id, step_name, step_order, input_count, output_count, details)\n         VALUES (?, ?, ?, ?, ?, ?, ?)`\n      ).bind(runId, profileId, `Unit: ${unit.type}`, step++, inputCount, outputCount, JSON.stringify(unit.config)));\n    }\n  }\n\n  // Asynchronously save the logs without blocking the response\n  c.executionCtx.waitUntil(db.batch(logStmts));\n\n  // --- Generation Mode Logic ---\n  if (profile.generation_mode === 'online') {\n    // --- ONLINE CONVERTER MODE ---\n    const nodeLinks = processedNodes.map(node => buildNodeLink(node)).filter(Boolean).join('\\n');\n\n    // 1. Determine which asset IDs to use (profile-specific or global default)\n    let backendId = profile.subconverter_backend_id;\n    let configId = profile.subconverter_config_id;\n\n    if (!backendId || !configId) {\n      const { results: globalSettings } = await db.prepare(\"SELECT key, value FROM settings WHERE user_id = ? AND (key = 'default_subconverter_backend_id' OR key = 'default_subconverter_config_id')\").bind(user.id).all();\n      const settingsMap = (globalSettings as any[]).reduce((acc, s) => ({ ...acc, [s.key]: s.value }), {});\n      \n      if (!backendId) backendId = Number(settingsMap.default_subconverter_backend_id);\n      if (!configId) configId = Number(settingsMap.default_subconverter_config_id);\n    }\n\n    if (!backendId) {\n      return c.text('Subconverter backend is not configured for this profile or as a global default.', 500);\n    }\n    if (!configId) {\n      return c.text('Subconverter config is not configured for this profile or as a global default.', 500);\n    }\n\n    // 2. Fetch the asset URLs from the database\n    const assetsQuery = `SELECT id, url, type FROM subconverter_assets WHERE id IN (?, ?) AND (user_id = ? OR user_id = 'system-user-001')`;\n    const { results: assets } = await db.prepare(assetsQuery).bind(backendId, configId, user.id).all();\n\n    const backendAsset = (assets as any[]).find(a => a.id === backendId && a.type === 'backend');\n    const configAsset = (assets as any[]).find(a => a.id === configId && a.type === 'config');\n\n    if (!backendAsset) {\n      return c.text(`Subconverter backend asset with ID ${backendId} not found or is not a backend type.`, 404);\n    }\n    if (!configAsset) {\n      return c.text(`Subconverter config asset with ID ${configId} not found or is not a config type.`, 404);\n    }\n\n    // 3. Build the request URL and forward the request\n    // Adaptive Subscription Logic: Part 2 - Override target client if detected from UA\n    const targetClient = (autoDetectedClientType || 'clash').toLowerCase();\n    const requestUrl = new URL(`${backendAsset.url}/sub`);\n    requestUrl.searchParams.set('target', targetClient);\n    requestUrl.searchParams.set('url', nodeLinks);\n    requestUrl.searchParams.set('config', configAsset.url); // The config is now also a URL\n\n    // Forward the request to the subconverter\n    return fetch(requestUrl.toString());\n\n  } else {\n    // --- LOCAL TEMPLATE MODE (DEFAULT) ---\n    const templateId = profile.template_id;\n    if (!templateId) {\n      // Fallback to old behavior if no template is set: return base64 links\n      const nodeLinks = processedNodes.map(node => buildNodeLink(node)).filter(Boolean).join('\\n');\n      return c.text(btoa(nodeLinks));\n    }\n\n    const template = await db.prepare(\n      'SELECT * FROM config_templates WHERE (id = ? AND user_id = ?) OR (id = ? AND is_system = 1)'\n    ).bind(Number(templateId), user.id, Number(templateId)).first() as { content: string, client_type: string, subscription_ids?: string } | undefined;\n\n    if (!template) {\n      return c.json({ success: false, message: 'Template not found or access denied' }, 404);\n    }\n    \n    // New logic: If template has subscription_ids, use them as the source of truth\n    if (template.subscription_ids) {\n        try {\n            const templateSubIds = JSON.parse(template.subscription_ids);\n            if (Array.isArray(templateSubIds) && templateSubIds.length > 0) {\n                const subNodesQuery = `SELECT * FROM nodes WHERE group_id IN (${templateSubIds.map(() => '?').join(',')}) AND user_id = ?`;\n                const { results: nodesFromTemplateSubs } = await db.prepare(subNodesQuery).bind(...templateSubIds, user.id).all();\n                processedNodes = (nodesFromTemplateSubs as Node[]) || []; // Override the nodes from the profile\n            }\n        } catch (e) {\n            console.error(`Failed to parse subscription_ids for template ${templateId}`, e);\n            // Decide if we should fail or continue with profile nodes. Let's continue for now.\n        }\n    }\n\n    // Adaptive Subscription Logic: Part 2 - Override client type if detected from UA\n    const clientType = autoDetectedClientType?.toUpperCase() || template.client_type || 'GENERIC';\n    let formattedNodes: string;\n\n    if (clientType === 'GENERIC') {\n      formattedNodes = processedNodes.map(node => buildNodeLink(node)).filter(Boolean).join('\\n');\n    } else {\n      // Note: The client type here might be from UA, e.g., 'SHADOWROCKET', but our formatter keys are like 'ss-CLASH'.\n      // The `formatNode` function needs to handle this mapping. Let's assume it expects uppercase client names.\n      formattedNodes = processedNodes.map(node => formatNode(node, clientType)).filter(Boolean).join('\\n');\n    }\n\n    let finalConfig = template.content;\n\n    // --- New Dynamic Variable Replacement Logic ---\n    // 1. Replace all {{sub_N_nodes}} variables\n    if (template.subscription_ids) {\n      try {\n        const templateSubIds = JSON.parse(template.subscription_ids);\n        if (Array.isArray(templateSubIds)) {\n          for (let i = 0; i < templateSubIds.length; i++) {\n            const subId = templateSubIds[i];\n            const subNodes = await db.prepare('SELECT * FROM nodes WHERE group_id = ? AND user_id = ?').bind(subId, user.id).all();\n            const formattedSubNodes = ((subNodes.results as Node[]) || [])\n              .map((node: Node) => formatNode(node, clientType))\n              .filter(Boolean)\n              .join('\\n');\n            finalConfig = finalConfig.replace(new RegExp(`{{sub_${i + 1}_nodes}}`, 'g'), formattedSubNodes);\n          }\n        }\n      } catch (e) {\n        console.error(`Error processing dynamic sub variables for template ${templateId}`, e);\n      }\n    }\n\n    // 2. Replace the main {{nodes}} variable (all nodes combined)\n    finalConfig = finalConfig.replace('{{nodes}}', formattedNodes);\n\n    // 3. Replace other built-in variables\n    if (profile.template_variables) {\n      try {\n        const variables = JSON.parse(profile.template_variables as string);\n        for (const key in variables) {\n          finalConfig = finalConfig.replace(new RegExp(`{{${key}}}`, 'g'), variables[key]);\n        }\n      } catch (e) {\n        console.error(`Failed to parse template_variables for profile ${profile.id}`, e);\n      }\n    }\n    finalConfig = finalConfig.replace(/{{profile_name}}/g, profile.name);\n    finalConfig = finalConfig.replace(/{{update_time}}/g, new Date().toUTCString());\n\n    c.header('Content-Type', 'text/plain; charset=utf-8');\n    return c.text(finalConfig);\n  }\n}\n\n// The secure, original route, now using the helper\napp.get('/profiles/:id/generate', async (c) => {\n  return await generateConfig(c);\n});\n\n// GET /api/profiles/:id/logs - Get the latest processing logs for a profile\napp.get('/profiles/:id/logs', async (c) => {\n  const user = c.get('jwtPayload');\n  const { id: profileId } = c.req.param();\n  const db = c.env.DB;\n\n  // 1. Verify profile ownership\n  const profile = await db.prepare('SELECT id FROM profiles WHERE id = ? AND user_id = ?').bind(profileId, user.id).first();\n  if (!profile) {\n    return c.json({ success: false, message: 'Profile not found or access denied' }, 404);\n  }\n\n  // 2. Find the most recent run_id for this profile\n  const latestRun = await db.prepare(\n    'SELECT run_id FROM subscription_processing_logs WHERE profile_id = ? ORDER BY created_at DESC LIMIT 1'\n  ).bind(profileId).first<{ run_id: string }>();\n\n  if (!latestRun) {\n    return c.json({ success: true, data: [] }); // No logs found yet\n  }\n\n  // 3. Fetch all logs for that run_id\n  const { results } = await db.prepare(\n    'SELECT * FROM subscription_processing_logs WHERE run_id = ? ORDER BY step_order ASC'\n  ).bind(latestRun.run_id).all();\n  \n  // 4. Parse the 'details' JSON string for each log\n  const logs = results.map(log => {\n      try {\n          return { ...log, details: JSON.parse(log.details as string) };\n      } catch (e) {\n          return { ...log, details: { error: 'Failed to parse details' } };\n      }\n  });\n\n  return c.json({ success: true, data: logs });\n});\n\n// Node health check routes\napp.post('/nodes/:id/test', async (c) => {\n  const user = c.get('jwtPayload');\n  const { id: nodeId } = c.req.param();\n\n  // 1. Fetch the node and verify ownership\n  const node = await c.env.DB.prepare(\n    'SELECT * FROM nodes WHERE id = ? AND user_id = ?'\n  ).bind(nodeId, user.id).first<Node>();\n\n  if (!node) {\n    return c.json({ success: false, message: 'Node not found or access denied' }, 404);\n  }\n\n  // 2. Update node status to 'testing' immediately\n  await c.env.DB.prepare(\n    `UPDATE nodes SET status = 'testing', updated_at = ? WHERE id = ?`\n  ).bind(new Date().toISOString(), nodeId).run();\n\n  // 3. Trigger the health check in the background\n  c.executionCtx.waitUntil(\n    (async () => {\n      const result = await checkNodeHealth(node);\n      \n      // 4. Update the node with the health check result\n      await c.env.DB.prepare(\n        `UPDATE nodes SET status = ?, latency = ?, last_checked = ?, error = ?, updated_at = ?\n         WHERE id = ?`\n      ).bind(result.status, result.latency, result.last_checked, result.error, new Date().toISOString(), nodeId).run();\n      \n      console.log(`Health check for node ${nodeId} completed with status: ${result.status}`);\n    })()\n  );\n\n  // 5. Return an acceptance response, the UI will update via polling or re-fetching\n  return c.json({ success: true, message: `Health check for node ${node.name} initiated.` }, 202);\n});\n\n// GET /api/node-statuses - Get health status for all nodes\napp.get('/node-statuses', async (c) => {\n  const user = c.get('jwtPayload');\n  const { results } = await c.env.DB.prepare(\n    'SELECT id as node_id, status, latency, last_checked, error FROM nodes WHERE user_id = ?'\n  ).bind(user.id).all();\n\n  // The frontend expects `status` to be one of the HealthStatus types.\n  // Let's ensure any other DB values are mapped to 'pending'.\n  const validStatuses = ['pending', 'testing', 'healthy', 'unhealthy'];\n  const sanitizedResults = (results as any[]).map(r => ({\n      ...r,\n      status: validStatuses.includes(r.status) ? r.status : 'pending'\n  }));\n\n  return c.json({ success: true, data: sanitizedResults });\n});\n\n// POST /api/nodes/health-check - Batch trigger health checks for multiple nodes\napp.post('/nodes/health-check', async (c) => {\n  const user = c.get('jwtPayload');\n  const { nodeIds } = await c.req.json<{ nodeIds: string[] }>();\n\n  if (!nodeIds || !Array.isArray(nodeIds) || nodeIds.length === 0) {\n    return c.json({ success: false, message: 'Missing or invalid nodeIds array' }, 400);\n  }\n\n  const CHUNK_SIZE = 100;\n  const allOwnedNodes: Node[] = [];\n\n  // Step 1: Fetch nodes in chunks to verify ownership\n  for (let i = 0; i < nodeIds.length; i += CHUNK_SIZE) {\n    const chunk = nodeIds.slice(i, i + CHUNK_SIZE);\n    const query = `SELECT * FROM nodes WHERE user_id = ? AND id IN (${chunk.map(() => '?').join(',')})`;\n    const { results: nodeChunk } = await c.env.DB.prepare(query).bind(user.id, ...chunk).all<Node>();\n    if (nodeChunk) {\n      allOwnedNodes.push(...nodeChunk);\n    }\n  }\n\n  if (allOwnedNodes.length === 0) {\n    return c.json({ success: false, message: 'No valid nodes found for the given IDs' }, 404);\n  }\n\n  // Step 2: Update all valid nodes to 'testing' status in chunks\n  const updateToTestingStmts: D1PreparedStatement[] = [];\n  const now = new Date().toISOString();\n  for (let i = 0; i < allOwnedNodes.length; i += CHUNK_SIZE) {\n    const nodeChunk = allOwnedNodes.slice(i, i + CHUNK_SIZE);\n    const chunkOfIds = nodeChunk.map(n => n.id);\n    const updateQuery = `UPDATE nodes SET status = 'testing', updated_at = ? WHERE id IN (${chunkOfIds.map(() => '?').join(',')})`;\n    updateToTestingStmts.push(c.env.DB.prepare(updateQuery).bind(now, ...chunkOfIds));\n  }\n  \n  if (updateToTestingStmts.length > 0) {\n    await c.env.DB.batch(updateToTestingStmts);\n  }\n\n  // Step 3: Trigger the actual health checks in the background\n  c.executionCtx.waitUntil(\n    (async () => {\n      console.log(`Starting batch health check for ${allOwnedNodes.length} nodes for user ${user.id}.`);\n\n      // 3a. Concurrently perform all health checks (network I/O)\n      const healthCheckPromises = allOwnedNodes.map(node => checkNodeHealth(node));\n      const healthResults = await Promise.all(healthCheckPromises);\n\n      // 3b. Prepare all database update statements with the final results\n      const finalUpdateStmts: D1PreparedStatement[] = allOwnedNodes.map((node, index) => {\n        const result = healthResults[index];\n        return c.env.DB.prepare(\n          `UPDATE nodes SET status = ?, latency = ?, last_checked = ?, error = ?, updated_at = ?\n           WHERE id = ?`\n        ).bind(result.status, result.latency, result.last_checked, result.error, new Date().toISOString(), node.id);\n      });\n\n      // 3c. Batch execute the final updates in chunks\n      if (finalUpdateStmts.length > 0) {\n        const BATCH_CHUNK_SIZE = 100;\n        for (let i = 0; i < finalUpdateStmts.length; i += BATCH_CHUNK_SIZE) {\n          const batchChunk = finalUpdateStmts.slice(i, i + BATCH_CHUNK_SIZE);\n          try {\n            await c.env.DB.batch(batchChunk);\n          } catch (e: any) {\n            console.error(`Error processing final update batch chunk starting at index ${i}: ${e.message}`);\n          }\n        }\n      }\n\n      console.log(`Batch health check completed for ${allOwnedNodes.length} nodes for user ${user.id}.`);\n    })()\n  );\n\n  return c.json({ success: true, message: `Health check initiated for ${allOwnedNodes.length} nodes.` }, 202);\n});\n\n\n// Subscription Rules routes (nested under a specific subscription)\n\n// GET /api/subscription-rules - Get all rules for the current user\napp.get('/subscription-rules', async (c) => {\n  const user = c.get('jwtPayload');\n  \n  // To get all rules for a user, we need to join through subscriptions\n  const { results } = await c.env.DB.prepare(\n    `SELECT sr.* FROM subscription_rules as sr\n     JOIN subscriptions as s ON sr.subscription_id = s.id\n     WHERE s.user_id = ?`\n  ).bind(user.id).all();\n\n  return c.json({ success: true, data: results });\n});\n\n// GET /api/subscriptions/:sub_id/rules - Get all rules for a specific subscription\napp.get('/subscriptions/:sub_id/rules', async (c) => {\n  const user = c.get('jwtPayload');\n  const { sub_id } = c.req.param();\n\n  // First, verify this subscription belongs to the user\n  const sub = await c.env.DB.prepare('SELECT id FROM subscriptions WHERE id = ? AND user_id = ?').bind(sub_id, user.id).first();\n  if (!sub) {\n    return c.json({ success: false, message: 'Subscription not found or access denied' }, 404);\n  }\n\n  const { results } = await c.env.DB.prepare(\n    'SELECT * FROM subscription_rules WHERE subscription_id = ?'\n  ).bind(sub_id).all();\n\n  return c.json({ success: true, data: results });\n});\n\n// POST /api/subscriptions/:sub_id/rules - Create a new rule for a subscription\napp.post('/subscriptions/:sub_id/rules', async (c) => {\n  const user = c.get('jwtPayload');\n  const { sub_id } = c.req.param();\n  const body = await c.req.json<{\n    name: string;\n    type: string;\n    value: string; // Expecting a JSON string\n    enabled?: boolean;\n  }>();\n\n  if (!body.name || !body.type || !body.value) {\n    return c.json({ success: false, message: 'Missing required fields: name, type, value' }, 400);\n  }\n\n  // Verify subscription ownership\n  const sub = await c.env.DB.prepare('SELECT id FROM subscriptions WHERE id = ? AND user_id = ?').bind(sub_id, user.id).first();\n  if (!sub) {\n    return c.json({ success: false, message: 'Subscription not found or access denied' }, 404);\n  }\n\n  const now = new Date().toISOString();\n  await c.env.DB.prepare(\n    `INSERT INTO subscription_rules (subscription_id, name, type, value, enabled, created_at, updated_at)\n     VALUES (?, ?, ?, ?, ?, ?, ?)`\n  ).bind(sub_id, body.name, body.type, body.value, body.enabled === false ? 0 : 1, now, now).run();\n\n  return c.json({ success: true, message: 'Rule created successfully.' }, 201);\n});\n\n// PUT /api/subscriptions/:sub_id/rules/:rule_id - Update a rule\napp.put('/subscriptions/:sub_id/rules/:rule_id', async (c) => {\n    const user = c.get('jwtPayload');\n    const { sub_id, rule_id } = c.req.param();\n    const body = await c.req.json<{\n        name?: string;\n        type?: string;\n        value?: string;\n        enabled?: boolean;\n    }>();\n\n    // Verify subscription ownership first\n    const sub = await c.env.DB.prepare('SELECT id FROM subscriptions WHERE id = ? AND user_id = ?').bind(sub_id, user.id).first();\n    if (!sub) {\n        return c.json({ success: false, message: 'Subscription not found or access denied' }, 404);\n    }\n\n    // Fetch the existing rule to build the update query\n    const rule = await c.env.DB.prepare('SELECT * FROM subscription_rules WHERE id = ? AND subscription_id = ?').bind(Number(rule_id), sub_id).first<any>();\n    if (!rule) {\n        return c.json({ success: false, message: 'Rule not found' }, 404);\n    }\n\n    const newName = body.name ?? rule.name;\n    const newType = body.type ?? rule.type;\n    const newValue = body.value ?? rule.value;\n    const newEnabled = body.enabled === undefined ? rule.enabled : (body.enabled ? 1 : 0);\n    const now = new Date().toISOString();\n\n    await c.env.DB.prepare(\n        `UPDATE subscription_rules\n         SET name = ?, type = ?, value = ?, enabled = ?, updated_at = ?\n         WHERE id = ?`\n    ).bind(newName, newType, newValue, newEnabled, now, Number(rule_id)).run();\n\n    return c.json({ success: true, message: 'Rule updated successfully.' });\n});\n\n\n// DELETE /api/subscriptions/:sub_id/rules/:rule_id - Delete a rule\napp.delete('/subscriptions/:sub_id/rules/:rule_id', async (c) => {\n    const user = c.get('jwtPayload');\n    const { sub_id, rule_id } = c.req.param();\n\n    // Verify subscription ownership to ensure user can't delete rules from other's subscriptions\n    const sub = await c.env.DB.prepare('SELECT id FROM subscriptions WHERE id = ? AND user_id = ?').bind(sub_id, user.id).first();\n    if (!sub) {\n        return c.json({ success: false, message: 'Subscription not found or access denied' }, 404);\n    }\n\n    const result = await c.env.DB.prepare(\n        'DELETE FROM subscription_rules WHERE id = ? AND subscription_id = ?'\n    ).bind(Number(rule_id), sub_id).run();\n\n    if ((result as any).changes === 0) {\n        return c.json({ success: false, message: 'Rule not found or already deleted' }, 404);\n    }\n\n    return c.json({ success: true, message: 'Rule deleted successfully.' });\n});\n\n\n// Config templates routes\napp.get('/config-templates', async (c) => {\n  const user = c.get('jwtPayload');\n  const { results } = await c.env.DB.prepare(\n    'SELECT * FROM config_templates WHERE user_id = ? OR is_system = 1'\n  ).bind(user.id).all();\n  return c.json({ success: true, data: results });\n});\n\napp.post('/config-templates', async (c) => {\n  const user = c.get('jwtPayload');\n  const body = await c.req.json<{\n    name?: string;\n    content?: string;\n    client_type?: 'CLASH' | 'SURGE' | 'V2RAYN' | 'QUANTUMULT_X' | 'GENERIC';\n    subscription_ids?: string[];\n  }>();\n\n  if (!body.name || !body.content || !body.client_type) {\n    return c.json({ success: false, message: 'Missing required fields: name, content, client_type' }, 400);\n  }\n\n  const now = new Date().toISOString();\n\n  const result = await c.env.DB.prepare(\n    `INSERT INTO config_templates (user_id, name, content, client_type, subscription_ids, created_at, updated_at, is_system)\n     VALUES (?, ?, ?, ?, ?, ?, ?, ?)`\n  ).bind(user.id, body.name, body.content, body.client_type, JSON.stringify(body.subscription_ids || []), now, now, 0).run();\n  \n  const insertedId = result.meta.last_row_id;\n\n  return c.json({ success: true, data: { id: insertedId } }, 201);\n});\n\napp.get('/config-templates/:id', async (c) => {\n  const user = c.get('jwtPayload');\n  const { id } = c.req.param();\n  const template = await c.env.DB.prepare('SELECT * FROM config_templates WHERE id = ? AND user_id = ?').bind(Number(id), user.id).first();\n\n  if (!template) {\n    return c.json({ success: false, message: 'Config template not found' }, 404);\n  }\n\n  return c.json({ success: true, data: template });\n});\n\napp.put('/config-templates/:id', async (c) => {\n  const user = c.get('jwtPayload');\n  const { id } = c.req.param();\n  const body = await c.req.json<{\n    name?: string;\n    content?: string;\n    client_type?: 'CLASH' | 'SURGE' | 'V2RAYN' | 'QUANTUMULT_X' | 'GENERIC';\n    subscription_ids?: string[];\n  }>();\n\n  const now = new Date().toISOString();\n\n  // Fetch the existing template to ensure it exists and belongs to the user\n  const existing = await c.env.DB.prepare('SELECT * FROM config_templates WHERE id = ? AND user_id = ?').bind(Number(id), user.id).first<any>();\n  if (!existing) {\n    return c.json({ success: false, message: 'Config template not found or access denied' }, 404);\n  }\n\n  await c.env.DB.prepare(\n    `UPDATE config_templates\n     SET name = ?, content = ?, client_type = ?, subscription_ids = ?, updated_at = ?\n     WHERE id = ?`\n  ).bind(\n      body.name ?? existing.name,\n      body.content ?? existing.content,\n      body.client_type ?? existing.client_type,\n      body.subscription_ids ? JSON.stringify(body.subscription_ids) : existing.subscription_ids,\n      now,\n      Number(id)\n  ).run();\n\n  return c.json({ success: true, message: 'Template updated successfully.' });\n});\n\napp.delete('/config-templates/:id', async (c) => {\n  const user = c.get('jwtPayload');\n  const { id } = c.req.param();\n  const { success } = await c.env.DB.prepare('DELETE FROM config_templates WHERE id = ? AND user_id = ?').bind(Number(id), user.id).run();\n  \n  if (!success) {\n      return c.json({ success: false, message: 'Failed to delete template or template not found.' }, 500);\n  }\n\n  return c.json({ success: true, message: 'Template deleted successfully.' });\n});\n\napp.post('/config-templates/preview', async (c) => {\n  const user = c.get('jwtPayload');\n  const db = c.env.DB;\n  const body = await c.req.json<{\n    content?: string;\n    client_type?: ClientType;\n    subscription_ids?: string[];\n  }>();\n\n  if (!body.content || !body.client_type || !body.subscription_ids) {\n    return c.json({ success: false, message: 'Missing required fields for preview' }, 400);\n  }\n\n  let processedNodes: Node[] = [];\n  if (body.subscription_ids.length > 0) {\n    const subNodesQuery = `SELECT * FROM nodes WHERE group_id IN (${body.subscription_ids.map(() => '?').join(',')}) AND user_id = ?`;\n    const { results } = await db.prepare(subNodesQuery).bind(...body.subscription_ids, user.id).all();\n    processedNodes = (results as Node[]) || [];\n  }\n\n  const clientType = body.client_type.toUpperCase();\n  let formattedNodes: string;\n\n  if (clientType === 'GENERIC') {\n    formattedNodes = processedNodes.map(node => buildNodeLink(node)).filter(Boolean).join('\\n');\n  } else {\n    formattedNodes = processedNodes.map((node: Node) => formatNode(node, clientType)).filter(Boolean).join('\\n');\n  }\n\n  let finalConfig = body.content;\n\n  // Dynamic variables\n  for (let i = 0; i < body.subscription_ids.length; i++) {\n    const subId = body.subscription_ids[i];\n    const subNodes = await db.prepare('SELECT * FROM nodes WHERE group_id = ? AND user_id = ?').bind(subId, user.id).all();\n    const formattedSubNodes = ((subNodes.results as Node[]) || [])\n      .map((node: Node) => formatNode(node, clientType))\n      .filter(Boolean)\n      .join('\\n');\n    finalConfig = finalConfig.replace(new RegExp(`{{sub_${i + 1}_nodes}}`, 'g'), formattedSubNodes);\n  }\n\n  // Main variable\n  finalConfig = finalConfig.replace('{{nodes}}', formattedNodes);\n  \n  // Other built-ins\n  finalConfig = finalConfig.replace(/{{profile_name}}/g, 'Preview Profile');\n  finalConfig = finalConfig.replace(/{{update_time}}/g, new Date().toUTCString());\n\n  return c.text(finalConfig);\n});\n\n// Processing Units CRUD (now independent)\n// GET /api/profiles/:profile_id/processing-units - Get all units for a profile\napp.get('/profiles/:profile_id/processing-units', async (c) => {\n  const user = c.get('jwtPayload');\n  const { profile_id } = c.req.param();\n\n  // Verify profile ownership\n  const profile = await c.env.DB.prepare('SELECT id FROM profiles WHERE id = ? AND user_id = ?').bind(profile_id, user.id).first();\n  if (!profile) {\n    return c.json({ success: false, message: 'Profile not found or access denied' }, 404);\n  }\n\n  const { results } = await c.env.DB.prepare(\n    'SELECT * FROM processing_units WHERE profile_id = ? ORDER BY order_index ASC'\n  ).bind(profile_id).all();\n  \n  const units = (results as any[]).map(unit => {\n      try {\n          return { ...unit, config: JSON.parse(unit.config) };\n      } catch (e) {\n          return { ...unit, config: {} }; // Graceful error handling\n      }\n  });\n\n  return c.json({ success: true, data: units });\n});\n\n// POST /api/processing-units - Create a new unit\n// POST /api/profiles/:profile_id/processing-units - Create a new unit for a profile\napp.post('/profiles/:profile_id/processing-units', async (c) => {\n  const user = c.get('jwtPayload');\n  const { profile_id } = c.req.param();\n  const body = await c.req.json<{\n    type: string;\n    config: any;\n    is_enabled?: boolean;\n    order_index: number;\n  }>();\n\n  if (!body.type || !body.config || body.order_index === undefined) {\n    return c.json({ success: false, message: 'Missing required fields: type, config, order_index' }, 400);\n  }\n  \n  // Verify profile ownership\n  const profile = await c.env.DB.prepare('SELECT id FROM profiles WHERE id = ? AND user_id = ?').bind(profile_id, user.id).first();\n  if (!profile) {\n    return c.json({ success: false, message: 'Profile not found or access denied' }, 404);\n  }\n\n  const now = new Date().toISOString();\n  const result = await c.env.DB.prepare(\n    `INSERT INTO processing_units (profile_id, user_id, type, config, order_index, is_enabled, created_at, updated_at)\n     VALUES (?, ?, ?, ?, ?, ?, ?, ?)`\n  ).bind(profile_id, user.id, body.type, JSON.stringify(body.config), body.order_index, body.is_enabled === false ? 0 : 1, now, now).run();\n\n  return c.json({ success: true, data: { id: result.meta.last_row_id } }, 201);\n});\n\n// PUT /api/processing-units/:id - Update a unit (note: it's not nested under profile)\napp.put('/processing-units/:id', async (c) => {\n    const user = c.get('jwtPayload');\n    const { id } = c.req.param();\n    const body = await c.req.json<{\n        type?: string;\n        config?: any;\n        is_enabled?: boolean;\n        order_index?: number;\n    }>();\n\n    const unit = await c.env.DB.prepare('SELECT * FROM processing_units WHERE id = ? AND user_id = ?').bind(Number(id), user.id).first<any>();\n    if (!unit) {\n        return c.json({ success: false, message: 'Processing unit not found or access denied' }, 404);\n    }\n\n    const now = new Date().toISOString();\n    \n    // Build dynamic SET clause\n    const fieldsToUpdate: Record<string, any> = {};\n    if (body.type !== undefined) fieldsToUpdate.type = body.type;\n    if (body.config !== undefined) fieldsToUpdate.config = JSON.stringify(body.config);\n    if (body.is_enabled !== undefined) fieldsToUpdate.is_enabled = body.is_enabled ? 1 : 0;\n    if (body.order_index !== undefined) fieldsToUpdate.order_index = body.order_index;\n\n    if (Object.keys(fieldsToUpdate).length === 0) {\n        return c.json({ success: true, message: 'No changes provided.' });\n    }\n\n    const setClause = Object.keys(fieldsToUpdate).map(key => `${key} = ?`).join(', ');\n    const values = [...Object.values(fieldsToUpdate), now, Number(id), user.id];\n\n    await c.env.DB.prepare(\n        `UPDATE processing_units\n         SET ${setClause}, updated_at = ?\n         WHERE id = ? AND user_id = ?`\n    ).bind(...values).run();\n\n    return c.json({ success: true, message: 'Processing unit updated successfully.' });\n});\n\n// DELETE /api/processing-units/:id - Delete a unit\napp.delete('/processing-units/:id', async (c) => {\n    const user = c.get('jwtPayload');\n    const { id } = c.req.param();\n\n    const { success } = await c.env.DB.prepare(\n        'DELETE FROM processing_units WHERE id = ? AND user_id = ?'\n    ).bind(Number(id), user.id).run();\n\n    if (!success) {\n        return c.json({ success: false, message: 'Failed to delete unit or unit not found.' }, 500);\n    }\n\n    return c.json({ success: true, message: 'Processing unit deleted successfully.' });\n});\n\napp.post('/processing-units/batch-update-order', async (c) => {\n    const user = c.get('jwtPayload');\n    const { unit_ids } = await c.req.json<{ unit_ids: number[] }>();\n\n    if (!unit_ids || !Array.isArray(unit_ids)) {\n        return c.json({ success: false, message: 'Missing or invalid unit_ids array' }, 400);\n    }\n\n    // In a real app, you'd also verify that all unit IDs belong to the user.\n    const stmts = unit_ids.map((id, index) =>\n        c.env.DB.prepare('UPDATE processing_units SET order_index = ? WHERE id = ? AND user_id = ?')\n            .bind(index, id, user.id)\n    );\n\n    if (stmts.length > 0) {\n        await c.env.DB.batch(stmts);\n    }\n\n    return c.json({ success: true, message: 'Processing units order updated.' });\n});\n\n// Subconverter Assets CRUD\nconst subconverterAssetsApp = new Hono<{ Bindings: Env }>();\n\n// GET /api/subconverter-assets - Get all assets for the current user, plus global assets\napp.get('/subconverter-assets', async (c) => {\n  const user = c.get('jwtPayload');\n  const { results } = await c.env.DB.prepare(\n    \"SELECT * FROM subconverter_assets WHERE user_id = ? OR user_id = 'system-user-001'\"\n  ).bind(user.id).all();\n  return c.json({ success: true, data: results });\n});\n\n// POST /api/subconverter-assets - Create a new asset\napp.post('/subconverter-assets', async (c) => {\n  const user = c.get('jwtPayload');\n  const body = await c.req.json<{\n    name: string;\n    url: string;\n    type: 'backend' | 'config';\n  }>();\n\n  if (!body.name || !body.url || !body.type) {\n    return c.json({ success: false, message: 'Missing required fields: name, url, type' }, 400);\n  }\n\n  const now = new Date().toISOString();\n  const result = await c.env.DB.prepare(\n    `INSERT INTO subconverter_assets (user_id, name, url, type, created_at, updated_at)\n     VALUES (?, ?, ?, ?, ?, ?)`\n  ).bind(user.id, body.name, body.url, body.type, now, now).run();\n\n  return c.json({ success: true, data: { id: result.meta.last_row_id } }, 201);\n});\n\n// PUT /api/subconverter-assets/:id - Update an asset\napp.put('/subconverter-assets/:id', async (c) => {\n  const user = c.get('jwtPayload');\n  const { id } = c.req.param();\n  const body = await c.req.json<{\n    name?: string;\n    url?: string;\n    type?: 'backend' | 'config';\n  }>();\n\n  const existing = await c.env.DB.prepare(\n    'SELECT * FROM subconverter_assets WHERE id = ? AND user_id = ?'\n  ).bind(Number(id), user.id).first<any>();\n\n  if (!existing) {\n    return c.json({ success: false, message: 'Asset not found or access denied' }, 404);\n  }\n\n  const now = new Date().toISOString();\n  await c.env.DB.prepare(\n    `UPDATE subconverter_assets\n     SET name = ?, url = ?, type = ?, updated_at = ?\n     WHERE id = ?`\n  ).bind(\n    body.name ?? existing.name,\n    body.url ?? existing.url,\n    body.type ?? existing.type,\n    now,\n    Number(id)\n  ).run();\n\n  return c.json({ success: true, message: 'Asset updated successfully.' });\n});\n\n// DELETE /api/subconverter-assets/:id - Delete an asset\napp.delete('/subconverter-assets/:id', async (c) => {\n  const user = c.get('jwtPayload');\n  const { id } = c.req.param();\n\n  // TODO: Check if this asset is currently in use by any profiles or as a default setting.\n  // If so, prevent deletion or handle it gracefully. For now, we'll allow direct deletion.\n\n  const { success } = await c.env.DB.prepare(\n    'DELETE FROM subconverter_assets WHERE id = ? AND user_id = ?'\n  ).bind(Number(id), user.id).run();\n\n  if (!success) {\n    return c.json({ success: false, message: 'Failed to delete asset or asset not found.' }, 500);\n  }\n\n  return c.json({ success: true, message: 'Asset deleted successfully.' });\n});\n\n// Settings routes\napp.get('/settings', async (c) => {\n  const user = c.get('jwtPayload');\n  const { results } = await c.env.DB.prepare('SELECT * FROM settings WHERE user_id = ?').bind(user.id).all();\n  return c.json({ success: true, data: results });\n});\n\napp.post('/settings', async (c) => {\n  const user = c.get('jwtPayload');\n  const settings = await c.req.json<any[]>();\n\n  if (!Array.isArray(settings)) {\n    return c.json({ success: false, message: 'Request body must be an array of settings' }, 400);\n  }\n\n  const now = new Date().toISOString();\n  const stmts = settings.map(setting => {\n    const { key, value, type, category, description } = setting;\n    if (!key || !type || !category) {\n      // Skip invalid setting objects\n      return null;\n    }\n    // Using INSERT OR REPLACE logic. D1's `ON CONFLICT DO UPDATE` is the standard SQL way.\n    // Here we'll do it by deleting and then inserting within a transaction,\n    // or more simply, just use separate INSERT and UPDATE which is less efficient but works.\n    // A better approach for D1 is to just insert and let the primary key conflict fail,\n    // then follow up with an update, or structure the logic to check existence first.\n    // For simplicity in a batch, we'll use a REPLACE statement which is concise.\n    return c.env.DB.prepare(\n      `INSERT INTO settings (key, user_id, value, type, category, description, created_at, updated_at)\n       VALUES (?, ?, ?, ?, ?, ?, ?, ?)\n       ON CONFLICT(key, user_id) DO UPDATE SET\n         value = excluded.value,\n         updated_at = excluded.updated_at`\n    ).bind(key, user.id, value, type, category, description || '', now, now);\n  }).filter(stmt => stmt !== null);\n\n  if (stmts.length === 0) {\n    return c.json({ success: false, message: 'No valid settings to process' }, 400);\n  }\n\n  await c.env.DB.batch(stmts as D1PreparedStatement[]);\n\n  return c.json({ success: true, message: 'Settings updated successfully' });\n});\n\n// Helper function to send a Telegram message\nasync function sendTelegramMessage(db: D1Database, userId: string, message: string): Promise<{ success: boolean; message: string; }> {\n  // 1. Fetch user's Telegram settings\n  const settingsQuery = await db.prepare(\n    `SELECT key, value FROM settings WHERE user_id = ? AND category = 'telegram'`\n  ).bind(userId).all();\n\n  if (!settingsQuery.results) {\n    return { success: false, message: 'Telegram settings not found for user.' };\n  }\n\n  const settings = settingsQuery.results.reduce((acc, setting) => {\n    acc[setting.key as string] = setting.value;\n    return acc;\n  }, {} as Record<string, any>);\n\n  const botToken = settings['telegram_bot_token'];\n  const chatId = settings['telegram_chat_id'];\n\n  if (!botToken || !chatId) {\n    return { success: false, message: 'Telegram Bot Token or Chat ID is not configured.' };\n  }\n\n  // 2. Send the message using the Telegram Bot API\n  const apiUrl = `https://api.telegram.org/bot${botToken}/sendMessage`;\n  try {\n    const response = await fetch(apiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        chat_id: chatId,\n        text: message,\n        parse_mode: 'Markdown',\n      }),\n    });\n\n    const responseData = await response.json<any>();\n\n    if (!responseData.ok) {\n      console.error('Telegram API Error:', responseData);\n      return { success: false, message: `Telegram API Error: ${responseData.description}` };\n    }\n\n    return { success: true, message: 'Message sent successfully.' };\n  } catch (error: any) {\n    console.error('Failed to send Telegram message:', error);\n    return { success: false, message: `Failed to send message: ${error.message}` };\n  }\n}\n\napp.post('/settings/test-telegram', async (c) => {\n  const user = c.get('jwtPayload');\n  const { message } = await c.req.json<{ message?: string }>();\n  \n  const testMessage = message || `This is a test message from SuperSub at ${new Date().toLocaleString()}.`;\n\n  const result = await sendTelegramMessage(c.env.DB, user.id, testMessage);\n\n  if (!result.success) {\n    return c.json({ success: false, message: result.message }, 500);\n  }\n\n  return c.json({ success: true, message: 'Test message sent successfully!' });\n});\n\n\n// Temporary debug route to check users\napp.get('/debug/users', async (c) => {\n  const { results } = await c.env.DB.prepare('SELECT id, username, created_at FROM users').all();\n  return c.json({ success: true, data: results });\n});\n\n// New public route for subscription links by alias\n// This route is defined on the main `app` so it doesn't require JWT auth.\n// It's also defined outside the /api base path for a cleaner URL.\nconst subApp = new Hono<{ Bindings: Env }>().basePath('/sub');\nsubApp.get('/:alias', async (c) => {\n  return await generateConfig(c);\n});\n\napp.route('/', subApp);\n\n// =================================================================\n// Admin Routes\n// =================================================================\n\n// GET /api/admin/users - Get all users\napp.get('/admin/users', async (c) => {\n  const { results } = await c.env.DB.prepare(\"SELECT id, username, role, created_at, updated_at FROM users WHERE role != 'system'\").all();\n  return c.json({ success: true, data: results });\n});\n\n// PUT /api/admin/users/:id - Update a user's role\napp.put('/admin/users/:id', async (c) => {\n  const { id } = c.req.param();\n  const { role } = await c.req.json<{ role?: 'admin' | 'user' }>();\n\n  if (!role || !['admin', 'user'].includes(role)) {\n    return c.json({ success: false, message: 'Invalid role specified' }, 400);\n  }\n\n  const now = new Date().toISOString();\n  await c.env.DB.prepare(\n    'UPDATE users SET role = ?, updated_at = ? WHERE id = ?'\n  ).bind(role, now, id).run();\n\n  return c.json({ success: true, message: 'User role updated successfully.' });\n});\n\n// DELETE /api/admin/users/:id - Delete a user\napp.delete('/admin/users/:id', async (c) => {\n  const { id } = c.req.param();\n  const currentUser = c.get('jwtPayload');\n\n  if (id === currentUser.id) {\n    return c.json({ success: false, message: 'Cannot delete your own account.' }, 400);\n  }\n\n  await c.env.DB.prepare('DELETE FROM users WHERE id = ?').bind(id).run();\n  return c.json({ success: true, message: 'User deleted successfully.' });\n});\n\n// GET /api/admin/system-settings - Get all system settings\napp.get('/admin/system-settings', async (c) => {\n    const { results } = await c.env.DB.prepare('SELECT * FROM system_settings').all();\n    const settings = (results as any[]).reduce((acc, setting) => {\n        acc[setting.key] = setting.value;\n        return acc;\n    }, {});\n    return c.json({ success: true, data: settings });\n});\n\n// POST /api/admin/system-settings - Update system settings\napp.post('/admin/system-settings', async (c) => {\n    const settingsToUpdate = await c.req.json<Record<string, string>>();\n\n    const stmts = Object.entries(settingsToUpdate).map(([key, value]) =>\n        c.env.DB.prepare(\n            `INSERT INTO system_settings (key, value) VALUES (?, ?)\n             ON CONFLICT(key) DO UPDATE SET value = excluded.value`\n        ).bind(key, String(value))\n    );\n\n    if (stmts.length > 0) {\n        await c.env.DB.batch(stmts);\n    }\n\n    return c.json({ success: true, message: 'System settings updated successfully.' });\n});\n\n\nexport const onRequest = handle(app);\n\n// This function will be triggered by the cron schedule in wrangler.toml\nexport const onScheduled: any = async (context: any) => {\n  console.log('Cron job starting: \"Update All Subscriptions\"');\n  \n  const { env, waitUntil } = context;\n  const db = env.DB;\n\n  waitUntil(\n    (async () => {\n      let finalMessage = 'Cron job finished.';\n      try {\n        const { results: subscriptions } = await db.prepare('SELECT id, user_id FROM subscriptions').all();\n\n        if (!subscriptions || subscriptions.length === 0) {\n          console.log('No subscriptions to update.');\n          return;\n        }\n\n        console.log(`Found ${subscriptions.length} subscriptions to update.`);\n\n        const updatePromises = (subscriptions as any[]).map((sub: any) => runSubscriptionUpdate(db, sub.id, sub.user_id, waitUntil));\n        const results = await Promise.allSettled(updatePromises);\n\n        let successCount = 0;\n        let failedCount = 0;\n\n        results.forEach((result: any, index: number) => {\n          const subId = (subscriptions as any[])[index].id;\n          if (result.status === 'fulfilled' && result.value.success) {\n            successCount++;\n            console.log(`[SUCCESS] Subscription ${subId}: ${result.value.message}`);\n          } else {\n            failedCount++;\n            const errorMessage = result.status === 'rejected' ? result.reason : result.value?.message;\n            console.error(`[FAILED] Subscription ${subId}: ${errorMessage}`);\n          }\n        });\n\n        finalMessage = `Cron job finished. Successfully updated: ${successCount}, Failed: ${failedCount}.`;\n        console.log(finalMessage);\n\n      } catch (error: any) {\n        finalMessage = `An unexpected error occurred during the cron job: ${error.message}`;\n        console.error(finalMessage);\n      }\n    })()\n  );\n};\n\nexport { app }; // Export the Hono app instance for testing", "import { onRequest as __api___path___ts_onRequest } from \"/Users/mac/Progame/SuperSub/functions/api/[[path]].ts\"\n\nexport const routes = [\n    {\n      routePath: \"/api/:path*\",\n      mountPath: \"/api\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api___path___ts_onRequest],\n    },\n  ]", "/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n", "import { match } from \"path-to-regexp\";\n\n//note: this explicitly does not include the * character, as pages requires this\nconst escapeRegex = /[.+?^${}()|[\\]\\\\]/g;\n\ntype HTTPMethod =\n\t| \"HEAD\"\n\t| \"OPTIONS\"\n\t| \"GET\"\n\t| \"POST\"\n\t| \"PUT\"\n\t| \"PATCH\"\n\t| \"DELETE\";\n\n/* TODO: Grab these from @cloudflare/workers-types instead */\ntype Params<P extends string = string> = Record<P, string | string[]>;\n\ntype EventContext<Env, P extends string, Data> = {\n\trequest: Request;\n\tfunctionPath: string;\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n\tnext: (input?: Request | string, init?: RequestInit) => Promise<Response>;\n\tenv: Env & { ASSETS: { fetch: typeof fetch } };\n\tparams: Params<P>;\n\tdata: Data;\n};\n\ndeclare type PagesFunction<\n\tEnv = unknown,\n\tP extends string = string,\n\tData extends Record<string, unknown> = Record<string, unknown>,\n> = (context: EventContext<Env, P, Data>) => Response | Promise<Response>;\n/* end @cloudflare/workers-types */\n\ntype RouteHandler = {\n\troutePath: string;\n\tmountPath: string;\n\tmethod?: HTTPMethod;\n\tmodules: PagesFunction[];\n\tmiddlewares: PagesFunction[];\n};\n\n// inject `routes` via ESBuild\ndeclare const routes: RouteHandler[];\n// define `__FALLBACK_SERVICE__` via ESBuild\ndeclare const __FALLBACK_SERVICE__: string;\n\n// expect an ASSETS fetcher binding pointing to the asset-server stage\ntype FetchEnv = {\n\t[name: string]: { fetch: typeof fetch };\n\tASSETS: { fetch: typeof fetch };\n};\n\ntype WorkerContext = {\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n};\n\nfunction* executeRequest(request: Request) {\n\tconst requestPath = new URL(request.url).pathname;\n\n\t// First, iterate through the routes (backwards) and execute \"middlewares\" on partial route matches\n\tfor (const route of [...routes].reverse()) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// replaces with \"\\\\$&\", this prepends a backslash to the matched string, e.g. \"[\" becomes \"\\[\"\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult) {\n\t\t\tfor (const handler of route.middlewares.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: mountMatchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t// Then look for the first exact route match and execute its \"modules\"\n\tfor (const route of routes) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: true,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult && route.modules.length) {\n\t\t\tfor (const handler of route.modules.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: matchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default {\n\tasync fetch(\n\t\toriginalRequest: Request,\n\t\tenv: FetchEnv,\n\t\tworkerContext: WorkerContext\n\t) {\n\t\tlet request = originalRequest;\n\t\tconst handlerIterator = executeRequest(request);\n\t\tlet data = {}; // arbitrary data the user can set between functions\n\t\tlet isFailOpen = false;\n\n\t\tconst next = async (input?: RequestInfo, init?: RequestInit) => {\n\t\t\tif (input !== undefined) {\n\t\t\t\tlet url = input;\n\t\t\t\tif (typeof input === \"string\") {\n\t\t\t\t\turl = new URL(input, request.url).toString();\n\t\t\t\t}\n\t\t\t\trequest = new Request(url, init);\n\t\t\t}\n\n\t\t\tconst result = handlerIterator.next();\n\t\t\t// Note we can't use `!result.done` because this doesn't narrow to the correct type\n\t\t\tif (result.done === false) {\n\t\t\t\tconst { handler, params, path } = result.value;\n\t\t\t\tconst context = {\n\t\t\t\t\trequest: new Request(request.clone()),\n\t\t\t\t\tfunctionPath: path,\n\t\t\t\t\tnext,\n\t\t\t\t\tparams,\n\t\t\t\t\tget data() {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t},\n\t\t\t\t\tset data(value) {\n\t\t\t\t\t\tif (typeof value !== \"object\" || value === null) {\n\t\t\t\t\t\t\tthrow new Error(\"context.data must be an object\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// user has overriden context.data, so we need to merge it with the existing data\n\t\t\t\t\t\tdata = value;\n\t\t\t\t\t},\n\t\t\t\t\tenv,\n\t\t\t\t\twaitUntil: workerContext.waitUntil.bind(workerContext),\n\t\t\t\t\tpassThroughOnException: () => {\n\t\t\t\t\t\tisFailOpen = true;\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst response = await handler(context);\n\n\t\t\t\tif (!(response instanceof Response)) {\n\t\t\t\t\tthrow new Error(\"Your Pages function should return a Response\");\n\t\t\t\t}\n\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else if (__FALLBACK_SERVICE__) {\n\t\t\t\t// There are no more handlers so finish with the fallback service (`env.ASSETS.fetch` in Pages' case)\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else {\n\t\t\t\t// There was not fallback service so actually make the request to the origin.\n\t\t\t\tconst response = await fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\treturn await next();\n\t\t} catch (error) {\n\t\t\tif (isFailOpen) {\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t},\n};\n\n// This makes a Response mutable\nconst cloneResponse = (response: Response) =>\n\t// https://fetch.spec.whatwg.org/#null-body-status\n\tnew Response(\n\t\t[101, 204, 205, 304].includes(response.status) ? null : response.body,\n\t\tresponse\n\t);\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/mac/Progame/SuperSub/node_modules/wrangler/templates/pages-template-worker.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/mac/Progame/SuperSub/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/mac/Progame/SuperSub/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/mac/Progame/SuperSub/node_modules/wrangler/templates/pages-template-worker.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/mac/Progame/SuperSub/.wrangler/tmp/bundle-mTsvHt/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/mac/Progame/SuperSub/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/mac/Progame/SuperSub/.wrangler/tmp/bundle-mTsvHt/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/mac/Progame/SuperSub/.wrangler/tmp/bundle-mTsvHt/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/mac/Progame/SuperSub/.wrangler/tmp/pages-aDHk8c/functionsWorker-0.8303706488837967.mjs\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/mac/Progame/SuperSub/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/mac/Progame/SuperSub/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/mac/Progame/SuperSub/.wrangler/tmp/pages-aDHk8c/functionsWorker-0.8303706488837967.mjs\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/mac/Progame/SuperSub/.wrangler/tmp/bundle-dcyCgH/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/mac/Progame/SuperSub/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/mac/Progame/SuperSub/.wrangler/tmp/bundle-dcyCgH/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/mac/Progame/SuperSub/.wrangler/tmp/bundle-dcyCgH/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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,YAAY,WAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,WAAY,YAAY,WAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,WAAY,YAC5D,YAAY,WAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,WAAY,YAAY,YAAY,WAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,WAAY,YAAY,WAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,WAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,WAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,WAAY,YAC5D,YAAY,WAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,SAAY,WAC5D,WAAY,YAAY,WAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,WAAY,UAAY,YAAY,YAC5D,WAAY,YAAY,YAAY,YAAY,WAAY,YAC5D,YAAY,YAAY,WAAY,YAAY,WAAY,YAC5D,YAAY,WAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,WAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,UAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,WAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,UAAY,WAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,UAC5D,YAAY,YAAY,WAAY,YAAY,YAAY,YAC5D,YAAY,WAAY,WAAY,WAAY,YAAY,YAC5D,YAAY,WAAY,YAAY,YAAY,YAAY,YAC5D,WAAY,WAAY,YAAY,YAAY,YAAY,YAC5D,WAAY,WAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,WAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,WAAY,YAAY,WAC5D,WAAY,WAAY,YAAY,WAAY,YAAY,WAC5D,YAAY,YAAY,UAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,WAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,WAAY,YAC5D,YAAY,YAAY,WAAY,YAAY,YAAY,YAC5D,YAAY,WAAY,YAAY,WAAY,WAAY,WAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,UAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,WAAY,YAAY,WAAY,WAC5D,YAAY,YAAY,WAAY,YAAY,UAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,WAAY,YAAY,YAC5D,YAAY,YAAY,WAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,WAAY,WAC5D,WAAY,YAAY,YAAY,YAAY,YAAY,WAC5D,YAAY,WAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,WAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,WAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,WAAY,YAC5D,WAAY,WAAY,YAAY,WAAY,WAAY,WAC5D,WAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,WAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,WAAY,YAAY,WAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,WAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,WAC5D,YAAY,YAAY,WAAY,YAAY,WAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,UAC5D,YAAY,WAAY,YAAY,YAAY,YAAY,YAC5D,WAAY,YAAY,WAAY,YAAY,YAAY,YAC5D,YAAY,WAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,WAAY,YAC5D,YAAY,WAAY,WAAY,YAAY,WAAY,YAC5D,WAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,WAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,UAAY,YAAY,UAC5D,YAAY,YAAY,YAAY,YAAY,WAAY,YAC5D,YAAY,YAAY,WAAY,YAAY,YAAY,YAC5D,WAAY,YAAY,YAAY,WAAY,WAAY,UAC5D,YAAY,YAAY,YAAY,WAAY,WAAY,YAC5D,YAAY,YAAY,YAAY,WAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,WAAY,YAAY,WAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,WAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,WAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,WAAY,YAAY,YAAY,YAAY,WAAY,YAC5D,WAAY,WAAY,YAAY,YAAY,YAAY,WAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,WAC5D,YAAY,YAAY,YAAY,YAAY,WAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,WAC5D,YAAY,WAAY,WAAY,WAAY,YAAY,WAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,WAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,SAAY,WAAY,WAAY,WAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,WAAY,YAAY,YAAY,YAC5D,WAAY,YAAY,YAAY,WAAY,YAAY,YAC5D,WAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,WAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,WAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,WAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,WAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,WAAY,YAC5D,YAAY,YAAY,YAAY,YAAY,YAAY,YAC5D,YAAY,YAAY,YAAY,WAAY,YAAY,YAC5D,WAAY,UAAY,YAAY,UAAY,YAAY,YAC5D,WAAY,YAAY,YAAY,YAAY,YAA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",
  "names": ["__name", "match", "j", "v", "raw", "k", "v2", "p", "m", "app", "subApp", "b", "_", "routes", "Node", "Hono", "nextTick", "BCRYPT_SALT_LEN", "GENERATE_SALT_DEFAULT_LOG2_ROUNDS", "BLOWFISH_NUM_ROUNDS", "MAX_EXECUTION_TIME", "BASE64_CODE", "BASE64_INDEX", "P_ORIG", "S_ORIG", "C_ORIG", "encodeBase64", "byteArray", "length", "off", "c1", "c2", "result", "decodeBase64", "contentString", "stringLength", "olen", "c3", "c4", "o", "code", "item", "encipher", "lr", "P", "S", "n", "l", "r", "streamToWord", "data", "offp", "word", "i", "key", "pLength", "sLength", "sw", "expensiveKeyScheduleBlowFish", "crypt", "bytes", "salt", "rounds", "sync", "progressCallback", "cdata", "cLength", "round", "next", "start", "resolve", "random", "array", "getIllegalArgumentsTypeError", "args", "arg", "genSaltSync", "genSalt", "reject", "err", "getUTF8ByteLength", "content", "charCodePoint", "convertToUFT8Bytes", "offset", "buffer", "_hash", "minor", "roundText", "realSalt", "passwordBytes", "saltBytes", "finish", "hash", "compare", "hashAsync", "comp", "x", "y", "verifyWithJwks", "verify", "decode", "sign", "regex", "parse", "value", "_a", "char", "prefix", "drainBody", "middleware_ensure_req_body_drained_default", "reduceError", "jsonError", "middleware_miniflare3_json_error_default", "__INTERNAL_WRANGLER_MIDDLEWARE__", "middleware_ensure_req_body_drained_default", "middleware_miniflare3_json_error_default", "middleware_insertion_facade_default", "__facade_middleware__", "__facade_register__", "__facade_invokeChain__", "__facade_invoke__", "__facade_middleware__", "__Facade_ScheduledController__", "___Facade_ScheduledController__", "wrapExportedHandler", "__INTERNAL_WRANGLER_MIDDLEWARE__", "__facade_register__", "__facade_invoke__", "wrapWorkerEntrypoint", "WRAPPED_ENTRY", "middleware_insertion_facade_default", "middleware_loader_entry_default"]
}
